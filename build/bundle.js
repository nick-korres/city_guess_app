!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=49)}([function(e,t,n){"use strict";e.exports=n(22)},function(e,t,n){var r=n(31),o=n(32),i=n(33),a=n(35);e.exports=function(e,t){return r(e)||o(e,t)||i(e,t)||a()}},function(e,t){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},function(e,t){e.exports=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e,t,n){e.exports=n(26)},function(e,t,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function l(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function u(e,t){for(var n={},r=[],o=0;o<e.length;o++){var i=e[o],u=t.base?i[0]+t.base:i[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=l(s),d={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(a[f].references++,a[f].updater(d)):a.push({identifier:s,updater:v(d,t),references:1}),r.push(s)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var s,f=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function d(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function p(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,m=0;function v(e,t){var n,r,o;if(t.singleton){var i=m++;n=h||(h=c(t)),r=d.bind(null,n,i,!1),o=d.bind(null,n,i,!0)}else n=c(t),r=p.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=l(n[r]);a[o].references--}for(var i=u(e,t),c=0;c<n.length;c++){var s=l(n[c]);0===a[s].references&&(a[s].updater(),a.splice(s,1))}n=i}}}},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(u," */")),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}var a,l,u;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&o[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},function(e,t,n){e.exports=n(44)()},function(e,t){function n(e,t,n,r,o,i,a){try{var l=e[i](a),u=l.value}catch(e){return void n(e)}l.done?t(u):Promise.resolve(u).then(r,o)}e.exports=function(e){return function(){var t=this,r=arguments;return new Promise((function(o,i){var a=e.apply(t,r);function l(e){n(a,o,i,l,u,"next",e)}function u(e){n(a,o,i,l,u,"throw",e)}l(void 0)}))}}},,function(e,t){function n(t){return e.exports=n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},n(t)}e.exports=n},function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){var r=n(47);e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(a,p),a=p+f.length,d)l+=d[1];else{var h=e[a],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,E="?"===b||"*"===b,T=n[2]||s,S=y||g;r.push({name:v||i++,prefix:m||"",delimiter:T,optional:E,repeat:k,partial:x,asterisk:!!w,pattern:S?c(S):w?".*":"[^"+u(T)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var i="",l=t||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),a+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+a,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(i(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=a(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)i.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){"use strict";e.exports=n(48)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(23)},function(e,t){e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t){function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.exports=function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}},function(e,t,n){var r=n(27),o=n(2);e.exports=function(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?o(e):t}},function(e,t,n){var r=n(28);e.exports=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(46))},function(e,t,n){"use strict";var r=n(14),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=u(t),m=u(n),v=0;v<a.length;++v){var y=a[v];if(!(i[y]||r&&r[y]||m&&m[y]||l&&l[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(13),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,m=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}function x(){}function k(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(y(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var E=k.prototype=new x;E.constructor=k,r(E,w.prototype),E.isPureReactComponent=!0;var T={current:null},S=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)S.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:T.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,N=[];function R(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function L(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+z(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+z(l=t[c],c);u+=e(l,s,r,o)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+z(l,c++),r,o);else if("object"===l)throw r=""+t,Error(y(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function j(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,(function(e){return e})):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),L(e,I,t=R(t,i,r,o)),M(t)}var A={current:null};function D(){var e=A.current;if(null===e)throw Error(y(321));return e}var U={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:T,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;L(e,j,t=R(null,null,t,n)),M(t)},count:function(e){return L(e,(function(){return null}),null)},toArray:function(e){var t=[];return F(e,t,null,(function(e){return e})),t},only:function(e){if(!_(e))throw Error(y(143));return e}},t.Component=w,t.Fragment=l,t.Profiler=c,t.PureComponent=k,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,n){if(null==e)throw Error(y(267,e));var o=r({},e.props),a=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=T.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)S.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:a,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return D().useCallback(e,t)},t.useContext=function(e,t){return D().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return D().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return D().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return D().useLayoutEffect(e,t)},t.useMemo=function(e,t){return D().useMemo(e,t)},t.useReducer=function(e,t,n){return D().useReducer(e,t,n)},t.useRef=function(e){return D().useRef(e)},t.useState=function(e){return D().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(13),i=n(24);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));function l(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,a,s,f){u=!1,c=null,l.apply(d,arguments)}var h=null,m=null,v=null;function y(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,o,i,l,d,h){if(p.apply(this,arguments),u){if(!u)throw Error(a(198));var m=c;u=!1,c=null,s||(s=!0,f=m)}}(r,t,void 0,e),e.currentTarget=null}var g=null,b={};function w(){if(g)for(var e in b){var t=b[e],n=g.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!k[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in k[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;if(E.hasOwnProperty(u))throw Error(a(99,u));E[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&x(c[o],l,u);o=!0}else i.registrationName?(x(i.registrationName,l,u),o=!0):o=!1;if(!o)throw Error(a(98,r,e))}}}}function x(e,t,n){if(T[e])throw Error(a(100,e));T[e]=t,S[e]=t.eventTypes[n].dependencies}var k=[],E={},T={},S={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(a(102,t));b[t]=r,n=!0}}n&&w()}var P=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),_=null,O=null,N=null;function R(e){if(e=m(e)){if("function"!=typeof _)throw Error(a(280));var t=e.stateNode;t&&(t=h(t),_(e.stateNode,e.type,t))}}function M(e){O?N?N.push(e):N=[e]:O=e}function L(){if(O){var e=O,t=N;if(N=O=null,R(e),t)for(e=0;e<t.length;e++)R(t[e])}}function z(e,t){return e(t)}function j(e,t,n,r,o){return e(t,n,r,o)}function I(){}var F=z,A=!1,D=!1;function U(){null===O&&null===N||(I(),L())}function $(e,t,n){if(D)return e(t,n);D=!0;try{return F(e,t,n)}finally{D=!1,U()}}var V=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,W=Object.prototype.hasOwnProperty,B={},H={};function Q(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){K[e]=new Q(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];K[t]=new Q(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){K[e]=new Q(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){K[e]=new Q(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){K[e]=new Q(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){K[e]=new Q(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){K[e]=new Q(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){K[e]=new Q(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){K[e]=new Q(e,5,!1,e.toLowerCase(),null,!1)}));var q=/[\-:]([a-z])/g;function Y(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(q,Y);K[t]=new Q(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(q,Y);K[t]=new Q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(q,Y);K[t]=new Q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){K[e]=new Q(e,1,!1,e.toLowerCase(),null,!1)})),K.xlinkHref=new Q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){K[e]=new Q(e,1,!1,e.toLowerCase(),null,!0)}));var G=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=K.hasOwnProperty(t)?K[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!W.call(H,e)||!W.call(B,e)&&(V.test(e)?H[e]=!0:(B[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}G.hasOwnProperty("ReactCurrentDispatcher")||(G.ReactCurrentDispatcher={current:null}),G.hasOwnProperty("ReactCurrentBatchConfig")||(G.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,Z="function"==typeof Symbol&&Symbol.for,ee=Z?Symbol.for("react.element"):60103,te=Z?Symbol.for("react.portal"):60106,ne=Z?Symbol.for("react.fragment"):60107,re=Z?Symbol.for("react.strict_mode"):60108,oe=Z?Symbol.for("react.profiler"):60114,ie=Z?Symbol.for("react.provider"):60109,ae=Z?Symbol.for("react.context"):60110,le=Z?Symbol.for("react.concurrent_mode"):60111,ue=Z?Symbol.for("react.forward_ref"):60112,ce=Z?Symbol.for("react.suspense"):60113,se=Z?Symbol.for("react.suspense_list"):60120,fe=Z?Symbol.for("react.memo"):60115,de=Z?Symbol.for("react.lazy"):60116,pe=Z?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ve(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ve(e.type);case pe:return ve(e.render);case de:if(e=1===e._status?e._result:null)return ve(e)}return null}function ye(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ve(e.type);n=null,r&&(n=ve(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(J,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ge(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function xe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function ke(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ge(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Te(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Se(e,t){Te(e,t);var n=ge(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Pe(e,t.type,n):t.hasOwnProperty("defaultValue")&&Pe(e,t.type,ge(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Pe(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ge(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ge(n)}}function Me(e,t){var n=ge(t.value),r=ge(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Le(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var ze="http://www.w3.org/1999/xhtml",je="http://www.w3.org/2000/svg";function Ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Fe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Ae,De=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==je||"innerHTML"in e)e.innerHTML=t;else{for((Ae=Ae||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Ae.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function $e(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ve={animationend:$e("Animation","AnimationEnd"),animationiteration:$e("Animation","AnimationIteration"),animationstart:$e("Animation","AnimationStart"),transitionend:$e("Transition","TransitionEnd")},We={},Be={};function He(e){if(We[e])return We[e];if(!Ve[e])return e;var t,n=Ve[e];for(t in n)if(n.hasOwnProperty(t)&&t in Be)return We[e]=n[t];return e}P&&(Be=document.createElement("div").style,"AnimationEvent"in window||(delete Ve.animationend.animation,delete Ve.animationiteration.animation,delete Ve.animationstart.animation),"TransitionEvent"in window||delete Ve.transitionend.transition);var Qe=He("animationend"),Ke=He("animationiteration"),qe=He("animationstart"),Ye=He("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Je(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ze(e)!==e)throw Error(a(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return tt(o),e;if(i===r)return tt(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function at(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)y(e,t[r],n[r]);else t&&y(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(ot(e,at),it)throw Error(a(95));if(s)throw e=f,s=!1,f=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!P)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var st=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>st.length&&st.push(e)}function dt(e,t,n,r){if(st.length){var o=st.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Pn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=ut(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,a=e.eventSystemFlags;0===n&&(a|=64);for(var l=null,u=0;u<k.length;u++){var c=k[u];c&&(c=c.extractEvents(r,t,i,o,a))&&(l=rt(l,c))}lt(l)}}function ht(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&Kt(e,t)}n.set(e,null)}}var mt,vt,yt,gt=!1,bt=[],wt=null,xt=null,kt=null,Et=new Map,Tt=new Map,St=[],Ct="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Pt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function _t(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Ot(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":xt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Nt(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=_t(t,n,r,o,i),null!==t&&(null!==(t=_n(t))&&vt(t)),e):(e.eventSystemFlags|=r,e)}function Rt(e){var t=Pn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=_n(t);return null!==n&&vt(n),e.blockedOn=t,!1}return!0}function Lt(e,t,n){Mt(e)&&n.delete(t)}function zt(){for(gt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=_n(e.blockedOn))&&mt(e);break}var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&Mt(wt)&&(wt=null),null!==xt&&Mt(xt)&&(xt=null),null!==kt&&Mt(kt)&&(kt=null),Et.forEach(Lt),Tt.forEach(Lt)}function jt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,zt)))}function It(e){function t(t){return jt(t,e)}if(0<bt.length){jt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&jt(wt,e),null!==xt&&jt(xt,e),null!==kt&&jt(kt,e),Et.forEach(t),Tt.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Rt(n),null===n.blockedOn&&St.shift()}var Ft={},At=new Map,Dt=new Map,Ut=["abort","abort",Qe,"animationEnd",Ke,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ye,"transitionEnd","waiting","waiting"];function $t(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Dt.set(r,t),At.set(r,i),Ft[o]=i}}$t("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),$t("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),$t(Ut,2);for(var Vt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Wt=0;Wt<Vt.length;Wt++)Dt.set(Vt[Wt],0);var Bt=i.unstable_UserBlockingPriority,Ht=i.unstable_runWithPriority,Qt=!0;function Kt(e,t){qt(t,e,!1)}function qt(e,t,n){var r=Dt.get(t);switch(void 0===r?2:r){case 0:r=Yt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Xt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Yt(e,t,n,r){A||I();var o=Xt,i=A;A=!0;try{j(o,e,t,n,r)}finally{(A=i)||U()}}function Gt(e,t,n,r){Ht(Bt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){if(Qt)if(0<bt.length&&-1<Ct.indexOf(e))e=_t(null,e,t,n,r),bt.push(e);else{var o=Jt(e,t,n,r);if(null===o)Ot(e,r);else if(-1<Ct.indexOf(e))e=_t(o,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return wt=Nt(wt,e,t,n,r,o),!0;case"dragenter":return xt=Nt(xt,e,t,n,r,o),!0;case"mouseover":return kt=Nt(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return Et.set(i,Nt(Et.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Tt.set(i,Nt(Tt.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Ot(e,r),e=dt(e,r,null,t);try{$(pt,e)}finally{ft(e)}}}}function Jt(e,t,n,r){if(null!==(n=Pn(n=ut(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=et(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=dt(e,r,n,t);try{$(pt,e)}finally{ft(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var rn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function an(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=ze;function un(e,t){var n=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)ht(t[r],e,n)}function cn(){}function sn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=sn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=sn((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mn=null,vn=null;function yn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function xn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function kn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var En=Math.random().toString(36).slice(2),Tn="__reactInternalInstance$"+En,Sn="__reactEventHandlers$"+En,Cn="__reactContainere$"+En;function Pn(e){var t=e[Tn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Cn]||n[Tn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=kn(e);null!==e;){if(n=e[Tn])return n;e=kn(e)}return t}n=(e=n).parentNode}return null}function _n(e){return!(e=e[Tn]||e[Cn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function On(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Nn(e){return e[Sn]||null}function Rn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Mn(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}function Ln(e,t,n){(t=Mn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function zn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Rn(t);for(t=n.length;0<t--;)Ln(n[t],"captured",e);for(t=0;t<n.length;t++)Ln(n[t],"bubbled",e)}}function jn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Mn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function In(e){e&&e.dispatchConfig.registrationName&&jn(e._targetInst,null,e)}function Fn(e){ot(e,zn)}var An=null,Dn=null,Un=null;function $n(){if(Un)return Un;var e,t,n=Dn,r=n.length,o="value"in An?An.value:An.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return Un=o.slice(e,1<t?1-t:void 0)}function Vn(){return!0}function Wn(){return!1}function Bn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Vn:Wn,this.isPropagationStopped=Wn,this}function Hn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Qn(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Kn(e){e.eventPool=[],e.getPooled=Hn,e.release=Qn}o(Bn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Vn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Vn)},persist:function(){this.isPersistent=Vn},isPersistent:Wn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Wn,this._dispatchInstances=this._dispatchListeners=null}}),Bn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Bn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Kn(n),n},Kn(Bn);var qn=Bn.extend({data:null}),Yn=Bn.extend({data:null}),Gn=[9,13,27,32],Xn=P&&"CompositionEvent"in window,Jn=null;P&&"documentMode"in document&&(Jn=document.documentMode);var Zn=P&&"TextEvent"in window&&!Jn,er=P&&(!Xn||Jn&&8<Jn&&11>=Jn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,t){switch(e){case"keyup":return-1!==Gn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ar=!1;var lr={eventTypes:nr,extractEvents:function(e,t,n,r){var o;if(Xn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else ar?or(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(ar||i!==nr.compositionStart?i===nr.compositionEnd&&ar&&(o=$n()):(Dn="value"in(An=r)?An.value:An.textContent,ar=!0)),i=qn.getPooled(i,t,n,r),o?i.data=o:null!==(o=ir(n))&&(i.data=o),Fn(i),o=i):o=null,(e=Zn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ar)return"compositionend"===e||!Xn&&or(e,t)?(e=$n(),Un=Dn=An=null,ar=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Yn.getPooled(nr.beforeInput,t,n,r)).data=e,Fn(t)):t=null,null===o?t:null===t?o:[o,t]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ur[e.type]:"textarea"===t}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Bn.getPooled(sr.change,e,t,n)).type="change",M(n),Fn(e),e}var dr=null,pr=null;function hr(e){lt(e)}function mr(e){if(xe(On(e)))return e}function vr(e,t){if("change"===e)return t}var yr=!1;function gr(){dr&&(dr.detachEvent("onpropertychange",br),pr=dr=null)}function br(e){if("value"===e.propertyName&&mr(pr))if(e=fr(pr,e,ut(e)),A)lt(e);else{A=!0;try{z(hr,e)}finally{A=!1,U()}}}function wr(e,t,n){"focus"===e?(gr(),pr=n,(dr=t).attachEvent("onpropertychange",br)):"blur"===e&&gr()}function xr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return mr(pr)}function kr(e,t){if("click"===e)return mr(t)}function Er(e,t){if("input"===e||"change"===e)return mr(t)}P&&(yr=ct("input")&&(!document.documentMode||9<document.documentMode));var Tr={eventTypes:sr,_isInputEventSupported:yr,extractEvents:function(e,t,n,r){var o=t?On(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=vr;else if(cr(o))if(yr)a=Er;else{a=xr;var l=wr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=kr);if(a&&(a=a(e,t)))return fr(a,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Pe(o,"number",o.value)}},Sr=Bn.extend({view:null,detail:null}),Cr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cr[e])&&!!t[e]}function _r(){return Pr}var Or=0,Nr=0,Rr=!1,Mr=!1,Lr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:_r,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Or;return Or=e.screenX,Rr?"mousemove"===e.type?e.screenX-t:0:(Rr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Nr;return Nr=e.screenY,Mr?"mousemove"===e.type?e.screenY-t:0:(Mr=!0,0)}}),zr=Lr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),jr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Ir={eventTypes:jr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,a)?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?Pn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):a=null;if(a===t)return null;if("mouseout"===e||"mouseover"===e)var l=Lr,u=jr.mouseLeave,c=jr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=zr,u=jr.pointerLeave,c=jr.pointerEnter,s="pointer");if(e=null==a?i:On(a),i=null==t?i:On(t),(u=l.getPooled(u,a,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=l.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=a)&&s)e:{for(c=s,a=0,e=l=r;e;e=Rn(e))a++;for(e=0,t=c;t;t=Rn(t))e++;for(;0<a-e;)l=Rn(l),a--;for(;0<e-a;)c=Rn(c),e--;for(;a--;){if(l===c||l===c.alternate)break e;l=Rn(l),c=Rn(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(a=r.alternate)||a!==c);)l.push(r),r=Rn(r);for(r=[];s&&s!==c&&(null===(a=s.alternate)||a!==c);)r.push(s),s=Rn(s);for(s=0;s<l.length;s++)jn(l[s],"bubbled",u);for(s=r.length;0<s--;)jn(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}};var Fr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ar=Object.prototype.hasOwnProperty;function Dr(e,t){if(Fr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Ar.call(t,n[r])||!Fr(e[n[r]],t[n[r]]))return!1;return!0}var Ur=P&&"documentMode"in document&&11>=document.documentMode,$r={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Vr=null,Wr=null,Br=null,Hr=!1;function Qr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Hr||null==Vr||Vr!==sn(n)?null:("selectionStart"in(n=Vr)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Br&&Dr(Br,n)?null:(Br=n,(e=Bn.getPooled($r.select,Wr,e,t)).type="select",e.target=Vr,Fn(e),e))}var Kr={eventTypes:$r,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Je(o),i=S.onSelect;for(var a=0;a<i.length;a++)if(!o.has(i[a])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?On(t):window,e){case"focus":(cr(o)||"true"===o.contentEditable)&&(Vr=o,Wr=t,Br=null);break;case"blur":Br=Wr=Vr=null;break;case"mousedown":Hr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hr=!1,Qr(n,r);case"selectionchange":if(Ur)break;case"keydown":case"keyup":return Qr(n,r)}return null}},qr=Bn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Bn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Gr=Sr.extend({relatedTarget:null});function Xr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Jr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=Sr.extend({key:function(e){if(e.key){var t=Jr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Zr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:_r,charCode:function(e){return"keypress"===e.type?Xr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=Lr.extend({dataTransfer:null}),no=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:_r}),ro=Bn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=Lr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:Ft,extractEvents:function(e,t,n,r){var o=At.get(e);if(!o)return null;switch(e){case"keypress":if(0===Xr(n))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Gr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Lr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=no;break;case Qe:case Ke:case qe:e=qr;break;case Ye:e=ro;break;case"scroll":e=Sr;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=zr;break;default:e=Bn}return Fn(t=e.getPooled(o,t,n,r)),t}};if(g)throw Error(a(101));g=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),h=Nn,m=_n,v=On,C({SimpleEventPlugin:io,EnterLeaveEventPlugin:Ir,ChangeEventPlugin:Tr,SelectEventPlugin:Kr,BeforeInputEventPlugin:lr});var ao=[],lo=-1;function uo(e){0>lo||(e.current=ao[lo],ao[lo]=null,lo--)}function co(e,t){lo++,ao[lo]=e.current,e.current=t}var so={},fo={current:so},po={current:!1},ho=so;function mo(e,t){var n=e.type.contextTypes;if(!n)return so;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function vo(e){return null!=(e=e.childContextTypes)}function yo(){uo(po),uo(fo)}function go(e,t,n){if(fo.current!==so)throw Error(a(168));co(fo,t),co(po,n)}function bo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,ve(t)||"Unknown",i));return o({},n,{},r)}function wo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||so,ho=fo.current,co(fo,e),co(po,po.current),!0}function xo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=bo(e,t,ho),r.__reactInternalMemoizedMergedChildContext=e,uo(po),uo(fo),co(fo,e)):uo(po),co(po,n)}var ko=i.unstable_runWithPriority,Eo=i.unstable_scheduleCallback,To=i.unstable_cancelCallback,So=i.unstable_requestPaint,Co=i.unstable_now,Po=i.unstable_getCurrentPriorityLevel,_o=i.unstable_ImmediatePriority,Oo=i.unstable_UserBlockingPriority,No=i.unstable_NormalPriority,Ro=i.unstable_LowPriority,Mo=i.unstable_IdlePriority,Lo={},zo=i.unstable_shouldYield,jo=void 0!==So?So:function(){},Io=null,Fo=null,Ao=!1,Do=Co(),Uo=1e4>Do?Co:function(){return Co()-Do};function $o(){switch(Po()){case _o:return 99;case Oo:return 98;case No:return 97;case Ro:return 96;case Mo:return 95;default:throw Error(a(332))}}function Vo(e){switch(e){case 99:return _o;case 98:return Oo;case 97:return No;case 96:return Ro;case 95:return Mo;default:throw Error(a(332))}}function Wo(e,t){return e=Vo(e),ko(e,t)}function Bo(e,t,n){return e=Vo(e),Eo(e,t,n)}function Ho(e){return null===Io?(Io=[e],Fo=Eo(_o,Ko)):Io.push(e),Lo}function Qo(){if(null!==Fo){var e=Fo;Fo=null,To(e)}Ko()}function Ko(){if(!Ao&&null!==Io){Ao=!0;var e=0;try{var t=Io;Wo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Io=null}catch(t){throw null!==Io&&(Io=Io.slice(e+1)),Eo(_o,Qo),t}finally{Ao=!1}}}function qo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Yo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Go={current:null},Xo=null,Jo=null,Zo=null;function ei(){Zo=Jo=Xo=null}function ti(e){var t=Go.current;uo(Go),e.type._context._currentValue=t}function ni(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ri(e,t){Xo=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Na=!0),e.firstContext=null)}function oi(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Xo)throw Error(a(308));Jo=t,Xo.dependencies={expirationTime:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var ii=!1;function ai(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function li(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ui(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ci(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.alternate;null!==n&&li(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function fi(e,t,n,r){var i=e.updateQueue;ii=!1;var a=i.baseQueue,l=i.shared.pending;if(null!==l){if(null!==a){var u=a.next;a.next=l.next,l.next=u}a=l,i.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=l))}if(null!==a){u=a.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var h=u;;){if((l=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===p?(d=p=m,f=c):p=p.next=m,l>s&&(s=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),iu(l,h.suspenseConfig);e:{var v=e,y=h;switch(l=t,m=n,y.tag){case 1:if("function"==typeof(v=y.payload)){c=v.call(m,c,l);break e}c=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(l="function"==typeof(v=y.payload)?v.call(m,c,l):v))break e;c=o({},c,l);break e;case 2:ii=!0}}null!==h.callback&&(e.effectTag|=32,null===(l=i.effects)?i.effects=[h]:l.push(h))}if(null===(h=h.next)||h===u){if(null===(l=i.shared.pending))break;h=a.next=l.next,l.next=u,i.baseQueue=a=l,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,au(s),e.expirationTime=s,e.memoizedState=c}}function di(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(a(191,r));r.call(o)}}}var pi=G.ReactCurrentBatchConfig,hi=(new r.Component).refs;function mi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var vi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ql(),o=pi.suspense;(o=ui(r=Kl(r,e,o),o)).payload=t,null!=n&&(o.callback=n),ci(e,o),ql(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ql(),o=pi.suspense;(o=ui(r=Kl(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),ci(e,o),ql(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ql(),r=pi.suspense;(r=ui(n=Kl(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ci(e,r),ql(e,n)}};function yi(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!Dr(n,r)||!Dr(o,i))}function gi(e,t,n){var r=!1,o=so,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=vo(t)?ho:fo.current,i=(r=null!=(r=t.contextTypes))?mo(e,o):so),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function bi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vi.enqueueReplaceState(t,t.state,null)}function wi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=hi,ai(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=vo(t)?ho:fo.current,o.context=mo(e,i)),fi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(mi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&vi.enqueueReplaceState(o,o.state,null),fi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var xi=Array.isArray;function ki(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===hi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Ei(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ti(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Cu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Ou(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=ki(e,t,n),r.return=e,r):((r=Pu(n.type,n.key,n.props,null,e.mode,r)).ref=ki(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Nu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=_u(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ou(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Pu(t.type,t.key,t.props,null,e.mode,n)).ref=ki(e,null,t),n.return=e,n;case te:return(t=Nu(t,e.mode,n)).return=e,t}if(xi(t)||me(t))return(t=_u(t,e.mode,n,null)).return=e,t;Ei(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(xi(n)||me(n))return null!==o?null:f(e,t,n,r,null);Ei(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(xi(r)||me(r))return f(t,e=e.get(n)||null,r,o,null);Ei(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,f=a,m=a=0,v=null;null!==f&&m<l.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(o,f,l[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)null!==(f=d(o,l[m],u))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)null!==(v=h(f,o,m,l[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=me(u);if("function"!=typeof s)throw Error(a(150));if(null==(u=s.call(u)))throw Error(a(151));for(var f=s=null,m=l,v=l=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(o,m,g.value,c);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(o,g.value,c))&&(l=i(g,l,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;v++,g=u.next())null!==(g=h(m,o,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),l=i(g,l,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=ki(e,c,i),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=_u(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Pu(i.type,i.key,i.props,null,e.mode,u)).ref=ki(e,r,i),u.return=e,e=u)}return l(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Nu(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Ou(i,e.mode,u)).return=e,e=r),l(e);if(xi(i))return m(e,r,i,u);if(me(i))return v(e,r,i,u);if(s&&Ei(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Si=Ti(!0),Ci=Ti(!1),Pi={},_i={current:Pi},Oi={current:Pi},Ni={current:Pi};function Ri(e){if(e===Pi)throw Error(a(174));return e}function Mi(e,t){switch(co(Ni,t),co(Oi,e),co(_i,Pi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Fe(null,"");break;default:t=Fe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}uo(_i),co(_i,t)}function Li(){uo(_i),uo(Oi),uo(Ni)}function zi(e){Ri(Ni.current);var t=Ri(_i.current),n=Fe(t,e.type);t!==n&&(co(Oi,e),co(_i,n))}function ji(e){Oi.current===e&&(uo(_i),uo(Oi))}var Ii={current:0};function Fi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ai(e,t){return{responder:e,props:t}}var Di=G.ReactCurrentDispatcher,Ui=G.ReactCurrentBatchConfig,$i=0,Vi=null,Wi=null,Bi=null,Hi=!1;function Qi(){throw Error(a(321))}function Ki(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Fr(e[n],t[n]))return!1;return!0}function qi(e,t,n,r,o,i){if($i=i,Vi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Di.current=null===e||null===e.memoizedState?ya:ga,e=n(r,o),t.expirationTime===$i){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(a(301));i+=1,Bi=Wi=null,t.updateQueue=null,Di.current=ba,e=n(r,o)}while(t.expirationTime===$i)}if(Di.current=va,t=null!==Wi&&null!==Wi.next,$i=0,Bi=Wi=Vi=null,Hi=!1,t)throw Error(a(300));return e}function Yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Bi?Vi.memoizedState=Bi=e:Bi=Bi.next=e,Bi}function Gi(){if(null===Wi){var e=Vi.alternate;e=null!==e?e.memoizedState:null}else e=Wi.next;var t=null===Bi?Vi.memoizedState:Bi.next;if(null!==t)Bi=t,Wi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Wi=e).memoizedState,baseState:Wi.baseState,baseQueue:Wi.baseQueue,queue:Wi.queue,next:null},null===Bi?Vi.memoizedState=Bi=e:Bi=Bi.next=e}return Bi}function Xi(e,t){return"function"==typeof t?t(e):t}function Ji(e){var t=Gi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Wi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=i=null,c=o;do{var s=c.expirationTime;if(s<$i){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,i=r):u=u.next=f,s>Vi.expirationTime&&(Vi.expirationTime=s,au(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),iu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=l,Fr(r,t.memoizedState)||(Na=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Zi(e){var t=Gi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);Fr(i,t.memoizedState)||(Na=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ea(e){var t=Yi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Xi,lastRenderedState:e}).dispatch=ma.bind(null,Vi,e),[t.memoizedState,e]}function ta(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Vi.updateQueue)?(t={lastEffect:null},Vi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function na(){return Gi().memoizedState}function ra(e,t,n,r){var o=Yi();Vi.effectTag|=e,o.memoizedState=ta(1|t,n,void 0,void 0===r?null:r)}function oa(e,t,n,r){var o=Gi();r=void 0===r?null:r;var i=void 0;if(null!==Wi){var a=Wi.memoizedState;if(i=a.destroy,null!==r&&Ki(r,a.deps))return void ta(t,n,i,r)}Vi.effectTag|=e,o.memoizedState=ta(1|t,n,i,r)}function ia(e,t){return ra(516,4,e,t)}function aa(e,t){return oa(516,4,e,t)}function la(e,t){return oa(4,2,e,t)}function ua(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ca(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,2,ua.bind(null,t,e),n)}function sa(){}function fa(e,t){return Yi().memoizedState=[e,void 0===t?null:t],e}function da(e,t){var n=Gi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pa(e,t){var n=Gi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ha(e,t,n){var r=$o();Wo(98>r?98:r,(function(){e(!0)})),Wo(97<r?97:r,(function(){var r=Ui.suspense;Ui.suspense=void 0===t?null:t;try{e(!1),n()}finally{Ui.suspense=r}}))}function ma(e,t,n){var r=Ql(),o=pi.suspense;o={expirationTime:r=Kl(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Vi||null!==i&&i===Vi)Hi=!0,o.expirationTime=$i,Vi.expirationTime=$i;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var a=t.lastRenderedState,l=i(a,n);if(o.eagerReducer=i,o.eagerState=l,Fr(l,a))return}catch(e){}ql(e,r)}}var va={readContext:oi,useCallback:Qi,useContext:Qi,useEffect:Qi,useImperativeHandle:Qi,useLayoutEffect:Qi,useMemo:Qi,useReducer:Qi,useRef:Qi,useState:Qi,useDebugValue:Qi,useResponder:Qi,useDeferredValue:Qi,useTransition:Qi},ya={readContext:oi,useCallback:fa,useContext:oi,useEffect:ia,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,2,ua.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,2,e,t)},useMemo:function(e,t){var n=Yi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Yi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ma.bind(null,Vi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Yi().memoizedState=e},useState:ea,useDebugValue:sa,useResponder:Ai,useDeferredValue:function(e,t){var n=ea(e),r=n[0],o=n[1];return ia((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ea(!1),n=t[0];return t=t[1],[fa(ha.bind(null,t,e),[t,e]),n]}},ga={readContext:oi,useCallback:da,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Ji,useRef:na,useState:function(){return Ji(Xi)},useDebugValue:sa,useResponder:Ai,useDeferredValue:function(e,t){var n=Ji(Xi),r=n[0],o=n[1];return aa((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ji(Xi),n=t[0];return t=t[1],[da(ha.bind(null,t,e),[t,e]),n]}},ba={readContext:oi,useCallback:da,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Zi,useRef:na,useState:function(){return Zi(Xi)},useDebugValue:sa,useResponder:Ai,useDeferredValue:function(e,t){var n=Zi(Xi),r=n[0],o=n[1];return aa((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zi(Xi),n=t[0];return t=t[1],[da(ha.bind(null,t,e),[t,e]),n]}},wa=null,xa=null,ka=!1;function Ea(e,t){var n=Tu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ta(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Sa(e){if(ka){var t=xa;if(t){var n=t;if(!Ta(e,t)){if(!(t=xn(n.nextSibling))||!Ta(e,t))return e.effectTag=-1025&e.effectTag|2,ka=!1,void(wa=e);Ea(wa,n)}wa=e,xa=xn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,ka=!1,wa=e}}function Ca(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wa=e}function Pa(e){if(e!==wa)return!1;if(!ka)return Ca(e),ka=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gn(t,e.memoizedProps))for(t=xa;t;)Ea(e,t),t=xn(t.nextSibling);if(Ca(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){xa=xn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}xa=null}}else xa=wa?xn(e.stateNode.nextSibling):null;return!0}function _a(){xa=wa=null,ka=!1}var Oa=G.ReactCurrentOwner,Na=!1;function Ra(e,t,n,r){t.child=null===e?Ci(t,null,n,r):Si(t,e.child,n,r)}function Ma(e,t,n,r,o){n=n.render;var i=t.ref;return ri(t,o),r=qi(e,t,n,r,i,o),null===e||Na?(t.effectTag|=1,Ra(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),qa(e,t,o))}function La(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Su(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Pu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,za(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:Dr)(o,r)&&e.ref===t.ref)?qa(e,t,i):(t.effectTag|=1,(e=Cu(a,r)).ref=t.ref,e.return=t,t.child=e)}function za(e,t,n,r,o,i){return null!==e&&Dr(e.memoizedProps,r)&&e.ref===t.ref&&(Na=!1,o<i)?(t.expirationTime=e.expirationTime,qa(e,t,i)):Ia(e,t,n,r,i)}function ja(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ia(e,t,n,r,o){var i=vo(n)?ho:fo.current;return i=mo(t,i),ri(t,o),n=qi(e,t,n,r,i,o),null===e||Na?(t.effectTag|=1,Ra(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),qa(e,t,o))}function Fa(e,t,n,r,o){if(vo(n)){var i=!0;wo(t)}else i=!1;if(ri(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),gi(t,n,r),wi(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=oi(c):c=mo(t,c=vo(n)?ho:fo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&bi(t,a,r,c),ii=!1;var d=t.memoizedState;a.state=d,fi(t,r,a,o),u=t.memoizedState,l!==r||d!==u||po.current||ii?("function"==typeof s&&(mi(t,n,s,r),u=t.memoizedState),(l=ii||yi(t,n,l,r,d,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,li(e,t),l=t.memoizedProps,a.props=t.type===t.elementType?l:Yo(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=oi(c):c=mo(t,c=vo(n)?ho:fo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&bi(t,a,r,c),ii=!1,u=t.memoizedState,a.state=u,fi(t,r,a,o),d=t.memoizedState,l!==r||u!==d||po.current||ii?("function"==typeof s&&(mi(t,n,s,r),d=t.memoizedState),(s=ii||yi(t,n,l,r,u,d,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Aa(e,t,n,r,i,o)}function Aa(e,t,n,r,o,i){ja(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&xo(t,n,!1),qa(e,t,i);r=t.stateNode,Oa.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Si(t,e.child,null,i),t.child=Si(t,null,l,i)):Ra(e,t,l,i),t.memoizedState=r.state,o&&xo(t,n,!0),t.child}function Da(e){var t=e.stateNode;t.pendingContext?go(0,t.pendingContext,t.pendingContext!==t.context):t.context&&go(0,t.context,!1),Mi(e,t.containerInfo)}var Ua,$a,Va,Wa={dehydrated:null,retryTime:0};function Ba(e,t,n){var r,o=t.mode,i=t.pendingProps,a=Ii.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),co(Ii,1&a),null===e){if(void 0!==i.fallback&&Sa(t),l){if(l=i.fallback,(i=_u(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_u(l,o,n,null)).return=t,i.sibling=n,t.memoizedState=Wa,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ci(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(n=Cu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Cu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Wa,t.child=n,o}return n=Si(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=i.fallback,(i=_u(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_u(l,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Wa,t.child=i,n}return t.memoizedState=null,t.child=Si(t,e,i.children,n)}function Ha(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ni(e.return,t)}function Qa(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function Ka(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Ra(e,t,r.children,n),0!=(2&(r=Ii.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ha(e,n);else if(19===e.tag)Ha(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(co(Ii,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Fi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Qa(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Fi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Qa(t,!0,n,null,i,t.lastEffect);break;case"together":Qa(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function qa(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&au(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Cu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Cu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ya(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ga(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return vo(t.type)&&yo(),null;case 3:return Li(),uo(po),uo(fo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Pa(t)||(t.effectTag|=4),null;case 5:ji(t),n=Ri(Ni.current);var i=t.type;if(null!==e&&null!=t.stateNode)$a(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Ri(_i.current),Pa(t)){r=t.stateNode,i=t.type;var l=t.memoizedProps;switch(r[Tn]=t,r[Sn]=l,i){case"iframe":case"object":case"embed":Kt("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)Kt(Ge[e],r);break;case"source":Kt("error",r);break;case"img":case"image":case"link":Kt("error",r),Kt("load",r);break;case"form":Kt("reset",r),Kt("submit",r);break;case"details":Kt("toggle",r);break;case"input":Ee(r,l),Kt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Kt("invalid",r),un(n,"onChange");break;case"textarea":Re(r,l),Kt("invalid",r),un(n,"onChange")}for(var u in on(i,l),e=null,l)if(l.hasOwnProperty(u)){var c=l[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):T.hasOwnProperty(u)&&null!=c&&un(n,u)}switch(i){case"input":we(r),Ce(r,l,!0);break;case"textarea":we(r),Le(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Ie(i)),e===ln?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[Tn]=t,e[Sn]=r,Ua(e,t),t.stateNode=e,u=an(i,r),i){case"iframe":case"object":case"embed":Kt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ge.length;c++)Kt(Ge[c],e);c=r;break;case"source":Kt("error",e),c=r;break;case"img":case"image":case"link":Kt("error",e),Kt("load",e),c=r;break;case"form":Kt("reset",e),Kt("submit",e),c=r;break;case"details":Kt("toggle",e),c=r;break;case"input":Ee(e,r),c=ke(e,r),Kt("invalid",e),un(n,"onChange");break;case"option":c=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),Kt("invalid",e),un(n,"onChange");break;case"textarea":Re(e,r),c=Ne(e,r),Kt("invalid",e),un(n,"onChange");break;default:c=r}on(i,c);var s=c;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?nn(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&De(e,f):"children"===l?"string"==typeof f?("textarea"!==i||""!==f)&&Ue(e,f):"number"==typeof f&&Ue(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(T.hasOwnProperty(l)?null!=f&&un(n,l):null!=f&&X(e,l,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),Le(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ge(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}yn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Va(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Ri(Ni.current),Ri(_i.current),Pa(t)?(n=t.stateNode,r=t.memoizedProps,n[Tn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Tn]=t,t.stateNode=n)}return null;case 13:return uo(Ii),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Pa(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=i,i.nextEffect=l):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ii.current)?Pl===wl&&(Pl=xl):(Pl!==wl&&Pl!==xl||(Pl=kl),0!==Ml&&null!==Tl&&(Lu(Tl,Cl),zu(Tl,Ml)))),(n||r)&&(t.effectTag|=4),null);case 4:return Li(),null;case 10:return ti(t),null;case 17:return vo(t.type)&&yo(),null;case 19:if(uo(Ii),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(l=r.rendering)){if(i)Ya(r,!1);else if(Pl!==wl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=Fi(l))){for(t.effectTag|=64,Ya(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=l,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,l=e.dependencies,i.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return co(Ii,1&Ii.current|2),t.child}l=l.sibling}}else{if(!i)if(null!==(e=Fi(l))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ya(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Uo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Ya(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Uo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Uo(),n.sibling=null,t=Ii.current,co(Ii,i?1&t|2:1&t),n):null}throw Error(a(156,t.tag))}function Xa(e){switch(e.tag){case 1:vo(e.type)&&yo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Li(),uo(po),uo(fo),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return ji(e),null;case 13:return uo(Ii),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return uo(Ii),null;case 4:return Li(),null;case 10:return ti(e),null;default:return null}}function Ja(e,t){return{value:e,source:t,stack:ye(t)}}Ua=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},$a=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l,u,c=t.stateNode;switch(Ri(_i.current),e=null,n){case"input":a=ke(c,a),r=ke(c,r),e=[];break;case"option":a=_e(c,a),r=_e(c,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Ne(c,a),r=Ne(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(l in on(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(u in c=a[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(T.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(T.hasOwnProperty(l)?(null!=s&&un(i,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Va=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Za="function"==typeof WeakSet?WeakSet:Set;function el(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ye(n)),null!==n&&ve(n.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){gu(e,t)}else t.current=null}function nl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Yo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ol(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function il(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ol(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Yo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&di(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}di(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&yn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&It(n)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function al(e,t,n){switch("function"==typeof ku&&ku(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Wo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){gu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:tl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){gu(e,t)}}(t,n);break;case 5:tl(t);break;case 4:sl(e,t,n)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function ul(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:{for(var t=e.return;null!==t;){if(ul(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(Ue(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ul(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function sl(e,t,n){for(var r,o,i=t,l=!1;;){if(!l){l=i.return;e:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(al(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(al(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function fl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Te(n,r),an(e,o),t=an(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?nn(n,u):"dangerouslySetInnerHTML"===l?De(n,u):"children"===l?Ue(n,u):X(n,l,u,t)}switch(e){case"input":Se(n,r);break;case"textarea":Me(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,It(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,zl=Uo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void dl(t);case 19:return void dl(t);case 17:return}throw Error(a(163))}function dl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Za),t.forEach((function(t){var r=wu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function hl(e,t,n){(n=ui(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Il||(Il=!0,Fl=r),el(e,t)},n}function ml(e,t,n){(n=ui(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return el(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Al?Al=new Set([this]):Al.add(this),el(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var vl,yl=Math.ceil,gl=G.ReactCurrentDispatcher,bl=G.ReactCurrentOwner,wl=0,xl=3,kl=4,El=0,Tl=null,Sl=null,Cl=0,Pl=wl,_l=null,Ol=1073741823,Nl=1073741823,Rl=null,Ml=0,Ll=!1,zl=0,jl=null,Il=!1,Fl=null,Al=null,Dl=!1,Ul=null,$l=90,Vl=null,Wl=0,Bl=null,Hl=0;function Ql(){return 0!=(48&El)?1073741821-(Uo()/10|0):0!==Hl?Hl:Hl=1073741821-(Uo()/10|0)}function Kl(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=$o();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&El))return Cl;if(null!==n)e=qo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=qo(e,150,100);break;case 97:case 96:e=qo(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==Tl&&e===Cl&&--e,e}function ql(e,t){if(50<Wl)throw Wl=0,Bl=null,Error(a(185));if(null!==(e=Yl(e,t))){var n=$o();1073741823===t?0!=(8&El)&&0==(48&El)?Zl(e):(Xl(e),0===El&&Qo()):Xl(e),0==(4&El)||98!==n&&99!==n||(null===Vl?Vl=new Map([[e,t]]):(void 0===(n=Vl.get(e))||n>t)&&Vl.set(e,t))}}function Yl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Tl===o&&(au(t),Pl===kl&&Lu(o,Cl)),zu(o,t)),o}function Gl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Mu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Xl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Ho(Zl.bind(null,e));else{var t=Gl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Ql();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Lo&&To(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Ho(Zl.bind(null,e)):Bo(r,Jl.bind(null,e),{timeout:10*(1073741821-t)-Uo()}),e.callbackNode=t}}}function Jl(e,t){if(Hl=0,t)return ju(e,t=Ql()),Xl(e),null;var n=Gl(e);if(0!==n){if(t=e.callbackNode,0!=(48&El))throw Error(a(327));if(mu(),e===Tl&&n===Cl||nu(e,n),null!==Sl){var r=El;El|=16;for(var o=ou();;)try{uu();break}catch(t){ru(e,t)}if(ei(),El=r,gl.current=o,1===Pl)throw t=_l,nu(e,n),Lu(e,n),Xl(e),t;if(null===Sl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Pl,Tl=null,r){case wl:case 1:throw Error(a(345));case 2:ju(e,2<n?2:n);break;case xl:if(Lu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),1073741823===Ol&&10<(o=zl+500-Uo())){if(Ll){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,nu(e,n);break}}if(0!==(i=Gl(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(du.bind(null,e),o);break}du(e);break;case kl:if(Lu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),Ll&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,nu(e,n);break}if(0!==(o=Gl(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Nl?r=10*(1073741821-Nl)-Uo():1073741823===Ol?r=0:(r=10*(1073741821-Ol)-5e3,0>(r=(o=Uo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*yl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(du.bind(null,e),r);break}du(e);break;case 5:if(1073741823!==Ol&&null!==Rl){i=Ol;var l=Rl;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(i=Uo()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Lu(e,n),e.timeoutHandle=bn(du.bind(null,e),r);break}}du(e);break;default:throw Error(a(329))}if(Xl(e),e.callbackNode===t)return Jl.bind(null,e)}}return null}function Zl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&El))throw Error(a(327));if(mu(),e===Tl&&t===Cl||nu(e,t),null!==Sl){var n=El;El|=16;for(var r=ou();;)try{lu();break}catch(t){ru(e,t)}if(ei(),El=n,gl.current=r,1===Pl)throw n=_l,nu(e,t),Lu(e,t),Xl(e),n;if(null!==Sl)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Tl=null,du(e),Xl(e)}return null}function eu(e,t){var n=El;El|=1;try{return e(t)}finally{0===(El=n)&&Qo()}}function tu(e,t){var n=El;El&=-2,El|=8;try{return e(t)}finally{0===(El=n)&&Qo()}}function nu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Sl)for(n=Sl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&yo();break;case 3:Li(),uo(po),uo(fo);break;case 5:ji(r);break;case 4:Li();break;case 13:case 19:uo(Ii);break;case 10:ti(r)}n=n.return}Tl=e,Sl=Cu(e.current,null),Cl=t,Pl=wl,_l=null,Nl=Ol=1073741823,Rl=null,Ml=0,Ll=!1}function ru(e,t){for(;;){try{if(ei(),Di.current=va,Hi)for(var n=Vi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if($i=0,Bi=Wi=Vi=null,Hi=!1,null===Sl||null===Sl.return)return Pl=1,_l=t,Sl=null;e:{var o=e,i=Sl.return,a=Sl,l=t;if(t=Cl,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l;if(0==(2&a.mode)){var c=a.alternate;c?(a.updateQueue=c.updateQueue,a.memoizedState=c.memoizedState,a.expirationTime=c.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var s=0!=(1&Ii.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var h=f.memoizedProps;d=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!s)}}if(d){var m=f.updateQueue;if(null===m){var v=new Set;v.add(u),f.updateQueue=v}else m.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var y=ui(1073741823,null);y.tag=2,ci(a,y)}a.expirationTime=1073741823;break e}l=void 0,a=t;var g=o.pingCache;if(null===g?(g=o.pingCache=new pl,l=new Set,g.set(u,l)):void 0===(l=g.get(u))&&(l=new Set,g.set(u,l)),!l.has(a)){l.add(a);var b=bu.bind(null,o,u,a);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);l=Error((ve(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ye(a))}5!==Pl&&(Pl=2),l=Ja(l,a),f=i;do{switch(f.tag){case 3:u=l,f.effectTag|=4096,f.expirationTime=t,si(f,hl(f,u,t));break e;case 1:u=l;var w=f.type,x=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===Al||!Al.has(x)))){f.effectTag|=4096,f.expirationTime=t,si(f,ml(f,u,t));break e}}f=f.return}while(null!==f)}Sl=su(Sl)}catch(e){t=e;continue}break}}function ou(){var e=gl.current;return gl.current=va,null===e?va:e}function iu(e,t){e<Ol&&2<e&&(Ol=e),null!==t&&e<Nl&&2<e&&(Nl=e,Rl=t)}function au(e){e>Ml&&(Ml=e)}function lu(){for(;null!==Sl;)Sl=cu(Sl)}function uu(){for(;null!==Sl&&!zo();)Sl=cu(Sl)}function cu(e){var t=vl(e.alternate,e,Cl);return e.memoizedProps=e.pendingProps,null===t&&(t=su(e)),bl.current=null,t}function su(e){Sl=e;do{var t=Sl.alternate;if(e=Sl.return,0==(2048&Sl.effectTag)){if(t=Ga(t,Sl,Cl),1===Cl||1!==Sl.childExpirationTime){for(var n=0,r=Sl.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Sl.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sl.firstEffect),null!==Sl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sl.firstEffect),e.lastEffect=Sl.lastEffect),1<Sl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sl:e.firstEffect=Sl,e.lastEffect=Sl))}else{if(null!==(t=Xa(Sl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sl.sibling))return t;Sl=e}while(null!==Sl);return Pl===wl&&(Pl=5),null}function fu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function du(e){var t=$o();return Wo(99,pu.bind(null,e,t)),null}function pu(e,t){do{mu()}while(null!==Ul);if(0!=(48&El))throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=fu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Tl&&(Sl=Tl=null,Cl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=El;El|=32,bl.current=null,mn=Qt;var l=pn();if(hn(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,h=-1,m=0,v=0,y=l,g=null;t:for(;;){for(var b;y!==u||0!==s&&3!==y.nodeType||(p=d+s),y!==f||0!==c&&3!==y.nodeType||(h=d+c),3===y.nodeType&&(d+=y.nodeValue.length),null!==(b=y.firstChild);)g=y,y=b;for(;;){if(y===l)break t;if(g===u&&++m===s&&(p=d),g===f&&++v===c&&(h=d),null!==(b=y.nextSibling))break;g=(y=g).parentNode}y=b}u=-1===p||-1===h?null:{start:p,end:h}}else u=null}u=u||{start:0,end:0}}else u=null;vn={activeElementDetached:null,focusedElem:l,selectionRange:u},Qt=!1,jl=o;do{try{hu()}catch(e){if(null===jl)throw Error(a(330));gu(jl,e),jl=jl.nextEffect}}while(null!==jl);jl=o;do{try{for(l=e,u=t;null!==jl;){var w=jl.effectTag;if(16&w&&Ue(jl.stateNode,""),128&w){var x=jl.alternate;if(null!==x){var k=x.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&w){case 2:cl(jl),jl.effectTag&=-3;break;case 6:cl(jl),jl.effectTag&=-3,fl(jl.alternate,jl);break;case 1024:jl.effectTag&=-1025;break;case 1028:jl.effectTag&=-1025,fl(jl.alternate,jl);break;case 4:fl(jl.alternate,jl);break;case 8:sl(l,s=jl,u),ll(s)}jl=jl.nextEffect}}catch(e){if(null===jl)throw Error(a(330));gu(jl,e),jl=jl.nextEffect}}while(null!==jl);if(k=vn,x=pn(),w=k.focusedElem,u=k.selectionRange,x!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&hn(w)&&(x=u.start,void 0===(k=u.end)&&(k=x),"selectionStart"in w?(w.selectionStart=x,w.selectionEnd=Math.min(k,w.value.length)):(k=(x=w.ownerDocument||document)&&x.defaultView||window).getSelection&&(k=k.getSelection(),s=w.textContent.length,l=Math.min(u.start,s),u=void 0===u.end?l:Math.min(u.end,s),!k.extend&&l>u&&(s=u,u=l,l=s),s=dn(w,l),f=dn(w,u),s&&f&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==f.node||k.focusOffset!==f.offset)&&((x=x.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),l>u?(k.addRange(x),k.extend(f.node,f.offset)):(x.setEnd(f.node,f.offset),k.addRange(x))))),x=[];for(k=w;k=k.parentNode;)1===k.nodeType&&x.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<x.length;w++)(k=x[w]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Qt=!!mn,vn=mn=null,e.current=n,jl=o;do{try{for(w=e;null!==jl;){var E=jl.effectTag;if(36&E&&il(w,jl.alternate,jl),128&E){x=void 0;var T=jl.ref;if(null!==T){var S=jl.stateNode;switch(jl.tag){case 5:x=S;break;default:x=S}"function"==typeof T?T(x):T.current=x}}jl=jl.nextEffect}}catch(e){if(null===jl)throw Error(a(330));gu(jl,e),jl=jl.nextEffect}}while(null!==jl);jl=null,jo(),El=i}else e.current=n;if(Dl)Dl=!1,Ul=e,$l=t;else for(jl=o;null!==jl;)t=jl.nextEffect,jl.nextEffect=null,jl=t;if(0===(t=e.firstPendingTime)&&(Al=null),1073741823===t?e===Bl?Wl++:(Wl=0,Bl=e):Wl=0,"function"==typeof xu&&xu(n.stateNode,r),Xl(e),Il)throw Il=!1,e=Fl,Fl=null,e;return 0!=(8&El)||Qo(),null}function hu(){for(;null!==jl;){var e=jl.effectTag;0!=(256&e)&&nl(jl.alternate,jl),0==(512&e)||Dl||(Dl=!0,Bo(97,(function(){return mu(),null}))),jl=jl.nextEffect}}function mu(){if(90!==$l){var e=97<$l?97:$l;return $l=90,Wo(e,vu)}}function vu(){if(null===Ul)return!1;var e=Ul;if(Ul=null,0!=(48&El))throw Error(a(331));var t=El;for(El|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:rl(5,n),ol(5,n)}}catch(t){if(null===e)throw Error(a(330));gu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return El=t,Qo(),!0}function yu(e,t,n){ci(e,t=hl(e,t=Ja(n,t),1073741823)),null!==(e=Yl(e,1073741823))&&Xl(e)}function gu(e,t){if(3===e.tag)yu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){yu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Al||!Al.has(r))){ci(n,e=ml(n,e=Ja(t,e),1073741823)),null!==(n=Yl(n,1073741823))&&Xl(n);break}}n=n.return}}function bu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Tl===e&&Cl===n?Pl===kl||Pl===xl&&1073741823===Ol&&Uo()-zl<500?nu(e,Cl):Ll=!0:Mu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Xl(e)))}function wu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Kl(t=Ql(),e,null)),null!==(e=Yl(e,t))&&Xl(e)}vl=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)Na=!0;else{if(r<n){switch(Na=!1,t.tag){case 3:Da(t),_a();break;case 5:if(zi(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:vo(t.type)&&wo(t);break;case 4:Mi(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,co(Go,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Ba(e,t,n):(co(Ii,1&Ii.current),null!==(t=qa(e,t,n))?t.sibling:null);co(Ii,1&Ii.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Ka(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),co(Ii,Ii.current),!r)return null}return qa(e,t,n)}Na=!1}}else Na=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=mo(t,fo.current),ri(t,n),o=qi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vo(r)){var i=!0;wo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ai(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&mi(t,r,l,e),o.updater=vi,t.stateNode=o,o._reactInternalFiber=t,wi(t,r,e,n),t=Aa(null,t,r,!0,i,n)}else t.tag=0,Ra(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Su(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Yo(o,e),i){case 0:t=Ia(null,t,o,e,n);break e;case 1:t=Fa(null,t,o,e,n);break e;case 11:t=Ma(null,t,o,e,n);break e;case 14:t=La(null,t,o,Yo(o.type,e),r,n);break e}throw Error(a(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Ia(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Fa(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 3:if(Da(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,li(e,t),fi(t,r,null,n),(r=t.memoizedState.element)===o)_a(),t=qa(e,t,n);else{if((o=t.stateNode.hydrate)&&(xa=xn(t.stateNode.containerInfo.firstChild),wa=t,o=ka=!0),o)for(n=Ci(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ra(e,t,r,n),_a();t=t.child}return t;case 5:return zi(t),null===e&&Sa(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,gn(r,o)?l=null:null!==i&&gn(r,i)&&(t.effectTag|=16),ja(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ra(e,t,l,n),t=t.child),t;case 6:return null===e&&Sa(t),null;case 13:return Ba(e,t,n);case 4:return Mi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Si(t,null,r,n):Ra(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ma(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 7:return Ra(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ra(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,i=o.value;var u=t.type._context;if(co(Go,u._currentValue),u._currentValue=i,null!==l)if(u=l.value,0===(i=Fr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!po.current){t=qa(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=ui(n,null)).tag=2,ci(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ni(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Ra(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ri(t,n),r=r(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,Ra(e,t,r,n),t.child;case 14:return i=Yo(o=t.type,t.pendingProps),La(e,t,o,i=Yo(o.type,i),r,n);case 15:return za(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Yo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,vo(r)?(e=!0,wo(t)):e=!1,ri(t,n),gi(t,r,o),wi(t,r,o,n),Aa(null,t,r,!0,e,n);case 19:return Ka(e,t,n)}throw Error(a(156,t.tag))};var xu=null,ku=null;function Eu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Tu(e,t,n,r){return new Eu(e,t,n,r)}function Su(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Cu(e,t){var n=e.alternate;return null===n?((n=Tu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Pu(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Su(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case ne:return _u(n.children,o,i,t);case le:l=8,o|=7;break;case re:l=8,o|=1;break;case oe:return(e=Tu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Tu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Tu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:l=10;break e;case ae:l=9;break e;case ue:l=11;break e;case fe:l=14;break e;case de:l=16,r=null;break e;case pe:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Tu(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function _u(e,t,n,r){return(e=Tu(7,e,r,t)).expirationTime=n,e}function Ou(e,t,n){return(e=Tu(6,e,null,t)).expirationTime=n,e}function Nu(e,t,n){return(t=Tu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ru(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Mu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Lu(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function zu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function ju(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Iu(e,t,n,r){var o=t.current,i=Ql(),l=pi.suspense;i=Kl(i,o,l);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(vo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(a(171))}if(1===n.tag){var c=n.type;if(vo(c)){n=bo(n,c,u);break e}}n=u}else n=so;return null===t.context?t.context=n:t.pendingContext=n,(t=ui(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ci(o,t),ql(o,i),i}function Fu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Au(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Du(e,t){Au(e,t),(e=e.alternate)&&Au(e,t)}function Uu(e,t,n){var r=new Ru(e,t,n=null!=n&&!0===n.hydrate),o=Tu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,ai(o),e[Cn]=r.current,n&&0!==t&&function(e,t){var n=Je(t);Ct.forEach((function(e){ht(e,t,n)})),Pt.forEach((function(e){ht(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function $u(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vu(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Fu(a);l.call(e)}}Iu(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Uu(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Fu(a);u.call(e)}}tu((function(){Iu(t,a,e,o)}))}return Fu(a)}function Wu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Bu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!$u(t))throw Error(a(200));return Wu(e,t,null,n)}Uu.prototype.render=function(e){Iu(e,this._internalRoot,null,null)},Uu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Iu(null,e,null,(function(){t[Cn]=null}))},mt=function(e){if(13===e.tag){var t=qo(Ql(),150,100);ql(e,t),Du(e,t)}},vt=function(e){13===e.tag&&(ql(e,3),Du(e,3))},yt=function(e){if(13===e.tag){var t=Ql();ql(e,t=Kl(t,e,null)),Du(e,t)}},_=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=Nn(r);if(!o)throw Error(a(90));xe(r),Se(r,o)}}}break;case"textarea":Me(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},z=eu,j=function(e,t,n,r,o){var i=El;El|=4;try{return Wo(98,e.bind(null,t,n,r,o))}finally{0===(El=i)&&Qo()}},I=function(){0==(49&El)&&(function(){if(null!==Vl){var e=Vl;Vl=null,e.forEach((function(e,t){ju(t,e),Xl(t)})),Qo()}}(),mu())},F=function(e,t){var n=El;El|=2;try{return e(t)}finally{0===(El=n)&&Qo()}};var Hu,Qu,Ku={Events:[_n,On,Nn,C,E,Fn,function(e){ot(e,In)},M,L,Xt,lt,mu,{current:!1}]};Qu=(Hu={findFiberByHostInstance:Pn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);xu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},ku=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Hu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:G.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Qu?Qu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Ku,t.createPortal=Bu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&El))throw Error(a(187));var n=El;El|=1;try{return Wo(99,e.bind(null,t))}finally{El=n,Qo()}},t.hydrate=function(e,t,n){if(!$u(t))throw Error(a(200));return Vu(null,e,t,!0,n)},t.render=function(e,t,n){if(!$u(t))throw Error(a(200));return Vu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!$u(e))throw Error(a(40));return!!e._reactRootContainer&&(tu((function(){Vu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Cn]=null}))})),!0)},t.unstable_batchedUpdates=eu,t.unstable_createPortal=function(e,t){return Bu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!$u(n))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Vu(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(25)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,a,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},a=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var y=p.now();t.unstable_now=function(){return p.now()-y}}var g=!1,b=null,w=-1,x=5,k=0;a=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,T=E.port2;E.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();k=e+x;try{b(!0,e)?T.postMessage(null):(g=!1,b=null)}catch(e){throw T.postMessage(null),e}}else g=!1},r=function(e){b=e,g||(g=!0,T.postMessage(null))},o=function(e,n){w=h((function(){e(t.unstable_now())}),n)},i=function(){m(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function P(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,u=e[l];if(void 0!==a&&0>_(a,n))void 0!==u&&0>_(u,a)?(e[r]=u,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],N=[],R=1,M=null,L=3,z=!1,j=!1,I=!1;function F(e){for(var t=C(N);null!==t;){if(null===t.callback)P(N);else{if(!(t.startTime<=e))break;P(N),t.sortIndex=t.expirationTime,S(O,t)}t=C(N)}}function A(e){if(I=!1,F(e),!j)if(null!==C(O))j=!0,r(D);else{var t=C(N);null!==t&&o(A,t.startTime-e)}}function D(e,n){j=!1,I&&(I=!1,i()),z=!0;var r=L;try{for(F(n),M=C(O);null!==M&&(!(M.expirationTime>n)||e&&!a());){var l=M.callback;if(null!==l){M.callback=null,L=M.priorityLevel;var u=l(M.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?M.callback=u:M===C(O)&&P(O),F(n)}else P(O);M=C(O)}if(null!==M)var c=!0;else{var s=C(N);null!==s&&o(A,s.startTime-n),c=!1}return c}finally{M=null,L=r,z=!1}}function U(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var $=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){j||z||(j=!0,r(D))},t.unstable_getCurrentPriorityLevel=function(){return L},t.unstable_getFirstCallbackNode=function(){return C(O)},t.unstable_next=function(e){switch(L){case 1:case 2:case 3:var t=3;break;default:t=L}var n=L;L=t;try{return e()}finally{L=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=$,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=L;L=e;try{return t()}finally{L=n}},t.unstable_scheduleCallback=function(e,n,a){var l=t.unstable_now();if("object"==typeof a&&null!==a){var u=a.delay;u="number"==typeof u&&0<u?l+u:l,a="number"==typeof a.timeout?a.timeout:U(e)}else a=U(e),u=l;return e={id:R++,callback:n,priorityLevel:e,startTime:u,expirationTime:a=u+a,sortIndex:-1},u>l?(e.sortIndex=u,S(N,e),null===C(O)&&e===C(N)&&(I?i():I=!0,o(A,u-l))):(e.sortIndex=a,S(O,e),j||z||(j=!0,r(D))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();F(e);var n=C(O);return n!==M&&null!==M&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<M.expirationTime||a()},t.unstable_wrapCallback=function(e){var t=L;return function(){var n=L;L=t;try{return e.apply(this,arguments)}finally{L=n}}}},function(e,t,n){var r=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function l(e,t,n,r){var o=t&&t.prototype instanceof s?t:s,i=Object.create(o.prototype),a=new k(r||[]);return i._invoke=function(e,t,n){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return T()}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var l=b(a,n);if(l){if(l===c)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var s=u(e,t,n);if("normal"===s.type){if(r=n.done?"completed":"suspendedYield",s.arg===c)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r="completed",n.method="throw",n.arg=s.arg)}}}(e,n,a),i}function u(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var c={};function s(){}function f(){}function d(){}var p={};p[o]=function(){return this};var h=Object.getPrototypeOf,m=h&&h(h(E([])));m&&m!==t&&n.call(m,o)&&(p=m);var v=d.prototype=s.prototype=Object.create(p);function y(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function g(e,t){var r;this._invoke=function(o,i){function a(){return new t((function(r,a){!function r(o,i,a,l){var c=u(e[o],e,i);if("throw"!==c.type){var s=c.arg,f=s.value;return f&&"object"==typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,a,l)}),(function(e){r("throw",e,a,l)})):t.resolve(f).then((function(e){s.value=e,a(s)}),(function(e){return r("throw",e,a,l)}))}l(c.arg)}(o,i,r,a)}))}return r=r?r.then(a,a):a()}}function b(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,b(e,t),"throw"===t.method))return c;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var r=u(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,c;var o=r.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,c):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,c)}function w(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function k(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(w,this),this.reset(!0)}function E(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:T}}function T(){return{value:void 0,done:!0}}return f.prototype=v.constructor=d,d.constructor=f,d[a]=f.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===f||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,a in e||(e[a]="GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},y(g.prototype),g.prototype[i]=function(){return this},e.AsyncIterator=g,e.async=function(t,n,r,o,i){void 0===i&&(i=Promise);var a=new g(l(t,n,r,o),i);return e.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},y(v),v[a]="Generator",v[o]=function(){return this},v.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=E,k.prototype={constructor:k,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return a.type="throw",a.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var l=n.call(i,"catchLoc"),u=n.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,c):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),c},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),x(n),c}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;x(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:E(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),c}},e}(e.exports);try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}},function(e,t){function n(t){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?e.exports=n=function(e){return typeof e}:e.exports=n=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(t)}e.exports=n},function(e,t){function n(t,r){return e.exports=n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},n(t,r)}e.exports=n},function(e,t,n){var r=n(5),o=n(30);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});e.exports=a},function(e,t,n){(t=n(6)(!1)).push([e.i,"* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n\r\n  }\r\n\r\n  body {\r\n    margin-top: 25px;\r\n  }\r\n\r\n\r\n",""]),e.exports=t},function(e,t){e.exports=function(e){if(Array.isArray(e))return e}},function(e,t){e.exports=function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}}},function(e,t,n){var r=n(34);e.exports=function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}},function(e,t){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},function(e,t,n){var r=n(5),o=n(37);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});e.exports=a},function(e,t,n){(t=n(6)(!1)).push([e.i,".home-body {\r\n    display: grid;\r\n    grid-template-columns: 1fr 3fr 1fr;\r\n    grid-template-rows: 3fr 1fr  ;\r\n    /* justify-content: center; */\r\n    /* align-content: center; */\r\n    background-color: rgb(206, 209, 208); \r\n    /* border: rgb(236, 8, 160);\r\n    border-style: solid; */\r\n\r\n}\r\n\r\n/* .home-body * {\r\n    border-style: dotted;\r\n    border-width: thick;\r\n    border-color: red;\r\n} */\r\n.countdown{\r\n    padding-top: 20px;\r\n    grid-row: 1;\r\n    grid-column: 1;\r\n    background-color: rgba(14, 241, 165, 0.192);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.result {\r\n    display: flex;\r\n    /* justify-content: center; */\r\n    /* border: rgb(42, 216, 36);\r\n    border-style: solid; */\r\n    grid-column: 1;\r\n    grid-row: 2;\r\n    /* align-items: center; */\r\n}\r\n\r\n.image-box {\r\n    background-color: rgba(255, 255, 255, 0);\r\n    border: rgb(84, 85, 87); \r\n    border-style: solid;\r\n    /* padding: 20px 0px 0px 10px; */\r\n    /* margin: 20px 0px 0px 10px ; */\r\n    /* border-radius: 20px; */\r\n    /* border-width: 15px; */\r\n    width: 70vw;\r\n    height: 70vh;\r\n    grid-row: 1 ;\r\n    grid-column: 2  ; \r\n}\r\n\r\n.image{\r\n    box-shadow: 0px -40px 100px rgba(0, 0, 0, 0.582);\r\n    width: 100%;\r\n    height:100%;\r\n    /* display: block; */\r\n    /* object-fit: scale-down; */\r\n}\r\n\r\n.options-box {\r\n    /* align-self: center; */\r\n    /* justify-self: center; */\r\n    grid-row: 2;\r\n    grid-column: 2;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    /* width: 70vw; */\r\n    /* height: 20vh; */\r\n    /* margin-left: 2vw ; */\r\n    justify-content: space-around;\r\n}\r\n\r\n\r\n\r\n.next-button{\r\n    align-self: center;\r\n    justify-self: center;\r\n    /* margin-left: 1vw; */\r\n    /* margin-right: 1vw; */\r\n    padding: 20px;\r\n\r\n    grid-row: 2;\r\n    grid-column: 3;\r\n\r\n\r\n}\r\n.normal{\r\n    background-color: chartreuse;\r\n}\r\n\r\n.greyed{\r\n    background-color: rgb(99, 99, 99);\r\n    color: floralwhite;\r\n}\r\n\r\n@media screen and (max-width: 500px) {\r\n    .image-box{\r\n        width: 100vw;\r\n        height: 50vh;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1200px) {\r\n    .home-body{\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .image-box {\r\n        width: 100vw;\r\n        height: 50vh;\r\n    }\r\n\r\n}",""]),e.exports=t},function(e,t,n){var r=n(5),o=n(39);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});e.exports=a},function(e,t,n){(t=n(6)(!1)).push([e.i,'.button-container{\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    flex-basis: 50%;\r\n    margin: 5px 0px;\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.option {\r\n    padding: 0.5em 1em;\r\n    border-radius: 10px;\r\n    /* position: absolute; */\r\n    width: 50%;\r\n    /* font-size: 1rem; */\r\n    /* padding-top: 5px;\r\n    padding-right: 30px;\r\n    border-radius: 30px;\r\n    border-style: solid; */\r\n}\r\n.normal{\r\n    background-color: turquoise;\r\n    color: black;\r\n}\r\n.greyed{\r\n    background-color: rgb(78, 156, 148);\r\n}\r\n.red{\r\n    background-color: red;\r\n    color: white;\r\n}\r\n.green{\r\n    background-color: greenyellow;\r\n}\r\n\r\n\r\n/* input[type="radio"]{\r\n    margin: 0 35px 0 0;\r\n  } */\r\n/* @media screen and (max-width: 1200px) {\r\n    input[type="radio"]{\r\n        margin: 0 0 0 0;\r\n    }\r\n    .optionLabel {\r\n        margin:0;\r\n        padding:0;\r\n    }\r\n} */',""]),e.exports=t},function(e,t,n){var r=n(5),o=n(41);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});e.exports=a},function(e,t,n){(t=n(6)(!1)).push([e.i,".Score{\r\n    padding-top: 20px;\r\n    grid-row: 1;\r\n    grid-column: 3;\r\n    background-color: rgba(14, 241, 165, 0.192);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}",""]),e.exports=t},function(e,t,n){var r=n(5),o=n(43);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});e.exports=a},function(e,t,n){(t=n(6)(!1)).push([e.i,"\r\n.navbar {\r\n  position: fixed;\r\n  z-index: 1;\r\n  width: 100%;\r\n  background: linear-gradient(to right,rgb(70, 108, 126),rgb(125, 190, 219),rgb(70, 108, 126));\r\n  top: 0;\r\n  left: 0;\r\n  /* overflow-y: hidden; */\r\n  /* padding: 0.3rem 0.3rem; */\r\n  border-style: solid;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n}\r\n.nav-button {\r\n  background-color: transparent;\r\n  color: rgb(207, 167, 34);\r\n  transform: scale(2,2);\r\n  order: 1;\r\n}\r\n.box-2b-filled{\r\n  width: 70%;\r\n  display: flex;\r\n  background-color: rgb(9, 88, 99);\r\n  order: 2;\r\n  border-radius: 20px;\r\n}\r\n.button{\r\n  order: 3;\r\n}\r\n\r\n.perc {\r\n  background-color: rgb(9, 88, 99);\r\n  color: #ffffff;\r\n  width: 3rem;\r\n  padding-top: 0.1rem;\r\n  padding-left: 0.5rem;\r\n  order: 1;\r\n  border-radius: 50%;\r\n  /* margin-left: 2rem; */\r\n}\r\n.prog{\r\n  background-color: rgb(17, 176, 197);\r\n  height: 100%;\r\n  order: 2;\r\n  /* width: 3rem; */\r\n  border-radius: 20px;\r\n}\r\n\r\n\r\n.overlay {\r\n  position: fixed;\r\n  display: flex;\r\n  z-index: 2;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(59, 89, 102, 0.7);\r\n  transition:  1.2s;\r\n  flex-direction: column;\r\n}\r\n.overlay.hide {\r\n  /* display: none; */\r\n  height: 0;\r\n}\r\n.over-button {\r\n  /* display: inline-block; */\r\n  font-size: 2rem;\r\n  width: 10%;\r\n  border-radius: 50px;\r\n  background-color: aquamarine;\r\n  text-align: center;\r\n  align-self: center;\r\n  margin-top: 30px;\r\n  transition:  1.5s;\r\n}\r\n\r\n\r\n\r\n.over-button.hide{\r\n  margin-top: -100%;\r\n  top: -100%;\r\n}\r\n\r\n.overlay-text{\r\n  font-size: 2rem;\r\n  color: #ffffff;\r\n  order: -1;\r\n  position: relative;\r\n  text-align: center;\r\n  margin-top: 200px;\r\n  transition:  1.2s;\r\n}\r\n.overlay-text.hide{\r\n  margin-top: -100%;\r\n  top: -100%;\r\n}\r\n\r\n/* .nav-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  } */\r\n\r\n  @media screen and (max-width: 700px) {\r\n    .over-button {\r\n     width: 30%;\r\n    }\r\n    .overlay-text {\r\n      font-size: 1.5rem;\r\n    }\r\n  }",""]),e.exports=t},function(e,t,n){"use strict";var r=n(45);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116,g=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,x=r?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case a:case u:case l:case h:return e;default:switch(e=e&&e.$$typeof){case s:case p:case y:case v:case c:return e;default:return t}}case i:return t}}}function E(e){return k(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=y,t.Memo=v,t.Portal=i,t.Profiler=u,t.StrictMode=l,t.Suspense=h,t.isAsyncMode=function(e){return E(e)||k(e)===f},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return k(e)===p},t.isFragment=function(e){return k(e)===a},t.isLazy=function(e){return k(e)===y},t.isMemo=function(e){return k(e)===v},t.isPortal=function(e){return k(e)===i},t.isProfiler=function(e){return k(e)===u},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===h},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===u||e===l||e===h||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===y||e.$$typeof===v||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===b||e.$$typeof===w||e.$$typeof===x||e.$$typeof===g)},t.typeOf=k},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(15),a=n.n(i);function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var u=n(7),c=n.n(u);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function d(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var p=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&f(e),a=t&&f(t),l=i||a;if(e&&f(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=o.length;s>=0;s--){var p=o[s];"."===p?d(o,s):".."===p?(d(o,s),c++):c&&(d(o,s),c--)}if(!l)for(;c--;c)o.unshift("..");!l||""===o[0]||o[0]&&f(o[0])||o.unshift("");var h=o.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h};var h=function(e,t){if(!e)throw new Error("Invariant failed")};function m(e){return"/"===e.charAt(0)?e:"/"+e}function v(e){return"/"===e.charAt(0)?e.substr(1):e}function y(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function g(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function b(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function w(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=s({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=p(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function x(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement);function E(e,t){t(window.confirm(e))}function T(){try{return window.history.state||{}}catch(e){return{}}}function S(e){void 0===e&&(e={}),k||h(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,a=i.forceRefresh,l=void 0!==a&&a,u=i.getUserConfirmation,c=void 0===u?E:u,f=i.keyLength,d=void 0===f?6:f,p=e.basename?g(m(e.basename)):"";function v(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return p&&(i=y(i,p)),w(i,r,n)}function S(){return Math.random().toString(36).substr(2,d)}var C=x();function P(e){s(D,e),D.length=n.length,C.notifyListeners(D.location,D.action)}function _(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||R(v(e.state))}function O(){R(v(T()))}var N=!1;function R(e){if(N)N=!1,P();else{C.confirmTransitionTo(e,"POP",c,(function(t){t?P({action:"POP",location:e}):function(e){var t=D.location,n=L.indexOf(t.key);-1===n&&(n=0);var r=L.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(N=!0,j(o))}(e)}))}}var M=v(T()),L=[M.key];function z(e){return p+b(e)}function j(e){n.go(e)}var I=0;function F(e){1===(I+=e)&&1===e?(window.addEventListener("popstate",_),o&&window.addEventListener("hashchange",O)):0===I&&(window.removeEventListener("popstate",_),o&&window.removeEventListener("hashchange",O))}var A=!1;var D={length:n.length,action:"POP",location:M,createHref:z,push:function(e,t){var o=w(e,t,S(),D.location);C.confirmTransitionTo(o,"PUSH",c,(function(e){if(e){var t=z(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,t),l)window.location.href=t;else{var u=L.indexOf(D.location.key),c=L.slice(0,u+1);c.push(o.key),L=c,P({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=w(e,t,S(),D.location);C.confirmTransitionTo(o,"REPLACE",c,(function(e){if(e){var t=z(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,t),l)window.location.replace(t);else{var u=L.indexOf(D.location.key);-1!==u&&(L[u]=o.key),P({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:j,goBack:function(){j(-1)},goForward:function(){j(1)},block:function(e){void 0===e&&(e=!1);var t=C.setPrompt(e);return A||(F(1),A=!0),function(){return A&&(A=!1,F(-1)),t()}},listen:function(e){var t=C.appendListener(e);return F(1),function(){F(-1),t()}}};return D}var C={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+v(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:v,decodePath:m},slash:{encodePath:m,decodePath:m}};function P(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function _(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function O(e){window.location.replace(P(window.location.href)+"#"+e)}function N(e){void 0===e&&(e={}),k||h(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?E:r,i=n.hashType,a=void 0===i?"slash":i,l=e.basename?g(m(e.basename)):"",u=C[a],c=u.encodePath,f=u.decodePath;function d(){var e=f(_());return l&&(e=y(e,l)),w(e)}var p=x();function v(e){s(D,e),D.length=t.length,p.notifyListeners(D.location,D.action)}var T=!1,S=null;function N(){var e,t,n=_(),r=c(n);if(n!==r)O(r);else{var i=d(),a=D.location;if(!T&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(S===b(i))return;S=null,function(e){if(T)T=!1,v();else{p.confirmTransitionTo(e,"POP",o,(function(t){t?v({action:"POP",location:e}):function(e){var t=D.location,n=z.lastIndexOf(b(t));-1===n&&(n=0);var r=z.lastIndexOf(b(e));-1===r&&(r=0);var o=n-r;o&&(T=!0,j(o))}(e)}))}}(i)}}var R=_(),M=c(R);R!==M&&O(M);var L=d(),z=[b(L)];function j(e){t.go(e)}var I=0;function F(e){1===(I+=e)&&1===e?window.addEventListener("hashchange",N):0===I&&window.removeEventListener("hashchange",N)}var A=!1;var D={length:t.length,action:"POP",location:L,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=P(window.location.href)),n+"#"+c(l+b(e))},push:function(e,t){var n=w(e,void 0,void 0,D.location);p.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=b(n),r=c(l+t);if(_()!==r){S=t,function(e){window.location.hash=e}(r);var o=z.lastIndexOf(b(D.location)),i=z.slice(0,o+1);i.push(t),z=i,v({action:"PUSH",location:n})}else v()}}))},replace:function(e,t){var n=w(e,void 0,void 0,D.location);p.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=b(n),r=c(l+t);_()!==r&&(S=t,O(r));var o=z.indexOf(b(D.location));-1!==o&&(z[o]=t),v({action:"REPLACE",location:n})}}))},go:j,goBack:function(){j(-1)},goForward:function(){j(1)},block:function(e){void 0===e&&(e=!1);var t=p.setPrompt(e);return A||(F(1),A=!0),function(){return A&&(A=!1,F(-1)),t()}},listen:function(e){var t=p.appendListener(e);return F(1),function(){F(-1),t()}}};return D}function R(e,t,n){return Math.min(Math.max(e,t),n)}function M(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,i=t.initialIndex,a=void 0===i?0:i,l=t.keyLength,u=void 0===l?6:l,c=x();function f(e){s(y,e),y.length=y.entries.length,c.notifyListeners(y.location,y.action)}function d(){return Math.random().toString(36).substr(2,u)}var p=R(a,0,o.length-1),h=o.map((function(e){return w(e,void 0,"string"==typeof e?d():e.key||d())})),m=b;function v(e){var t=R(y.index+e,0,y.entries.length-1),r=y.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var y={length:h.length,action:"POP",location:h[p],index:p,entries:h,createHref:m,push:function(e,t){var r=w(e,t,d(),y.location);c.confirmTransitionTo(r,"PUSH",n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}}))},replace:function(e,t){var r=w(e,t,d(),y.location);c.confirmTransitionTo(r,"REPLACE",n,(function(e){e&&(y.entries[y.index]=r,f({action:"REPLACE",location:r}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&(e=!1),c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return y}var L=n(11),z=n.n(L),j=n(20),I=n.n(j);function F(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var A=o.a.createContext||function(e,t){var n,o,i="__create-react-context-"+I()()+"__",a=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=F(t.props.value),t}z()(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):1073741823,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);a.childContextTypes=((n={})[i]=c.a.object.isRequired,n);var l=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}z()(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return l.contextTypes=((o={})[i]=c.a.object,o),{Provider:a,Consumer:l}},D=n(12),U=n.n(D);n(14);function $(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n(21);var V=function(e){var t=A();return t.displayName=e,t}("Router"),W=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}l(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(V.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(o.a.Component);o.a.Component;o.a.Component;var B={},H=0;function Q(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=B[n]||(B[n]={});if(r[e])return r[e];var o=[],i={regexp:U()(e,o,t),keys:o};return H<1e4&&(r[e]=i,H++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return i&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:a.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var K=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(V.Consumer,null,(function(t){t||h(!1);var n=e.props.location||t.location,r=s({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?Q(n.pathname,e.props):t.match}),i=e.props,a=i.children,l=i.component,u=i.render;return Array.isArray(a)&&0===a.length&&(a=null),o.a.createElement(V.Provider,{value:r},r.match?a?"function"==typeof a?a(r):a:l?o.a.createElement(l,r):u?u(r):null:"function"==typeof a?a(r):null)}))},t}(o.a.Component);function q(e){return"/"===e.charAt(0)?e:"/"+e}function Y(e,t){if(!e)return t;var n=q(e);return 0!==t.pathname.indexOf(n)?t:s({},t,{pathname:t.pathname.substr(n.length)})}function G(e){return"string"==typeof e?e:b(e)}function X(e){return function(){h(!1)}}function J(){}o.a.Component;var Z=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(V.Consumer,null,(function(t){t||h(!1);var n,r,i=e.props.location||t.location;return o.a.Children.forEach(e.props.children,(function(e){if(null==r&&o.a.isValidElement(e)){n=e;var a=e.props.path||e.props.from;r=a?Q(i.pathname,s({},e.props,{path:a})):t.match}})),r?o.a.cloneElement(n,{location:i,computedMatch:r}):null}))},t}(o.a.Component);o.a.useContext;var ee=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=S(t.props),t}return l(t,e),t.prototype.render=function(){return o.a.createElement(W,{history:this.history,children:this.props.children})},t}(o.a.Component);o.a.Component;var te=function(e,t){return"function"==typeof e?e(t):e},ne=function(e,t){return"string"==typeof e?w(e,null,null,t):e},re=function(e){return e},oe=o.a.forwardRef;void 0===oe&&(oe=re);var ie=oe((function(e,t){var n=e.innerRef,r=e.navigate,i=e.onClick,a=$(e,["innerRef","navigate","onClick"]),l=a.target,u=s({},a,{onClick:function(e){try{i&&i(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=re!==oe&&t||n,o.a.createElement("a",u)}));var ae=oe((function(e,t){var n=e.component,r=void 0===n?ie:n,i=e.replace,a=e.to,l=e.innerRef,u=$(e,["component","replace","to","innerRef"]);return o.a.createElement(V.Consumer,null,(function(e){e||h(!1);var n=e.history,c=ne(te(a,e.location),e.location),f=c?n.createHref(c):"",d=s({},u,{href:f,navigate:function(){var t=te(a,e.location);(i?n.replace:n.push)(t)}});return re!==oe?d.ref=t||l:d.innerRef=l,o.a.createElement(r,d)}))})),le=function(e){return e},ue=o.a.forwardRef;void 0===ue&&(ue=le);ue((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,i=e.activeClassName,a=void 0===i?"active":i,l=e.activeStyle,u=e.className,c=e.exact,f=e.isActive,d=e.location,p=e.strict,m=e.style,v=e.to,y=e.innerRef,g=$(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return o.a.createElement(V.Consumer,null,(function(e){e||h(!1);var n=d||e.location,i=ne(te(v,n),n),b=i.pathname,w=b&&b.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),x=w?Q(n.pathname,{path:w,exact:c,strict:p}):null,k=!!(f?f(x,n):x),E=k?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,a):u,T=k?s({},m,{},l):m,S=s({"aria-current":k&&r||null,className:E,style:T,to:i},g);return le!==ue?S.ref=t||y:S.innerRef=y,o.a.createElement(ae,S)}))}));var ce=n(4),se=n.n(ce),fe=n(8),de=n.n(fe),pe=n(16),he=n.n(pe),me=n(17),ve=n.n(me),ye=n(2),ge=n.n(ye),be=n(18),we=n.n(be),xe=n(10),ke=n.n(xe),Ee=n(19),Te=n.n(Ee),Se=n(3),Ce=n.n(Se);function Pe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function _e(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Pe(Object(n),!0).forEach((function(t){Ce()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Pe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Oe(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var Ne,Re=o.a.createContext(),Me=function(e){Te()(r,e);var t,n=(t=r,function(){var e,n=ke()(t);if(Oe()){var r=ke()(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return we()(this,e)});function r(){var e;return he()(this,r),e=n.call(this),Ce()(ge()(e),"updateProg",(function(t){e.setState({progPerc:t})})),Ce()(ge()(e),"toggleStart",(function(){e.setState({started:!e.state.started})})),Ce()(ge()(e),"changeDispCities",(function(t){t.length>0&&e.setState({dispCities:t})})),Ce()(ge()(e),"setFinalScore",(function(t,n,r){e.setState({finalScore:{correctAns:t,totalAns:n,score:r}}),e.toggleStart()})),Ce()(ge()(e),"loadCities",function(){var t=de()(se.a.mark((function t(n,r){var o;return se.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(e.state.api_url+"images/"+n*r).then((function(e){if(e.status>=400&&e.status<600)throw new Error("Bad response from server "+e.status);return e})).then((function(e){return e.json()})).catch((function(e){return console.log(e)}));case 2:o=t.sent,e.setState({dispCities:o.slice(0,n),choiceCities:o.slice(n)});case 4:case"end":return t.stop()}}),t)})));return function(e,n){return t.apply(this,arguments)}}()),e.state={finalScore:{correctAns:0,totalAns:0,score:0},started:!1,progPerc:0,dispCities:[],choiceCities:[],api_url:"https://city-guess-api.herokuapp.com/"},e}return ve()(r,[{key:"render",value:function(){return o.a.createElement(Re.Provider,{value:_e({},this.state,{changeDispCities:this.changeDispCities,getCities:this.loadCities,showThem:this.showThem,updateProg:this.updateProg,toggleStart:this.toggleStart,setFinalScore:this.setFinalScore})},this.props.children)}}]),r}(r.Component),Le=(Re.Consumer,n(29),n(1)),ze=n.n(Le),je=(n(36),n(38),function(e){var t=e.name,n=e.givenOption,r=e.change,i=e.disabled,a=e.correctOption,l="normal";return i&&(l=t===a?"green":n===t?"red":"greyed"),o.a.createElement("div",{className:"button-container"},o.a.createElement("button",{className:"option ".concat(l),type:"button",name:t,value:t,onClick:r,disabled:i},t))}),Ie=(n(40),function(e){var t=e.numTotalCities,n=(e.numAnswered,e.numOfCorrect),r=e.Score;return o.a.createElement("div",{className:"Score"},o.a.createElement("div",null,"Correct: ",n,"/",t),o.a.createElement("div",null,"Score: ",r))}),Fe=n.p+"20e0796b09919ac322391ed5ceef4abb.png",Ae=[];var De=function(e){var t=Object(r.useContext)(Re),n=t.getCities,i=t.choiceCities,a=t.dispCities,l=t.api_url,u=t.changeDispCities,c=(t.progPerc,t.updateProg),s=t.started,f=t.toggleStart,d=t.setFinalScore,p=Object(r.useState)(0),h=ze()(p,2),m=h[0],v=h[1],y=Object(r.useState)(10),g=ze()(y,2),b=g[0],w=g[1],x=Object(r.useState)(0),k=ze()(x,2),E=k[0],T=k[1],S=Object(r.useState)(0),C=ze()(S,2),P=C[0],_=C[1],O=Object(r.useState)(10),N=ze()(O,2),R=N[0],M=(N[1],Object(r.useState)("")),L=ze()(M,2),z=L[0],j=L[1],I=Object(r.useState)(!1),F=ze()(I,2),A=F[0],D=F[1],U=Object(r.useState)(!1),$=ze()(U,2),V=$[0],W=$[1],B=Object(r.useState)(!1),H=ze()(B,2),Q=H[0],K=H[1],q=Object(r.useState)([]),Y=ze()(q,2),G=Y[0],X=Y[1],J=Object(r.useState)({id:0,name:"placeholder",url:Fe}),Z=ze()(J,2),ee=Z[0],te=Z[1],ne=Object(r.useState)([]),re=ze()(ne,2),oe=re[0],ie=re[1],ae=function(e){var t=Math.floor(Math.random()*e.length),n=e.splice(t,1);n=n[0];var r=i.splice(0,3),o=Math.floor(4*Math.random());r.splice(o,0,n),P===R-1&&(Ae=r,Ne=r[0]),P===R&&s&&(r=Ae,n=Ne,f()),u(e),te(n),X(n),ie(r),K(!0),_(P+1),V&&T(E+1),c(P/R),w(10),D(!1),P===R&&s&&d(E,R,m)},le=function(e){j(e.target.name),D(!0),e.target.name===G.name?(W(!0),v(m+b)):W(!1)};return Object(r.useEffect)((function(){!A&&s&&(b>0&&setTimeout((function(){return w(b-1)}),1e3),0!==b||A||(D(!0),j(G),W(!1)))}),[b,s]),Object(r.useEffect)((function(){void 0!==a[0]&&!1===Q&&ae(a)}),[a]),Object(r.useEffect)((function(){function e(){return(e=de()(se.a.mark((function e(){return se.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n(R,4);case 2:e.sent;case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(){e.apply(this,arguments)}()}),[]),o.a.createElement("div",{className:"home-body"},o.a.createElement("div",{className:"countdown"},"Timer: ",b),o.a.createElement("div",{className:"image-box"},o.a.createElement("img",{src:l+ee.url,alt:ee.name,className:"image"})),o.a.createElement(Ie,{numTotalCities:R,numAnswered:P,numOfCorrect:E,Score:m}),o.a.createElement("div",{className:"options-box"},oe.map((function(e){return o.a.createElement(je,{name:e.name,givenOption:z,change:le,key:e.id,disabled:A,correctOption:G.name})}))),o.a.createElement("button",{type:"button",disabled:!A,className:"next-button ".concat(A?"normal":"greyed"),onClick:function(){return ae(a)}},P===R?"Results":"Next"))},Ue=(n(42),function(e){var t=e.percentage;return o.a.createElement("div",{className:"box-2b-filled"},o.a.createElement("div",{className:"perc"},100*t,"%"),o.a.createElement("div",{className:"prog",style:{width:"".concat(100*t,"%")}}))}),$e=function(){var e=Object(r.useContext)(Re),t=e.progPerc,n=e.started,i=e.toggleStart,a=e.finalScore,l=Object(r.useState)(!n),u=ze()(l,2),c=u[0],s=u[1],f=c?"show":"hide",d=function(){s(!c),0===t&&i()};return Object(r.useEffect)((function(){1!==t||n||d()}),[n]),o.a.createElement(o.a.Fragment,null,o.a.createElement("nav",{className:"navbar"},1===t?o.a.createElement("div",{className:"overlay ".concat(f)},o.a.createElement("div",{className:"overlay-text ".concat(f)},o.a.createElement("h2",null,"Results"),o.a.createElement("br",null),o.a.createElement("p",null,"Your final score is : ",a.score),o.a.createElement("p",null,"You got ",a.correctAns,"/",a.totalAns," correct"))):o.a.createElement("div",{className:"overlay ".concat(f)},o.a.createElement("div",{className:"overlay-text ".concat(f)},o.a.createElement("p",null,"Guess the name of the city that appears in the picture"),o.a.createElement("p",null,"You gain points for every second of time remaining")),o.a.createElement("button",{type:"button",className:"over-button ".concat(f),onClick:d},"  Start  ")),o.a.createElement(Ue,{percentage:t})))},Ve=function(){return o.a.createElement("div",null,o.a.createElement("p",null,"Error page"))};var We=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement($e,null),o.a.createElement(Z,null,o.a.createElement(K,{exact:!0,path:"/",component:De}),o.a.createElement(K,{component:Ve})))};a.a.render(o.a.createElement(Me,null,o.a.createElement(ee,null,o.a.createElement(We,null))),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3VkL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY3NzL0FwcC5jc3M/ZTg0MSIsIndlYnBhY2s6Ly8vLi9zcmMvY3NzL0FwcC5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlXaXRoSG9sZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXRlcmFibGVUb0FycmF5TGltaXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlMaWtlVG9BcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVJlc3QuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Nzcy9Ib21lLmNzcz8wZjkzIiwid2VicGFjazovLy8uL3NyYy9jc3MvSG9tZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Nzcy9PcHRpb25zLmNzcz80OWM0Iiwid2VicGFjazovLy8uL3NyYy9jc3MvT3B0aW9ucy5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Nzcy9TY29yZS5jc3M/YTljYSIsIndlYnBhY2s6Ly8vLi9zcmMvY3NzL1Njb3JlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY3NzL05hdmJhci5jc3M/ZTI3OCIsIndlYnBhY2s6Ly8vLi9zcmMvY3NzL05hdmJhci5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9lc20vcmVzb2x2ZS1wYXRobmFtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXNtL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzbS9yZWFjdC1yb3V0ZXItZG9tLmpzIiwid2VicGFjazovLy8uL3NyYy9jb250ZXh0LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0hvbWUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvT3B0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TY29yZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2xvYWRpbmcucG5nIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1Byb2dyZXNzQmFyLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL05hdmJhci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9FcnJvci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwLmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImFycmF5V2l0aEhvbGVzIiwiaXRlcmFibGVUb0FycmF5TGltaXQiLCJ1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIm5vbkl0ZXJhYmxlUmVzdCIsImFyciIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIm9iaiIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwibWVtbyIsImlzT2xkSUUiLCJCb29sZWFuIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0VGFyZ2V0IiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibGVuZ3RoIiwibW9kdWxlc1RvRG9tIiwibGlzdCIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJpdGVtIiwiaWQiLCJiYXNlIiwiY291bnQiLCJjb25jYXQiLCJpbmRleCIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJwdXNoIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImNyZWF0ZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwibm9uY2UiLCJrZXlzIiwiZm9yRWFjaCIsInNldEF0dHJpYnV0ZSIsImluc2VydCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiam9pbiIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImNoaWxkTm9kZXMiLCJyZW1vdmVDaGlsZCIsImluc2VydEJlZm9yZSIsImFwcGx5VG9UYWciLCJyZW1vdmVBdHRyaWJ1dGUiLCJidG9hIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZmlyc3RDaGlsZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicGFyZW50Tm9kZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJ0b1N0cmluZyIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4Iiwic3BsaWNlIiwidXNlU291cmNlTWFwIiwidGhpcyIsIm1hcCIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwic291cmNlTWFwcGluZyIsImJhc2U2NCIsImRhdGEiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibWVkaWFRdWVyeSIsImRlZHVwZSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJnZW4iLCJyZXNvbHZlIiwicmVqZWN0IiwiX25leHQiLCJfdGhyb3ciLCJhcmciLCJpbmZvIiwiZXJyb3IiLCJkb25lIiwiUHJvbWlzZSIsInRoZW4iLCJmbiIsImFyZ3MiLCJhcmd1bWVudHMiLCJhcHBseSIsImVyciIsInVuZGVmaW5lZCIsIl9nZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiZ2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjb25zdHJ1Y3RvciIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJwYXJzZSIsImNvbXBpbGUiLCJzdHIiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsIlJlZ0V4cCIsInJlcyIsInRva2VucyIsInBhdGgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwiZXhlYyIsImVzY2FwZWQiLCJvZmZzZXQiLCJzbGljZSIsIm5leHQiLCJwcmVmaXgiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwicGF0dGVybiIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwic3Vic3RyIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwicmVwbGFjZSIsImNoYXJDb2RlQXQiLCJ0b1VwcGVyQ2FzZSIsIm1hdGNoZXMiLCJBcnJheSIsImZsYWdzIiwib3B0cyIsImVuY29kZSIsInByZXR0eSIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsImoiLCJ0ZXN0IiwiYXR0YWNoS2V5cyIsInJlIiwic2Vuc2l0aXZlIiwic3RyaWN0IiwiZW5kIiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImdyb3VwcyIsIm1hdGNoIiwicmVnZXhwVG9SZWdleHAiLCJwYXJ0cyIsImFycmF5VG9SZWdleHAiLCJzdHJpbmdUb1JlZ2V4cCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsInNwbGl0IiwibGV0dGVyIiwic2hvdWxkVXNlTmF0aXZlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInByb3BzIiwiZGVzY3JpcHRvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl90eXBlb2YiLCJhc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJnbG9iYWwiLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJNZW1vIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJBIiwiQiIsIml0ZXJhdG9yIiwiQyIsImEiLCJiIiwiRCIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJFIiwiRiIsImNvbnRleHQiLCJyZWZzIiwiRyIsIkgiLCJpc1JlYWN0Q29tcG9uZW50Iiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIkkiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkoiLCJjdXJyZW50IiwiSyIsIkwiLCJyZWYiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk0iLCJnIiwiayIsImYiLCJjaGlsZHJlbiIsImgiLCIkJHR5cGVvZiIsIl9vd25lciIsIk8iLCJQIiwiUSIsIlIiLCJwb3AiLCJrZXlQcmVmaXgiLCJmdW5jIiwiUyIsIlYiLCJUIiwiVSIsImlzQXJyYXkiLCJlc2NhcGUiLCJXIiwiYWEiLCJYIiwiTiIsIlkiLCJaIiwiYmEiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJzdXNwZW5zZSIsIlJlYWN0Q3VycmVudE93bmVyIiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiQ29tcG9uZW50IiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlB1cmVDb21wb25lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ2ZXJzaW9uIiwib25FcnJvciIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwiY3VycmVudFRhcmdldCIsImthIiwicGEiLCJxYSIsInJhIiwiaW5kZXhPZiIsInNhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJ0YSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwidWEiLCJyZWdpc3RyYXRpb25OYW1lIiwidmEiLCJ3YSIsImRlcGVuZGVuY2llcyIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsInN0YXRlTm9kZSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIk1hIiwiTmEiLCJPYSIsIlBhIiwiUWEiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJ0b0xvd2VyQ2FzZSIsIlVhIiwiVmEiLCJ4bGlua0hyZWYiLCJXYSIsIlhhIiwiU2EiLCJpc05hTiIsIlRhIiwiUmEiLCJzZXRBdHRyaWJ1dGVOUyIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJmYiIsImdiIiwiaGIiLCJpYiIsImpiIiwia2IiLCJsYiIsIm1iIiwibmIiLCJwYiIsInFiIiwidGFnIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyZXR1cm4iLCJyYiIsInNiIiwibm9kZU5hbWUiLCJ4YiIsIl92YWx1ZVRyYWNrZXIiLCJzZXQiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwidGIiLCJ5YiIsImNoZWNrZWQiLCJ6YiIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQWIiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQmIiLCJDYiIsIkRiIiwiRWIiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIkdiIiwiRmIiLCJIYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJJYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiSmIiLCJLYiIsIkxiIiwidGV4dENvbnRlbnQiLCJNYiIsIk5iIiwiT2IiLCJQYiIsIlFiIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJSYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwiU2IiLCJUYiIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlViIiwiVmIiLCJXYiIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJXZWFrTWFwIiwiTWFwIiwiY2MiLCJkYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImVjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJmYyIsImhjIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJvYyIsInBjIiwicWMiLCJ0b3BMZXZlbFR5cGUiLCJuYXRpdmVFdmVudCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJyYyIsImV2ZW50U3lzdGVtRmxhZ3MiLCJzYyIsImNvbnRhaW5lckluZm8iLCJ0YyIsInVjIiwiaGFzIiwidmMiLCJ3YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIktjIiwiYmxvY2tlZE9uIiwiY29udGFpbmVyIiwiTGMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJNYyIsIk5jIiwiUGMiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJRYyIsIlJjIiwiU2MiLCJUYyIsInNoaWZ0IiwiVWMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJWYyIsIldjIiwiWWMiLCJaYyIsIiRjIiwiYWQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJldmVudFByaW9yaXR5IiwiYmQiLCJjZCIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJPYyIsImpkIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJrZCIsImxkIiwidHJpbSIsIm1kIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJuZCIsIm1lbnVpdGVtIiwiYXJlYSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwib2QiLCJwZCIsImlzIiwicWQiLCJyZCIsInNkIiwidGQiLCJib2R5IiwidWQiLCJ2ZCIsIm5vZGUiLCJuZXh0U2libGluZyIsInhkIiwiY29udGVudFdpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsInlkIiwiY29udGVudEVkaXRhYmxlIiwiRGQiLCJFZCIsIkZkIiwiYXV0b0ZvY3VzIiwiR2QiLCJfX2h0bWwiLCJIZCIsInNldFRpbWVvdXQiLCJJZCIsImNsZWFyVGltZW91dCIsIkpkIiwiS2QiLCJwcmV2aW91c1NpYmxpbmciLCJMZCIsIk1hdGgiLCJyYW5kb20iLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwiZGlzcGF0Y2hDb25maWciLCJVZCIsIl90YXJnZXRJbnN0IiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiZWUiLCJldmVudFBvb2wiLCJmZSIsImRlc3RydWN0b3IiLCJkZSIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJleHRlbmQiLCJnZSIsImhlIiwiaWUiLCJqZSIsImtlIiwiZG9jdW1lbnRNb2RlIiwibGUiLCJtZSIsIm5lIiwib2UiLCJiZWZvcmVJbnB1dCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwicGUiLCJxZSIsImtleUNvZGUiLCJkZXRhaWwiLCJzZSIsInZlIiwibG9jYWxlIiwid2hpY2giLCJ0ZSIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInVlIiwid2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwidmlldyIsIk9lIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBlIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJYZSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiWWUiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJzZWxlY3QiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImpmIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImtmIiwib25TZWxlY3QiLCJsZiIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJtZiIsImNsaXBib2FyZERhdGEiLCJuZiIsIm9mIiwiY2hhckNvZGUiLCJwZiIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJxZiIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJyZiIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkRmIiwiRWYiLCJGZiIsImdldENoaWxkQ29udGV4dCIsIkdmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJIZiIsIklmIiwiSmYiLCJLZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiTGYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJNZiIsInVuc3RhYmxlX25vdyIsIk5mIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJPZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiUGYiLCJRZiIsIlJmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJTZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlRmIiwiVWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsInFnIiwiZmlyc3RDb250ZXh0IiwiZXhwaXJhdGlvblRpbWUiLCJyZyIsInNnIiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsImNhbGxiYWNrIiwieGciLCJ5ZyIsInpnIiwiY2EiLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJKZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJHZyIsIkhnIiwiSWciLCJLZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIkxnIiwic3RhdGUiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsImVsZW1lbnRUeXBlIiwiVWciLCJpbXBsZW1lbnRhdGlvbiIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsImhoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiaWgiLCJyZXNwb25kZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwicXVldWUiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJnaSIsImhpIiwicGVuZGluZ0NvbnRleHQiLCJuaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJ0aSIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsIkFpIiwic3RhY2siLCJCaSIsIldlYWtTZXQiLCJTZXQiLCJDaSIsIkZpIiwiRWkiLCJHaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiSGkiLCJJaSIsIkppIiwiZm9jdXMiLCJLaSIsIkxpIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJEaSIsIk1pIiwiTmkiLCJPaSIsIlBpIiwiUWkiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiUmkiLCJTaSIsIlRpIiwiZGlzcGxheSIsIlVpIiwiVmkiLCJhZGQiLCJXaSIsIlhpIiwiZWxlbWVudCIsIllpIiwiWmkiLCIkaSIsImNvbXBvbmVudERpZENhdGNoIiwiYWoiLCJjb21wb25lbnRTdGFjayIsIlJqIiwiYmoiLCJjZWlsIiwiY2oiLCJkaiIsImtqIiwibGoiLCJtaiIsIm5qIiwib2oiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJ6aiIsImxhc3RFeHBpcmVkVGltZSIsIkFqIiwiZmlyc3RQZW5kaW5nVGltZSIsImxhc3RQaW5nZWRUaW1lIiwibmV4dEtub3duUGVuZGluZ0xldmVsIiwiY2FsbGJhY2tFeHBpcmF0aW9uVGltZSIsImNhbGxiYWNrUHJpb3JpdHkiLCJjYWxsYmFja05vZGUiLCJCaiIsInRpbWVvdXQiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZEV4cGlyYXRpb25UaW1lIiwibGFzdFN1c3BlbmRlZFRpbWUiLCJJaiIsInRpbWVvdXRIYW5kbGUiLCJKaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJLaiIsIk1qIiwiTmoiLCJwaW5nQ2FjaGUiLCJPaiIsInViIiwiUGoiLCJYYyIsIlFqIiwiU2oiLCJmaXJzdFN1c3BlbmRlZFRpbWUiLCJyYW5nZUNvdW50Iiwid2IiLCJhY3RpdmVFbGVtZW50RGV0YWNoZWQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiVGoiLCJ3ZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJtaW4iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsInZiIiwiVWoiLCJWaiIsIldqIiwiaGlkZGVuIiwiZGVmYXVsdCIsIm9iIiwiWGoiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJaaiIsInBlbmRpbmdDaGlsZHJlbiIsImFrIiwiYmsiLCJjayIsImRrIiwiZWsiLCJmayIsIkpjIiwiX2ludGVybmFsUm9vdCIsImdrIiwiaWsiLCJoYXNBdHRyaWJ1dGUiLCJoayIsImprIiwia2siLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJMaiIsImxrIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInBlcmZvcm1hbmNlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJydW50aW1lIiwiT3AiLCJoYXNPd24iLCIkU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsInRvU3RyaW5nVGFnU3ltYm9sIiwid3JhcCIsImlubmVyRm4iLCJvdXRlckZuIiwidHJ5TG9jc0xpc3QiLCJwcm90b0dlbmVyYXRvciIsIkdlbmVyYXRvciIsImdlbmVyYXRvciIsIkNvbnRleHQiLCJfaW52b2tlIiwibWV0aG9kIiwiZG9uZVJlc3VsdCIsImRlbGVnYXRlIiwiZGVsZWdhdGVSZXN1bHQiLCJtYXliZUludm9rZURlbGVnYXRlIiwiQ29udGludWVTZW50aW5lbCIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwicmVjb3JkIiwidHJ5Q2F0Y2giLCJtYWtlSW52b2tlTWV0aG9kIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsIkl0ZXJhdG9yUHJvdG90eXBlIiwiZ2V0UHJvdG8iLCJOYXRpdmVJdGVyYXRvclByb3RvdHlwZSIsInZhbHVlcyIsIkdwIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiQXN5bmNJdGVyYXRvciIsIlByb21pc2VJbXBsIiwicHJldmlvdXNQcm9taXNlIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJpbnZva2UiLCJfX2F3YWl0IiwidW53cmFwcGVkIiwicmVzdWx0TmFtZSIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJsb2NzIiwiZW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXRlcmFibGUiLCJpdGVyYXRvck1ldGhvZCIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJnZW5GdW4iLCJjdG9yIiwibWFyayIsImF3cmFwIiwiYXN5bmMiLCJpdGVyIiwicmV2ZXJzZSIsInNraXBUZW1wUmVzZXQiLCJwcmV2Iiwic3RvcCIsInJvb3RSZWNvcmQiLCJydmFsIiwiZXhjZXB0aW9uIiwiaGFuZGxlIiwibG9jIiwiY2F1Z2h0IiwiaGFzQ2F0Y2giLCJoYXNGaW5hbGx5IiwiZmluYWxseUVudHJ5IiwiY29tcGxldGUiLCJmaW5pc2giLCJ0aHJvd24iLCJkZWxlZ2F0ZVlpZWxkIiwicmVnZW5lcmF0b3JSdW50aW1lIiwiYWNjaWRlbnRhbFN0cmljdE1vZGUiLCJGdW5jdGlvbiIsIl9zZXRQcm90b3R5cGVPZiIsImFwaSIsImV4cG9ydGVkIiwibG9jYWxzIiwiX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsIl9zIiwiYXJyYXlMaWtlVG9BcnJheSIsIm1pbkxlbiIsImxlbiIsImFycjIiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkxhenkiLCJQb3J0YWwiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJfaW5oZXJpdHNMb29zZSIsIl9leHRlbmRzIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwic3BsaWNlT25lIiwiaGFzVHJhaWxpbmdTbGFzaCIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsInVwIiwicGFydCIsInVuc2hpZnQiLCJjb25kaXRpb24iLCJtZXNzYWdlIiwiYWRkTGVhZGluZ1NsYXNoIiwic3RyaXBMZWFkaW5nU2xhc2giLCJzdHJpcEJhc2VuYW1lIiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJjcmVhdGVQYXRoIiwiaGFzaCIsImNyZWF0ZUxvY2F0aW9uIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsIl9rZXkiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImV2ZW50IiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJvayIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzQmxvY2tlZCIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJzdHJpcEhhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiYmFzZVRhZyIsImdldEF0dHJpYnV0ZSIsInB1c2hIYXNoUGF0aCIsIm5leHRQYXRocyIsImNsYW1wIiwibG93ZXJCb3VuZCIsInVwcGVyQm91bmQiLCJtYXgiLCJjcmVhdGVNZW1vcnlIaXN0b3J5IiwiX3Byb3BzJGluaXRpYWxFbnRyaWVzIiwiaW5pdGlhbEVudHJpZXMiLCJfcHJvcHMkaW5pdGlhbEluZGV4IiwiaW5pdGlhbEluZGV4IiwiZW50cmllcyIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwiY2FuR28iLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiX0NvbXBvbmVudCIsIl90aGlzIiwiZW1pdHRlciIsIl9wcm90byIsIm5leHRQcm9wcyIsIm9sZFZhbHVlIiwiX0NvbXBvbmVudDIiLCJfdGhpczIiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsIl9SZWFjdCRDb21wb25lbnQiLCJSb3V0ZXIiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwicGFyYW1zIiwiaXNFeGFjdCIsImNhY2hlJDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwicmVkdWNlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwiY29tcGlsZVBhdGgkMSIsIlJvdXRlIiwiY29udGV4dCQxIiwiY29tcHV0ZWRNYXRjaCIsIl90aGlzJHByb3BzIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJub29wIiwiU3dpdGNoIiwiQnJvd3NlclJvdXRlciIsInJlc29sdmVUb0xvY2F0aW9uIiwiZm9yd2FyZFJlZlNoaW0iLCJMaW5rQW5jaG9yIiwiZm9yd2FyZGVkUmVmIiwiaW5uZXJSZWYiLCJuYXZpZ2F0ZSIsIl9vbkNsaWNrIiwicmVzdCIsImV4IiwiaXNNb2RpZmllZEV2ZW50IiwiTGluayIsIl9yZWYyIiwiX3JlZjIkY29tcG9uZW50IiwiZm9yd2FyZFJlZlNoaW0kMSIsImZvcndhcmRSZWYkMSIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiY2xhc3NOYW1lIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJsYXN0Q2l0eSIsIkNpdHlDb250ZXh0IiwiUmVhY3QiLCJDaXR5UHJvdmlkZXIiLCJuZXdQZXJjIiwicHJvZ1BlcmMiLCJzdGFydGVkIiwibmV3Q2l0aWVzIiwiZGlzcENpdGllcyIsImNvcnJlY3RBbnMiLCJ0b3RhbEFucyIsInNjb3JlIiwiZmluYWxTY29yZSIsInRvZ2dsZVN0YXJ0IiwibnVtT2ZDaXRpZXMiLCJtdWx0aXBsaWVyIiwiZmV0Y2giLCJhcGlfdXJsIiwicmVzcCIsInN0YXR1cyIsImpzb24iLCJsb2ciLCJyZXNwb25zZSIsImNob2ljZUNpdGllcyIsInByb2Nlc3MiLCJjaGFuZ2VEaXNwQ2l0aWVzIiwiZ2V0Q2l0aWVzIiwibG9hZENpdGllcyIsInNob3dUaGVtIiwidXBkYXRlUHJvZyIsInNldEZpbmFsU2NvcmUiLCJPcHRpb25zIiwiZ2l2ZW5PcHRpb24iLCJjb3JyZWN0T3B0aW9uIiwiU2NvcmUiLCJudW1Ub3RhbENpdGllcyIsIm51bU9mQ29ycmVjdCIsIm51bUFuc3dlcmVkIiwibGFzdFJvdW5kIiwiSG9tZSIsImNpdHlDb250ZXh0Iiwic2V0U2NvcmUiLCJ0aW1lQ291bnRlciIsInNldFRpbWVDb3VudGVyIiwic2V0TnVtT2ZDb3JyZWN0Iiwic2V0TnVtQW5zd2VyZWQiLCJzZWxlY3RlZE9wdGlvbiIsInNldFNlbGVjdGVkT3B0aW9uIiwidXNlclN1Ym1pdGVkIiwic2V0VXNlclN1Ym1pdGVkIiwiY29ycmVjdCIsInNldENvcnJlY3QiLCJmaW5pc2hlZExvYWRpbmciLCJzZXRGaW5pc2hlZExvYWRpbmciLCJzZXRDb3JyZWN0T3B0aW9uIiwicGxhY2Vob2xkZXIiLCJjaXR5RGlzcGxheWVkIiwic2V0Q2l0eURpc3BsYXllZCIsImNpdHlDaG9pY2VzIiwic2V0Q2l0eUNob2ljZXMiLCJzZWxlY3RDaXRpZXMiLCJjaXR5RGlzcGxheWVkSW5kZXgiLCJjaG9zZW5DaXR5IiwicmFuZEluZGV4IiwiaGFuZGxlQ2hhbmdlIiwiY2hhbmdlRXZlbnQiLCJzcmMiLCJhbHQiLCJjaXR5IiwiUHJvZ3Jlc3NCYXIiLCJwZXJjZW50YWdlIiwiTmF2YmFyIiwib3ZlclZpcyIsInNldE92ZXJWaXMiLCJzaG93IiwidG9nZ2xlT3ZlciIsIkFwcCIsIlJlYWN0RE9NIiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxF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ZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDQ5KTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwidmFyIGFycmF5V2l0aEhvbGVzID0gcmVxdWlyZShcIi4vYXJyYXlXaXRoSG9sZXNcIik7XG5cbnZhciBpdGVyYWJsZVRvQXJyYXlMaW1pdCA9IHJlcXVpcmUoXCIuL2l0ZXJhYmxlVG9BcnJheUxpbWl0XCIpO1xuXG52YXIgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgPSByZXF1aXJlKFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiKTtcblxudmFyIG5vbkl0ZXJhYmxlUmVzdCA9IHJlcXVpcmUoXCIuL25vbkl0ZXJhYmxlUmVzdFwiKTtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBhcnJheVdpdGhIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc2xpY2VkVG9BcnJheTsiLCJmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQ7IiwiZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2RlZmluZVByb3BlcnR5OyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWVcIik7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIGJ0b2EpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCJmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7XG4gIHRyeSB7XG4gICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpO1xuICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVqZWN0KGVycm9yKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgICBhcmdzID0gYXJndW1lbnRzO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7XG5cbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwidGhyb3dcIiwgZXJyKTtcbiAgICAgIH1cblxuICAgICAgX25leHQodW5kZWZpbmVkKTtcbiAgICB9KTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXN5bmNUb0dlbmVyYXRvcjsiLCJmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICBtb2R1bGUuZXhwb3J0cyA9IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgfTtcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZ2V0UHJvdG90eXBlT2Y7IiwiZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbmhlcml0c0xvb3NlOyIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMsIG9wdGlvbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJywgZmxhZ3Mob3B0aW9ucykpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zICYmIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc0NhbGxDaGVjazsiLCJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2NyZWF0ZUNsYXNzOyIsInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG52YXIgYXNzZXJ0VGhpc0luaXRpYWxpemVkID0gcmVxdWlyZShcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCIpO1xuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH1cblxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuOyIsInZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL3NldFByb3RvdHlwZU9mXCIpO1xuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2luaGVyaXRzOyIsIi8vIEBmbG93XG4ndXNlIHN0cmljdCc7XG5cbnZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gZ2xvYmFsW2tleV0gPSAoZ2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyx6PW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOlxuNjAxMTYsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gQyhhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBEPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxFPXt9O2Z1bmN0aW9uIEYoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH1GLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihDKDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtGLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEcoKXt9Ry5wcm90b3R5cGU9Ri5wcm90b3R5cGU7ZnVuY3Rpb24gSChhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfXZhciBJPUgucHJvdG90eXBlPW5ldyBHO0kuY29uc3RydWN0b3I9SDtsKEksRi5wcm90b3R5cGUpO0kuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGMpe3ZhciBlLGQ9e30sZz1udWxsLGs9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsZSkmJiFMLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGg9QXJyYXkoZiksbT0wO208ZjttKyspaFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWh9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbZV0mJihkW2VdPWZbZV0pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6ayxwcm9wczpkLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixjLGUpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9YztkLmNvbnRleHQ9ZTtkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6Yyxjb250ZXh0OmUsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGMsZSl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGMoZSxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGs9MDtrPGEubGVuZ3RoO2srKyl7ZD1hW2tdO3ZhciBmPWIrVShkLGspO2crPVQoZCxmLGMsZSl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1CJiZhW0JdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGs9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaysrKSxnKz1UKGQsZixjLGUpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWQpdGhyb3cgYz1cIlwiK2EsRXJyb3IoQygzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yz9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpjLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBWKGEsYixjKXtyZXR1cm4gbnVsbD09YT8wOlQoYSxcIlwiLGIsYyl9ZnVuY3Rpb24gVShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gVyhhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBhYShhLGIsYyl7dmFyIGU9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9YKGEsZSxjLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPU4oYSxkKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKStjKSksZS5wdXNoKGEpKX1mdW5jdGlvbiBYKGEsYixjLGUsZCl7dmFyIGc9XCJcIjtudWxsIT1jJiYoZz0oXCJcIitjKS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpO2I9UihiLGcsZSxkKTtWKGEsYWEsYik7UyhiKX12YXIgWT17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBaKCl7dmFyIGE9WS5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKEMoMzIxKSk7cmV0dXJuIGF9XG52YXIgYmE9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6WSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7c3VzcGVuc2U6bnVsbH0sUmVhY3RDdXJyZW50T3duZXI6SixJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O2V4cG9ydHMuQ2hpbGRyZW49e21hcDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXTtYKGEsZSxudWxsLGIsYyk7cmV0dXJuIGV9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGMpO1YoYSxXLGIpO1MoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBWKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107WChhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFPKGEpKXRocm93IEVycm9yKEMoMTQzKSk7cmV0dXJuIGF9fTtcbmV4cG9ydHMuQ29tcG9uZW50PUY7ZXhwb3J0cy5GcmFnbWVudD1yO2V4cG9ydHMuUHJvZmlsZXI9dTtleHBvcnRzLlB1cmVDb21wb25lbnQ9SDtleHBvcnRzLlN0cmljdE1vZGU9dDtleHBvcnRzLlN1c3BlbnNlPXk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1iYTtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihDKDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGc9YS5yZWYsaz1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGc9Yi5yZWYsaz1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGY9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoaCBpbiBiKUsuY2FsbChiLGgpJiYhTC5oYXNPd25Qcm9wZXJ0eShoKSYmKGVbaF09dm9pZCAwPT09YltoXSYmdm9pZCAwIT09Zj9mW2hdOmJbaF0pfXZhciBoPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09aCllLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGgpe2Y9QXJyYXkoaCk7Zm9yKHZhciBtPTA7bTxoO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Zn1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxcbmtleTpkLHJlZjpnLHByb3BzOmUsX293bmVyOmt9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9TTtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TztcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnosdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjEzLjFcIjtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB1KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih1KDIyNykpO1xuZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIGRhPSExLGVhPW51bGwsZmE9ITEsaGE9bnVsbCxpYT17b25FcnJvcjpmdW5jdGlvbihhKXtkYT0hMDtlYT1hfX07ZnVuY3Rpb24gamEoYSxiLGMsZCxlLGYsZyxoLGspe2RhPSExO2VhPW51bGw7YmEuYXBwbHkoaWEsYXJndW1lbnRzKX1mdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7amEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGRhKXtpZihkYSl7dmFyIGw9ZWE7ZGE9ITE7ZWE9bnVsbH1lbHNlIHRocm93IEVycm9yKHUoMTk4KSk7ZmF8fChmYT0hMCxoYT1sKX19dmFyIGxhPW51bGwsbWE9bnVsbCxuYT1udWxsO1xuZnVuY3Rpb24gb2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PW5hKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9dmFyIHBhPW51bGwscWE9e307XG5mdW5jdGlvbiByYSgpe2lmKHBhKWZvcih2YXIgYSBpbiBxYSl7dmFyIGI9cWFbYV0sYz1wYS5pbmRleE9mKGEpO2lmKCEoLTE8YykpdGhyb3cgRXJyb3IodSg5NixhKSk7aWYoIXNhW2NdKXtpZighYi5leHRyYWN0RXZlbnRzKXRocm93IEVycm9yKHUoOTcsYSkpO3NhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7aWYodGEuaGFzT3duUHJvcGVydHkoaCkpdGhyb3cgRXJyb3IodSg5OSxoKSk7dGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmdWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHVhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7aWYoIWUpdGhyb3cgRXJyb3IodSg5OCxkLGEpKTt9fX19XG5mdW5jdGlvbiB1YShhLGIsYyl7aWYodmFbYV0pdGhyb3cgRXJyb3IodSgxMDAsYSkpO3ZhW2FdPWI7d2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgc2E9W10sdGE9e30sdmE9e30sd2E9e307ZnVuY3Rpb24geGEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107aWYoIXFhLmhhc093blByb3BlcnR5KGMpfHxxYVtjXSE9PWQpe2lmKHFhW2NdKXRocm93IEVycm9yKHUoMTAyLGMpKTtxYVtjXT1kO2I9ITB9fWImJnJhKCl9dmFyIHlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSx6YT1udWxsLEFhPW51bGwsQmE9bnVsbDtcbmZ1bmN0aW9uIENhKGEpe2lmKGE9bWEoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB6YSl0aHJvdyBFcnJvcih1KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPWxhKGIpLHphKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIERhKGEpe0FhP0JhP0JhLnB1c2goYSk6QmE9W2FdOkFhPWF9ZnVuY3Rpb24gRWEoKXtpZihBYSl7dmFyIGE9QWEsYj1CYTtCYT1BYT1udWxsO0NhKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylDYShiW2FdKX19ZnVuY3Rpb24gRmEoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBHYShhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEhhKCl7fXZhciBJYT1GYSxKYT0hMSxLYT0hMTtmdW5jdGlvbiBMYSgpe2lmKG51bGwhPT1BYXx8bnVsbCE9PUJhKUhhKCksRWEoKX1cbmZ1bmN0aW9uIE1hKGEsYixjKXtpZihLYSlyZXR1cm4gYShiLGMpO0thPSEwO3RyeXtyZXR1cm4gSWEoYSxiLGMpfWZpbmFsbHl7S2E9ITEsTGEoKX19dmFyIE5hPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxPYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFBhPXt9LFFhPXt9O1xuZnVuY3Rpb24gUmEoYSl7aWYoT2EuY2FsbChRYSxhKSlyZXR1cm4hMDtpZihPYS5jYWxsKFBhLGEpKXJldHVybiExO2lmKE5hLnRlc3QoYSkpcmV0dXJuIFFhW2FdPSEwO1BhW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIFNhKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVGEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8U2EoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiB2KGEsYixjLGQsZSxmKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zn12YXIgQz17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDAsITEsYSxudWxsLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtDW2JdPW5ldyB2KGIsMSwhMSxhWzFdLG51bGwsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYSxudWxsLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITAsYSxudWxsLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDQsITEsYSxudWxsLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNiwhMSxhLG51bGwsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTt2YXIgVWE9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBWYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxcblZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLG51bGwsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbkMueGxpbmtIcmVmPW5ldyB2KFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCl9KTt2YXIgV2E9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwoV2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZ1wiKXx8KFdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnPXtzdXNwZW5zZTpudWxsfSk7XG5mdW5jdGlvbiBYYShhLGIsYyxkKXt2YXIgZT1DLmhhc093blByb3BlcnR5KGIpP0NbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChUYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/UmEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciBZYT0vXiguKilbXFxcXFxcL10vLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRhPUU/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZiPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxpYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAsamI9RT9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxrYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGxiPUU/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLG1iPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBuYihhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9bWImJmFbbWJdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24gb2IoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe2EuX3N0YXR1cz0wO3ZhciBiPWEuX2N0b3I7Yj1iKCk7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX19XG5mdW5jdGlvbiBwYihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGFiOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlICRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBjYjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBiYjpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGhiOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIGliOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGViOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgZGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBnYjp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlxuXCJGb3J3YXJkUmVmXCIpO2Nhc2UgamI6cmV0dXJuIHBiKGEudHlwZSk7Y2FzZSBsYjpyZXR1cm4gcGIoYS5yZW5kZXIpO2Nhc2Uga2I6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBwYihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBxYihhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9cGIoYS50eXBlKTtjPW51bGw7ZCYmKGM9cGIoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYSxcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxuZnVuY3Rpb24gcmIoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHNiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiB0YihhKXt2YXIgYj1zYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24geGIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPXRiKGEpKX1mdW5jdGlvbiB5YihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9c2IoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiB6YihhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBBYihhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1yYihudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEJiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmWGEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIENiKGEsYil7QmIoYSxiKTt2YXIgYz1yYihiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9EYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZEYihhLGIudHlwZSxyYihiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEViKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gRmIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gR2IoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1GYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBIYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrcmIoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIEliKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih1KDkxKSk7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gSmIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IodSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHUoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpyYihjKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPXJiKGIudmFsdWUpLGQ9cmIoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBMYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBNYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBOYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIE9iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9OYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBQYixRYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1NYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtQYj1QYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtQYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1QYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBSYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifWZ1bmN0aW9uIFNiKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRiPXthbmltYXRpb25lbmQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFViPXt9LFZiPXt9O1xueWEmJihWYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYi5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYi50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdiKGEpe2lmKFViW2FdKXJldHVybiBVYlthXTtpZighVGJbYV0pcmV0dXJuIGE7dmFyIGI9VGJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmIpcmV0dXJuIFViW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGI9V2IoXCJhbmltYXRpb25lbmRcIiksWWI9V2IoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmI9V2IoXCJhbmltYXRpb25zdGFydFwiKSwkYj1XYihcInRyYW5zaXRpb25lbmRcIiksYWM9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJjPW5ldyAoXCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXApO2Z1bmN0aW9uIGNjKGEpe3ZhciBiPWJjLmdldChhKTt2b2lkIDA9PT1iJiYoYj1uZXcgTWFwLGJjLnNldChhLGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGRjKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5lZmZlY3RUYWcmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIGVjKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZmMoYSl7aWYoZGMoYSkhPT1hKXRocm93IEVycm9yKHUoMTg4KSk7fVxuZnVuY3Rpb24gZ2MoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9ZGMoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gZmMoZSksYTtpZihmPT09ZClyZXR1cm4gZmMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih1KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHUoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IodSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBoYyhhKXthPWdjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gaWMoYSxiKXtpZihudWxsPT1iKXRocm93IEVycm9yKHUoMzApKTtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gamMoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIGtjPW51bGw7XG5mdW5jdGlvbiBsYyhhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspb2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmb2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIG1jKGEpe251bGwhPT1hJiYoa2M9aWMoa2MsYSkpO2E9a2M7a2M9bnVsbDtpZihhKXtqYyhhLGxjKTtpZihrYyl0aHJvdyBFcnJvcih1KDk1KSk7aWYoZmEpdGhyb3cgYT1oYSxmYT0hMSxoYT1udWxsLGE7fX1cbmZ1bmN0aW9uIG5jKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBvYyhhKXtpZigheWEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9dmFyIHBjPVtdO2Z1bmN0aW9uIHFjKGEpe2EudG9wTGV2ZWxUeXBlPW51bGw7YS5uYXRpdmVFdmVudD1udWxsO2EudGFyZ2V0SW5zdD1udWxsO2EuYW5jZXN0b3JzLmxlbmd0aD0wOzEwPnBjLmxlbmd0aCYmcGMucHVzaChhKX1cbmZ1bmN0aW9uIHJjKGEsYixjLGQpe2lmKHBjLmxlbmd0aCl7dmFyIGU9cGMucG9wKCk7ZS50b3BMZXZlbFR5cGU9YTtlLmV2ZW50U3lzdGVtRmxhZ3M9ZDtlLm5hdGl2ZUV2ZW50PWI7ZS50YXJnZXRJbnN0PWM7cmV0dXJuIGV9cmV0dXJue3RvcExldmVsVHlwZTphLGV2ZW50U3lzdGVtRmxhZ3M6ZCxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119fVxuZnVuY3Rpb24gc2MoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZD1jO2lmKDM9PT1kLnRhZylkPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZWxzZXtmb3IoO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mb31pZighZClicmVhaztiPWMudGFnOzUhPT1iJiY2IT09Ynx8YS5hbmNlc3RvcnMucHVzaChjKTtjPXRjKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPW5jKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7dmFyIGY9YS5uYXRpdmVFdmVudCxnPWEuZXZlbnRTeXN0ZW1GbGFnczswPT09YyYmKGd8PTY0KTtmb3IodmFyIGg9bnVsbCxrPTA7azxzYS5sZW5ndGg7aysrKXt2YXIgbD1zYVtrXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSxnKSkmJihoPVxuaWMoaCxsKSl9bWMoaCl9fWZ1bmN0aW9uIHVjKGEsYixjKXtpZighYy5oYXMoYSkpe3N3aXRjaChhKXtjYXNlIFwic2Nyb2xsXCI6dmMoYixcInNjcm9sbFwiLCEwKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOnZjKGIsXCJmb2N1c1wiLCEwKTt2YyhiLFwiYmx1clwiLCEwKTtjLnNldChcImJsdXJcIixudWxsKTtjLnNldChcImZvY3VzXCIsbnVsbCk7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOm9jKGEpJiZ2YyhiLGEsITApO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1hYy5pbmRleE9mKGEpJiZGKGEsYil9Yy5zZXQoYSxudWxsKX19XG52YXIgd2MseGMseWMsemM9ITEsQWM9W10sQmM9bnVsbCxDYz1udWxsLERjPW51bGwsRWM9bmV3IE1hcCxGYz1uZXcgTWFwLEdjPVtdLEhjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY2xvc2UgY2FuY2VsIGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIiksSWM9XCJmb2N1cyBibHVyIGRyYWdlbnRlciBkcmFnbGVhdmUgbW91c2VvdmVyIG1vdXNlb3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJvdXQgZ290cG9pbnRlcmNhcHR1cmUgbG9zdHBvaW50ZXJjYXB0dXJlXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gSmMoYSxiKXt2YXIgYz1jYyhiKTtIYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pO0ljLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSl9ZnVuY3Rpb24gS2MoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsdG9wTGV2ZWxUeXBlOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDMyLG5hdGl2ZUV2ZW50OmUsY29udGFpbmVyOmR9fVxuZnVuY3Rpb24gTGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpCYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Q2M9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6RGM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOkVjLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOkZjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fWZ1bmN0aW9uIE1jKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9S2MoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9TmMoYiksbnVsbCE9PWImJnhjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIE9jKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c1wiOnJldHVybiBCYz1NYyhCYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gQ2M9TWMoQ2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIERjPU1jKERjLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7RWMuc2V0KGYsTWMoRWMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLEZjLnNldChmLE1jKEZjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIFBjKGEpe3ZhciBiPXRjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9ZGMoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9ZWMoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe3ljKGMpfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1mdW5jdGlvbiBRYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1iKXt2YXIgYz1OYyhiKTtudWxsIT09YyYmeGMoYyk7YS5ibG9ja2VkT249YjtyZXR1cm4hMX1yZXR1cm4hMH1cbmZ1bmN0aW9uIFNjKGEsYixjKXtRYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gVGMoKXtmb3IoemM9ITE7MDxBYy5sZW5ndGg7KXt2YXIgYT1BY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9TmMoYS5ibG9ja2VkT24pO251bGwhPT1hJiZ3YyhhKTticmVha312YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7bnVsbCE9PWI/YS5ibG9ja2VkT249YjpBYy5zaGlmdCgpfW51bGwhPT1CYyYmUWMoQmMpJiYoQmM9bnVsbCk7bnVsbCE9PUNjJiZRYyhDYykmJihDYz1udWxsKTtudWxsIT09RGMmJlFjKERjKSYmKERjPW51bGwpO0VjLmZvckVhY2goU2MpO0ZjLmZvckVhY2goU2MpfWZ1bmN0aW9uIFVjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCx6Y3x8KHpjPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFRjKSkpfVxuZnVuY3Rpb24gVmMoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gVWMoYixhKX1pZigwPEFjLmxlbmd0aCl7VWMoQWNbMF0sYSk7Zm9yKHZhciBjPTE7YzxBYy5sZW5ndGg7YysrKXt2YXIgZD1BY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PUJjJiZVYyhCYyxhKTtudWxsIT09Q2MmJlVjKENjLGEpO251bGwhPT1EYyYmVWMoRGMsYSk7RWMuZm9yRWFjaChiKTtGYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxHYy5sZW5ndGg7YysrKWQ9R2NbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPEdjLmxlbmd0aCYmKGM9R2NbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspUGMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZHYy5zaGlmdCgpfVxudmFyIFdjPXt9LFljPW5ldyBNYXAsWmM9bmV3IE1hcCwkYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixYYixcImFuaW1hdGlvbkVuZFwiLFliLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsWmIsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXG5cInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIiwkYixcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gYWQoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV0sZj1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtmPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpmLGNhcHR1cmVkOmYrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbZF0sZXZlbnRQcmlvcml0eTpifTtaYy5zZXQoZCxiKTtZYy5zZXQoZCxmKTtXY1tlXT1mfX1cbmFkKFwiYmx1ciBibHVyIGNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzIGZvY3VzIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksMCk7XG5hZChcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTthZCgkYywyKTtmb3IodmFyIGJkPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxjZD0wO2NkPGJkLmxlbmd0aDtjZCsrKVpjLnNldChiZFtjZF0sMCk7XG52YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBGKGEsYil7dmMoYixhLCExKX1mdW5jdGlvbiB2YyhhLGIsYyl7dmFyIGQ9WmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1kPzI6ZCl7Y2FzZSAwOmQ9Z2QuYmluZChudWxsLGIsMSxhKTticmVhaztjYXNlIDE6ZD1oZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2RlZmF1bHQ6ZD1pZC5iaW5kKG51bGwsYiwxLGEpfWM/YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMCk6YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMSl9ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7SmF8fEhhKCk7dmFyIGU9aWQsZj1KYTtKYT0hMDt0cnl7R2EoZSxhLGIsYyxkKX1maW5hbGx5eyhKYT1mKXx8TGEoKX19ZnVuY3Rpb24gaGQoYSxiLGMsZCl7ZWQoZGQsaWQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGlkKGEsYixjLGQpe2lmKGZkKWlmKDA8QWMubGVuZ3RoJiYtMTxIYy5pbmRleE9mKGEpKWE9S2MobnVsbCxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2V7dmFyIGU9UmMoYSxiLGMsZCk7aWYobnVsbD09PWUpTGMoYSxkKTtlbHNlIGlmKC0xPEhjLmluZGV4T2YoYSkpYT1LYyhlLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZSBpZighT2MoZSxhLGIsYyxkKSl7TGMoYSxkKTthPXJjKGEsZCxudWxsLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfX19fVxuZnVuY3Rpb24gUmMoYSxiLGMsZCl7Yz1uYyhkKTtjPXRjKGMpO2lmKG51bGwhPT1jKXt2YXIgZT1kYyhjKTtpZihudWxsPT09ZSljPW51bGw7ZWxzZXt2YXIgZj1lLnRhZztpZigxMz09PWYpe2M9ZWMoZSk7aWYobnVsbCE9PWMpcmV0dXJuIGM7Yz1udWxsfWVsc2UgaWYoMz09PWYpe2lmKGUuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1lLnRhZz9lLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7Yz1udWxsfWVsc2UgZSE9PWMmJihjPW51bGwpfX1hPXJjKGEsZCxjLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfXJldHVybiBudWxsfVxudmFyIGpkPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LGtkPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhqZCkuZm9yRWFjaChmdW5jdGlvbihhKXtrZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2pkW2JdPWpkW2FdfSl9KTtmdW5jdGlvbiBsZChhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8amQuaGFzT3duUHJvcGVydHkoYSkmJmpkW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIG1kKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPWxkKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIG5kPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBvZChhLGIpe2lmKGIpe2lmKG5kW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSgxMzcsYSxcIlwiKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih1KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih1KDYyLFwiXCIpKTt9fVxuZnVuY3Rpb24gcGQoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBxZD1NYi5odG1sO2Z1bmN0aW9uIHJkKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPWNjKGEpO2I9d2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspdWMoYltkXSxhLGMpfWZ1bmN0aW9uIHNkKCl7fVxuZnVuY3Rpb24gdGQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIHVkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1mdW5jdGlvbiB2ZChhLGIpe3ZhciBjPXVkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPXVkKGMpfX1cbmZ1bmN0aW9uIHdkKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/d2QoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfWZ1bmN0aW9uIHhkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPXRkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPXRkKGEuZG9jdW1lbnQpfXJldHVybiBifVxuZnVuY3Rpb24geWQoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX12YXIgemQ9XCIkXCIsQWQ9XCIvJFwiLEJkPVwiJD9cIixDZD1cIiQhXCIsRGQ9bnVsbCxFZD1udWxsO2Z1bmN0aW9uIEZkKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIEdkKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgSGQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsSWQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIEpkKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfVxuZnVuY3Rpb24gS2QoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09emR8fGM9PT1DZHx8Yz09PUJkKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZSBjPT09QWQmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciBMZD1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxNZD1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0xkLE5kPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrTGQsT2Q9XCJfX3JlYWN0Q29udGFpbmVyZSRcIitMZDtcbmZ1bmN0aW9uIHRjKGEpe3ZhciBiPWFbTWRdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW09kXXx8Y1tNZF0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1LZChhKTtudWxsIT09YTspe2lmKGM9YVtNZF0pcmV0dXJuIGM7YT1LZChhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTmMoYSl7YT1hW01kXXx8YVtPZF07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIFBkKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih1KDMzKSk7fWZ1bmN0aW9uIFFkKGEpe3JldHVybiBhW05kXXx8bnVsbH1cbmZ1bmN0aW9uIFJkKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBTZChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPWxhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDIzMSxcbmIsdHlwZW9mIGMpKTtyZXR1cm4gY31mdW5jdGlvbiBUZChhLGIsYyl7aWYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIFVkKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9UmQoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KVRkKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspVGQoY1tiXSxcImJ1YmJsZWRcIixhKX19XG5mdW5jdGlvbiBWZChhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFdkKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmVmQoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfWZ1bmN0aW9uIFhkKGEpe2pjKGEsVWQpfXZhciBZZD1udWxsLFpkPW51bGwsJGQ9bnVsbDtcbmZ1bmN0aW9uIGFlKCl7aWYoJGQpcmV0dXJuICRkO3ZhciBhLGI9WmQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gJGQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBiZSgpe3JldHVybiEwfWZ1bmN0aW9uIGNlKCl7cmV0dXJuITF9XG5mdW5jdGlvbiBHKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9iZTpjZTt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWNlO3JldHVybiB0aGlzfVxubihHLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWJlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWJlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWJlfSxpc1BlcnNpc3RlbnQ6Y2UsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Y2U7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTtHLkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbkcuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7ZGUoYyk7cmV0dXJuIGN9O2RlKEcpO2Z1bmN0aW9uIGVlKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gZmUoYSl7aWYoIShhIGluc3RhbmNlb2YgdGhpcykpdGhyb3cgRXJyb3IodSgyNzkpKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9ZnVuY3Rpb24gZGUoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9ZWU7YS5yZWxlYXNlPWZlfXZhciBnZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaGU9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGllPVs5LDEzLDI3LDMyXSxqZT15YSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csa2U9bnVsbDt5YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoa2U9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBsZT15YSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWtlLG1lPXlhJiYoIWplfHxrZSYmODxrZSYmMTE+PWtlKSxuZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxvZT17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSxwZT0hMTtcbmZ1bmN0aW9uIHFlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09aWUuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiByZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBzZT0hMTtmdW5jdGlvbiB0ZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gcmUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3BlPSEwO3JldHVybiBuZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1uZSYmcGU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gdWUoYSxiKXtpZihzZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhamUmJnFlKGEsYik/KGE9YWUoKSwkZD1aZD1ZZD1udWxsLHNlPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBtZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgdmU9e2V2ZW50VHlwZXM6b2UsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZTtpZihqZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgZj1vZS5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Zj1vZS5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmY9b2UuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1mPXZvaWQgMH1lbHNlIHNlP3FlKGEsYykmJihmPW9lLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGY9b2UuY29tcG9zaXRpb25TdGFydCk7Zj8obWUmJlwia29cIiE9PWMubG9jYWxlJiYoc2V8fGYhPT1vZS5jb21wb3NpdGlvblN0YXJ0P2Y9PT1vZS5jb21wb3NpdGlvbkVuZCYmc2UmJihlPWFlKCkpOihZZD1kLFpkPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LHNlPSEwKSksZj1nZS5nZXRQb29sZWQoZixcbmIsYyxkKSxlP2YuZGF0YT1lOihlPXJlKGMpLG51bGwhPT1lJiYoZi5kYXRhPWUpKSxYZChmKSxlPWYpOmU9bnVsbDsoYT1sZT90ZShhLGMpOnVlKGEsYykpPyhiPWhlLmdldFBvb2xlZChvZS5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsWGQoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWU/YjpudWxsPT09Yj9lOltlLGJdfX0sd2U9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24geGUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISF3ZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG52YXIgeWU9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gemUoYSxiLGMpe2E9Ry5nZXRQb29sZWQoeWUuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtEYShjKTtYZChhKTtyZXR1cm4gYX12YXIgQWU9bnVsbCxCZT1udWxsO2Z1bmN0aW9uIENlKGEpe21jKGEpfWZ1bmN0aW9uIERlKGEpe3ZhciBiPVBkKGEpO2lmKHliKGIpKXJldHVybiBhfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEZlPSExO3lhJiYoRmU9b2MoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7XG5mdW5jdGlvbiBHZSgpe0FlJiYoQWUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpLEJlPUFlPW51bGwpfWZ1bmN0aW9uIEhlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZEZShCZSkpaWYoYT16ZShCZSxhLG5jKGEpKSxKYSltYyhhKTtlbHNle0phPSEwO3RyeXtGYShDZSxhKX1maW5hbGx5e0phPSExLExhKCl9fX1mdW5jdGlvbiBJZShhLGIsYyl7XCJmb2N1c1wiPT09YT8oR2UoKSxBZT1iLEJlPWMsQWUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpKTpcImJsdXJcIj09PWEmJkdlKCl9ZnVuY3Rpb24gSmUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gRGUoQmUpfWZ1bmN0aW9uIEtlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gRGUoYil9ZnVuY3Rpb24gTGUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gRGUoYil9XG52YXIgTWU9e2V2ZW50VHlwZXM6eWUsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpGZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/UGQoYik6d2luZG93LGY9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1mfHxcImlucHV0XCI9PT1mJiZcImZpbGVcIj09PWUudHlwZSl2YXIgZz1FZTtlbHNlIGlmKHhlKGUpKWlmKEZlKWc9TGU7ZWxzZXtnPUplO3ZhciBoPUllfWVsc2UoZj1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09Zi50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZz1LZSk7aWYoZyYmKGc9ZyhhLGIpKSlyZXR1cm4gemUoZyxjLGQpO2gmJmgoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZEYihlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxOZT1HLmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksXG5PZT17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGUoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZVthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFFlKCl7cmV0dXJuIFBlfVxudmFyIFJlPTAsU2U9MCxUZT0hMSxVZT0hMSxWZT1OZS5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9UmU7UmU9YS5zY3JlZW5YO3JldHVybiBUZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFRlPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9U2U7U2U9YS5zY3JlZW5ZO3JldHVybiBVZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFVlPSEwLDApfX0pLFdlPVZlLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxYZT17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sWWU9e2V2ZW50VHlwZXM6WGUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGc9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGYmJjA9PT0oZSYzMikmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZyYmIWYpcmV0dXJuIG51bGw7Zj1kLndpbmRvdz09PWQ/ZDooZj1kLm93bmVyRG9jdW1lbnQpP2YuZGVmYXVsdFZpZXd8fGYucGFyZW50V2luZG93OndpbmRvdztpZihnKXtpZihnPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT90YyhiKTpudWxsLG51bGwhPT1iKXt2YXIgaD1kYyhiKTtpZihiIT09aHx8NSE9PWIudGFnJiY2IT09Yi50YWcpYj1udWxsfX1lbHNlIGc9bnVsbDtpZihnPT09YilyZXR1cm4gbnVsbDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09XG5hKXt2YXIgaz1WZTt2YXIgbD1YZS5tb3VzZUxlYXZlO3ZhciBtPVhlLm1vdXNlRW50ZXI7dmFyIHA9XCJtb3VzZVwifWVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWs9V2UsbD1YZS5wb2ludGVyTGVhdmUsbT1YZS5wb2ludGVyRW50ZXIscD1cInBvaW50ZXJcIjthPW51bGw9PWc/ZjpQZChnKTtmPW51bGw9PWI/ZjpQZChiKTtsPWsuZ2V0UG9vbGVkKGwsZyxjLGQpO2wudHlwZT1wK1wibGVhdmVcIjtsLnRhcmdldD1hO2wucmVsYXRlZFRhcmdldD1mO2M9ay5nZXRQb29sZWQobSxiLGMsZCk7Yy50eXBlPXArXCJlbnRlclwiO2MudGFyZ2V0PWY7Yy5yZWxhdGVkVGFyZ2V0PWE7ZD1nO3A9YjtpZihkJiZwKWE6e2s9ZDttPXA7Zz0wO2ZvcihhPWs7YTthPVJkKGEpKWcrKzthPTA7Zm9yKGI9bTtiO2I9UmQoYikpYSsrO2Zvcig7MDxnLWE7KWs9UmQoayksZy0tO2Zvcig7MDxhLWc7KW09UmQobSksYS0tO2Zvcig7Zy0tOyl7aWYoaz09PW18fGs9PT1tLmFsdGVybmF0ZSlicmVhayBhO1xuaz1SZChrKTttPVJkKG0pfWs9bnVsbH1lbHNlIGs9bnVsbDttPWs7Zm9yKGs9W107ZCYmZCE9PW07KXtnPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztrLnB1c2goZCk7ZD1SZChkKX1mb3IoZD1bXTtwJiZwIT09bTspe2c9cC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2QucHVzaChwKTtwPVJkKHApfWZvcihwPTA7cDxrLmxlbmd0aDtwKyspVmQoa1twXSxcImJ1YmJsZWRcIixsKTtmb3IocD1kLmxlbmd0aDswPHAtLTspVmQoZFtwXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuIDA9PT0oZSY2NCk/W2xdOltsLGNdfX07ZnVuY3Rpb24gWmUoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciAkZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpaZSxhZj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gYmYoYSxiKXtpZigkZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWFmLmNhbGwoYixjW2RdKXx8ISRlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9XG52YXIgY2Y9eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxkZj17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sZWY9bnVsbCxmZj1udWxsLGdmPW51bGwsaGY9ITE7XG5mdW5jdGlvbiBqZihhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKGhmfHxudWxsPT1lZnx8ZWYhPT10ZChjKSlyZXR1cm4gbnVsbDtjPWVmO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJnlkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIGdmJiZiZihnZixjKT9udWxsOihnZj1jLGE9Ry5nZXRQb29sZWQoZGYuc2VsZWN0LGZmLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9ZWYsWGQoYSksYSl9XG52YXIga2Y9e2V2ZW50VHlwZXM6ZGYsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUsZil7ZT1mfHwoZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQpO2lmKCEoZj0hZSkpe2E6e2U9Y2MoZSk7Zj13YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKylpZighZS5oYXMoZltnXSkpe2U9ITE7YnJlYWsgYX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/UGQoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZih4ZShlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSllZj1lLGZmPWIsZ2Y9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOmdmPWZmPWVmPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOmhmPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gaGY9ITEsamYoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoY2YpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBqZihjLGQpfXJldHVybiBudWxsfX0sbGY9Ry5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLG1mPUcuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksbmY9TmUuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBvZihhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBwZj17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0scWY9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHJmPU5lLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1wZlthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZihhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/cWZbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29mKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29mKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksc2Y9VmUuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHRmPU5lLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlfSksdWY9Ry5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksdmY9VmUuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx3Zj17ZXZlbnRUeXBlczpXYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVljLmdldChhKTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9mKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1yZjticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9bmY7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1cblZlO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9c2Y7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT10ZjticmVhaztjYXNlIFhiOmNhc2UgWWI6Y2FzZSBaYjphPWxmO2JyZWFrO2Nhc2UgJGI6YT11ZjticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1OZTticmVhaztjYXNlIFwid2hlZWxcIjphPXZmO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9bWY7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1cbldlO2JyZWFrO2RlZmF1bHQ6YT1HfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7WGQoYik7cmV0dXJuIGJ9fTtpZihwYSl0aHJvdyBFcnJvcih1KDEwMSkpO3BhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3JhKCk7dmFyIHhmPU5jO2xhPVFkO21hPXhmO25hPVBkO3hhKHtTaW1wbGVFdmVudFBsdWdpbjp3ZixFbnRlckxlYXZlRXZlbnRQbHVnaW46WWUsQ2hhbmdlRXZlbnRQbHVnaW46TWUsU2VsZWN0RXZlbnRQbHVnaW46a2YsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjp2ZX0pO3ZhciB5Zj1bXSx6Zj0tMTtmdW5jdGlvbiBIKGEpezA+emZ8fChhLmN1cnJlbnQ9eWZbemZdLHlmW3pmXT1udWxsLHpmLS0pfVxuZnVuY3Rpb24gSShhLGIpe3pmKys7eWZbemZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQWY9e30sSj17Y3VycmVudDpBZn0sSz17Y3VycmVudDohMX0sQmY9QWY7ZnVuY3Rpb24gQ2YoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBBZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBMKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9XG5mdW5jdGlvbiBEZigpe0goSyk7SChKKX1mdW5jdGlvbiBFZihhLGIsYyl7aWYoSi5jdXJyZW50IT09QWYpdGhyb3cgRXJyb3IodSgxNjgpKTtJKEosYik7SShLLGMpfWZ1bmN0aW9uIEZmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IodSgxMDgscGIoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbih7fSxjLHt9LGQpfWZ1bmN0aW9uIEdmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxBZjtCZj1KLmN1cnJlbnQ7SShKLGEpO0koSyxLLmN1cnJlbnQpO3JldHVybiEwfVxuZnVuY3Rpb24gSGYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHUoMTY5KSk7Yz8oYT1GZihhLGIsQmYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKEspLEgoSiksSShKLGEpKTpIKEspO0koSyxjKX1cbnZhciBJZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxKZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssS2Y9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxMZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxNZj1yLnVuc3RhYmxlX25vdyxOZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLE9mPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksUGY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxRZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFJmPXIudW5zdGFibGVfTG93UHJpb3JpdHksU2Y9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksVGY9e30sVWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxWZj12b2lkIDAhPT1MZj9MZjpmdW5jdGlvbigpe30sV2Y9bnVsbCxYZj1udWxsLFlmPSExLFpmPU1mKCksJGY9MUU0PlpmP01mOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKCktWmZ9O1xuZnVuY3Rpb24gYWcoKXtzd2l0Y2goTmYoKSl7Y2FzZSBPZjpyZXR1cm4gOTk7Y2FzZSBQZjpyZXR1cm4gOTg7Y2FzZSBRZjpyZXR1cm4gOTc7Y2FzZSBSZjpyZXR1cm4gOTY7Y2FzZSBTZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gYmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIE9mO2Nhc2UgOTg6cmV0dXJuIFBmO2Nhc2UgOTc6cmV0dXJuIFFmO2Nhc2UgOTY6cmV0dXJuIFJmO2Nhc2UgOTU6cmV0dXJuIFNmO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGNnKGEsYil7YT1iZyhhKTtyZXR1cm4gSWYoYSxiKX1mdW5jdGlvbiBkZyhhLGIsYyl7YT1iZyhhKTtyZXR1cm4gSmYoYSxiLGMpfWZ1bmN0aW9uIGVnKGEpe251bGw9PT1XZj8oV2Y9W2FdLFhmPUpmKE9mLGZnKSk6V2YucHVzaChhKTtyZXR1cm4gVGZ9ZnVuY3Rpb24gZ2coKXtpZihudWxsIT09WGYpe3ZhciBhPVhmO1hmPW51bGw7S2YoYSl9ZmcoKX1cbmZ1bmN0aW9uIGZnKCl7aWYoIVlmJiZudWxsIT09V2Ype1lmPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPVdmO2NnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTtXZj1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1XZiYmKFdmPVdmLnNsaWNlKGErMSkpLEpmKE9mLGdnKSxjO31maW5hbGx5e1lmPSExfX19ZnVuY3Rpb24gaGcoYSxiLGMpe2MvPTEwO3JldHVybiAxMDczNzQxODIxLSgoKDEwNzM3NDE4MjEtYStiLzEwKS9jfDApKzEpKmN9ZnVuY3Rpb24gaWcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9dmFyIGpnPXtjdXJyZW50Om51bGx9LGtnPW51bGwsbGc9bnVsbCxtZz1udWxsO2Z1bmN0aW9uIG5nKCl7bWc9bGc9a2c9bnVsbH1cbmZ1bmN0aW9uIG9nKGEpe3ZhciBiPWpnLmN1cnJlbnQ7SChqZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBwZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZihhLmNoaWxkRXhwaXJhdGlvblRpbWU8YilhLmNoaWxkRXhwaXJhdGlvblRpbWU9YixudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7ZWxzZSBpZihudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYy5jaGlsZEV4cGlyYXRpb25UaW1lPWI7ZWxzZSBicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBxZyhhLGIpe2tnPWE7bWc9bGc9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJihhLmV4cGlyYXRpb25UaW1lPj1iJiYocmc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gc2coYSxiKXtpZihtZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpbWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PWxnKXtpZihudWxsPT09a2cpdGhyb3cgRXJyb3IodSgzMDgpKTtsZz1iO2tnLmRlcGVuZGVuY2llcz17ZXhwaXJhdGlvblRpbWU6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2UgbGc9bGcubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHRnPSExO2Z1bmN0aW9uIHVnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsYmFzZVF1ZXVlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB2ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxiYXNlUXVldWU6YS5iYXNlUXVldWUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gd2coYSxiKXthPXtleHBpcmF0aW9uVGltZTphLHN1c3BlbnNlQ29uZmlnOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfTtyZXR1cm4gYS5uZXh0PWF9ZnVuY3Rpb24geGcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiB5ZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZ2ZyhjLGEpO2E9YS51cGRhdGVRdWV1ZTtjPWEuYmFzZVF1ZXVlO251bGw9PT1jPyhhLmJhc2VRdWV1ZT1iLm5leHQ9YixiLm5leHQ9Yik6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpfVxuZnVuY3Rpb24gemcoYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt0Zz0hMTt2YXIgZj1lLmJhc2VRdWV1ZSxnPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWcpe2lmKG51bGwhPT1mKXt2YXIgaD1mLm5leHQ7Zi5uZXh0PWcubmV4dDtnLm5leHQ9aH1mPWc7ZS5zaGFyZWQucGVuZGluZz1udWxsO2g9YS5hbHRlcm5hdGU7bnVsbCE9PWgmJihoPWgudXBkYXRlUXVldWUsbnVsbCE9PWgmJihoLmJhc2VRdWV1ZT1nKSl9aWYobnVsbCE9PWYpe2g9Zi5uZXh0O3ZhciBrPWUuYmFzZVN0YXRlLGw9MCxtPW51bGwscD1udWxsLHg9bnVsbDtpZihudWxsIT09aCl7dmFyIHo9aDtkb3tnPXouZXhwaXJhdGlvblRpbWU7aWYoZzxkKXt2YXIgY2E9e2V4cGlyYXRpb25UaW1lOnouZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT14PyhwPXg9XG5jYSxtPWspOng9eC5uZXh0PWNhO2c+bCYmKGw9Zyl9ZWxzZXtudWxsIT09eCYmKHg9eC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfSk7QWcoZyx6LnN1c3BlbnNlQ29uZmlnKTthOnt2YXIgRD1hLHQ9ejtnPWI7Y2E9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpEPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRCl7az1ELmNhbGwoY2EsayxnKTticmVhayBhfWs9RDticmVhayBhO2Nhc2UgMzpELmVmZmVjdFRhZz1ELmVmZmVjdFRhZyYtNDA5N3w2NDtjYXNlIDA6RD10LnBheWxvYWQ7Zz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgRD9ELmNhbGwoY2EsayxnKTpEO2lmKG51bGw9PT1nfHx2b2lkIDA9PT1nKWJyZWFrIGE7az1uKHt9LGssZyk7YnJlYWsgYTtjYXNlIDI6dGc9ITB9fW51bGwhPT16LmNhbGxiYWNrJiZcbihhLmVmZmVjdFRhZ3w9MzIsZz1lLmVmZmVjdHMsbnVsbD09PWc/ZS5lZmZlY3RzPVt6XTpnLnB1c2goeikpfXo9ei5uZXh0O2lmKG51bGw9PT16fHx6PT09aClpZihnPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWcpYnJlYWs7ZWxzZSB6PWYubmV4dD1nLm5leHQsZy5uZXh0PWgsZS5iYXNlUXVldWU9Zj1nLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKX1udWxsPT09eD9tPWs6eC5uZXh0PXA7ZS5iYXNlU3RhdGU9bTtlLmJhc2VRdWV1ZT14O0JnKGwpO2EuZXhwaXJhdGlvblRpbWU9bDthLm1lbW9pemVkU3RhdGU9a319XG5mdW5jdGlvbiBDZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWU7ZT1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkKXRocm93IEVycm9yKHUoMTkxLGQpKTtkLmNhbGwoZSl9fX12YXIgRGc9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsRWc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24gRmcoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5leHBpcmF0aW9uVGltZSYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEpnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT9kYyhhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9R2coKSxkPURnLnN1c3BlbnNlO1xuYz1IZyhjLGEsZCk7ZD13ZyhjLGQpO2QudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO3hnKGEsZCk7SWcoYSxjKX19O2Z1bmN0aW9uIEtnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWJmKGMsZCl8fCFiZihlLGYpOiEwfVxuZnVuY3Rpb24gTGcoYSxiLGMpe3ZhciBkPSExLGU9QWY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9c2coZik6KGU9TChiKT9CZjpKLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9DZihhLGUpOkFmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9Smc7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTWcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1FZzt1ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXNnKGYpOihmPUwoYik/QmY6Si5jdXJyZW50LGUuY29udGV4dD1DZihhLGYpKTt6ZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoRmcoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksemcoYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBPZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUGcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHUoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUVnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHUoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHUoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBRZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih1KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKSk7fVxuZnVuY3Rpb24gUmcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9U2coYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VGcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UGcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVVnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVBnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9VmcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVdnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VGcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGM9VWcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UGcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlICRhOnJldHVybiBiPVZnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihPZyhiKXx8XG5uYihiKSlyZXR1cm4gYj1XZyhiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtRZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYj9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgJGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoT2coYyl8fG5iKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtRZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHooYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YWI/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgJGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoT2coZCl8fG5iKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtRZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIGNhKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCxtPWcseT1nPTAsQT1udWxsO251bGwhPT1tJiZ5PGgubGVuZ3RoO3krKyl7bS5pbmRleD55PyhBPW0sbT1udWxsKTpBPW0uc2libGluZzt2YXIgcT14KGUsbSxoW3ldLGspO2lmKG51bGw9PT1xKXtudWxsPT09bSYmKG09QSk7YnJlYWt9YSYmXG5tJiZudWxsPT09cS5hbHRlcm5hdGUmJmIoZSxtKTtnPWYocSxnLHkpO251bGw9PT10P2w9cTp0LnNpYmxpbmc9cTt0PXE7bT1BfWlmKHk9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7eTxoLmxlbmd0aDt5KyspbT1wKGUsaFt5XSxrKSxudWxsIT09bSYmKGc9ZihtLGcseSksbnVsbD09PXQ/bD1tOnQuc2libGluZz1tLHQ9bSk7cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3k8aC5sZW5ndGg7eSsrKUE9eihtLGUseSxoW3ldLGspLG51bGwhPT1BJiYoYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09QS5rZXk/eTpBLmtleSksZz1mKEEsZyx5KSxudWxsPT09dD9sPUE6dC5zaWJsaW5nPUEsdD1BKTthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIEQoZSxnLGgsbCl7dmFyIGs9bmIoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGspdGhyb3cgRXJyb3IodSgxNTApKTtoPWsuY2FsbChoKTtcbmlmKG51bGw9PWgpdGhyb3cgRXJyb3IodSgxNTEpKTtmb3IodmFyIG09az1udWxsLHQ9Zyx5PWc9MCxBPW51bGwscT1oLm5leHQoKTtudWxsIT09dCYmIXEuZG9uZTt5KysscT1oLm5leHQoKSl7dC5pbmRleD55PyhBPXQsdD1udWxsKTpBPXQuc2libGluZzt2YXIgRD14KGUsdCxxLnZhbHVlLGwpO2lmKG51bGw9PT1EKXtudWxsPT09dCYmKHQ9QSk7YnJlYWt9YSYmdCYmbnVsbD09PUQuYWx0ZXJuYXRlJiZiKGUsdCk7Zz1mKEQsZyx5KTtudWxsPT09bT9rPUQ6bS5zaWJsaW5nPUQ7bT1EO3Q9QX1pZihxLmRvbmUpcmV0dXJuIGMoZSx0KSxrO2lmKG51bGw9PT10KXtmb3IoOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT1wKGUscS52YWx1ZSxsKSxudWxsIT09cSYmKGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7cmV0dXJuIGt9Zm9yKHQ9ZChlLHQpOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT16KHQsZSx5LHEudmFsdWUsbCksbnVsbCE9PXEmJihhJiZudWxsIT09XG5xLmFsdGVybmF0ZSYmdC5kZWxldGUobnVsbD09PXEua2V5P3k6cS5rZXkpLGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7YSYmdC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4ga31yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YWImJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgWmE6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT1hYil7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxcbmsuc2libGluZyk7ZD1lKGssZi5wcm9wcyk7ZC5yZWY9UGcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1hYj8oZD1XZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VWcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UGcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlICRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPVxuZC5zaWJsaW5nfWQ9VmcoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VGcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoT2coZikpcmV0dXJuIGNhKGEsZCxmLGgpO2lmKG5iKGYpKXJldHVybiBEKGEsZCxmLGgpO2wmJlFnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6dGhyb3cgYT1hLnR5cGUsRXJyb3IodSgxNTIsYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBYZz1SZyghMCksWWc9UmcoITEpLFpnPXt9LCRnPXtjdXJyZW50OlpnfSxhaD17Y3VycmVudDpaZ30sYmg9e2N1cnJlbnQ6Wmd9O1xuZnVuY3Rpb24gY2goYSl7aWYoYT09PVpnKXRocm93IEVycm9yKHUoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZGgoYSxiKXtJKGJoLGIpO0koYWgsYSk7SSgkZyxaZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpPYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9T2IoYixhKX1IKCRnKTtJKCRnLGIpfWZ1bmN0aW9uIGVoKCl7SCgkZyk7SChhaCk7SChiaCl9ZnVuY3Rpb24gZmgoYSl7Y2goYmguY3VycmVudCk7dmFyIGI9Y2goJGcuY3VycmVudCk7dmFyIGM9T2IoYixhLnR5cGUpO2IhPT1jJiYoSShhaCxhKSxJKCRnLGMpKX1mdW5jdGlvbiBnaChhKXthaC5jdXJyZW50PT09YSYmKEgoJGcpLEgoYWgpKX12YXIgTT17Y3VycmVudDowfTtcbmZ1bmN0aW9uIGhoKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fGMuZGF0YT09PUJkfHxjLmRhdGE9PT1DZCkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH1mdW5jdGlvbiBpaChhLGIpe3JldHVybntyZXNwb25kZXI6YSxwcm9wczpifX1cbnZhciBqaD1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGtoPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLGxoPTAsTj1udWxsLE89bnVsbCxQPW51bGwsbWg9ITE7ZnVuY3Rpb24gUSgpe3Rocm93IEVycm9yKHUoMzIxKSk7fWZ1bmN0aW9uIG5oKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoISRlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBvaChhLGIsYyxkLGUsZil7bGg9ZjtOPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IuZXhwaXJhdGlvblRpbWU9MDtqaC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP3BoOnFoO2E9YyhkLGUpO2lmKGIuZXhwaXJhdGlvblRpbWU9PT1saCl7Zj0wO2Rve2IuZXhwaXJhdGlvblRpbWU9MDtpZighKDI1PmYpKXRocm93IEVycm9yKHUoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7amguY3VycmVudD1yaDthPWMoZCxlKX13aGlsZShiLmV4cGlyYXRpb25UaW1lPT09bGgpfWpoLmN1cnJlbnQ9c2g7Yj1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtsaD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYoYil0aHJvdyBFcnJvcih1KDMwMCkpO3JldHVybiBhfVxuZnVuY3Rpb24gdGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWE7cmV0dXJuIFB9ZnVuY3Rpb24gdWgoKXtpZihudWxsPT09Tyl7dmFyIGE9Ti5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Ty5uZXh0O3ZhciBiPW51bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZTpQLm5leHQ7aWYobnVsbCE9PWIpUD1iLE89YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzEwKSk7Tz1hO2E9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxiYXNlUXVldWU6Ty5iYXNlUXVldWUscXVldWU6Ty5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YX1yZXR1cm4gUH1cbmZ1bmN0aW9uIHZoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gd2goYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1PLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsuZXhwaXJhdGlvblRpbWU7aWYobDxsaCl7dmFyIG09e2V4cGlyYXRpb25UaW1lOmsuZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1tLGY9ZCk6aD1oLm5leHQ9bTtsPk4uZXhwaXJhdGlvblRpbWUmJlxuKE4uZXhwaXJhdGlvblRpbWU9bCxCZyhsKSl9ZWxzZSBudWxsIT09aCYmKGg9aC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxBZyhsLGsuc3VzcGVuc2VDb25maWcpLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2s9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nOyRlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiB4aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7JGUoZixiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIHloKGEpe3ZhciBiPXRoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOnZoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfWZ1bmN0aW9uIEFoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEJoKCl7cmV0dXJuIHVoKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBDaChhLGIsYyxkKXt2YXIgZT10aCgpO04uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfWZ1bmN0aW9uIERoKGEsYixjLGQpe3ZhciBlPXVoKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmbmgoZCxnLmRlcHMpKXtBaChiLGMsZixkKTtyZXR1cm59fU4uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIEVoKGEsYil7cmV0dXJuIENoKDUxNiw0LGEsYil9ZnVuY3Rpb24gRmgoYSxiKXtyZXR1cm4gRGgoNTE2LDQsYSxiKX1mdW5jdGlvbiBHaChhLGIpe3JldHVybiBEaCg0LDIsYSxiKX1cbmZ1bmN0aW9uIEhoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gSWgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBEaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gSmgoKXt9ZnVuY3Rpb24gS2goYSxiKXt0aCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIExoKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gTWgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gTmgoYSxiLGMpe3ZhciBkPWFnKCk7Y2coOTg+ZD85ODpkLGZ1bmN0aW9uKCl7YSghMCl9KTtjZyg5NzxkPzk3OmQsZnVuY3Rpb24oKXt2YXIgZD1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7YSghMSksYygpfWZpbmFsbHl7a2guc3VzcGVuc2U9ZH19KX1cbmZ1bmN0aW9uIHpoKGEsYixjKXt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT17ZXhwaXJhdGlvblRpbWU6ZCxzdXNwZW5zZUNvbmZpZzplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBmPWIucGVuZGluZztudWxsPT09Zj9lLm5leHQ9ZTooZS5uZXh0PWYubmV4dCxmLm5leHQ9ZSk7Yi5wZW5kaW5nPWU7Zj1hLmFsdGVybmF0ZTtpZihhPT09Tnx8bnVsbCE9PWYmJmY9PT1OKW1oPSEwLGUuZXhwaXJhdGlvblRpbWU9bGgsTi5leHBpcmF0aW9uVGltZT1saDtlbHNle2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWZ8fDA9PT1mLmV4cGlyYXRpb25UaW1lKSYmKGY9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1mKSl0cnl7dmFyIGc9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxoPWYoZyxjKTtlLmVhZ2VyUmVkdWNlcj1mO2UuZWFnZXJTdGF0ZT1oO2lmKCRlKGgsZykpcmV0dXJufWNhdGNoKGspe31maW5hbGx5e31JZyhhLFxuZCl9fVxudmFyIHNoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VSZXNwb25kZXI6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRfSxwaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6S2gsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIENoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIENoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxcbmJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj10aCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTp5aCx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eWgoYSksZD1jWzBdLGU9Y1sxXTtFaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9XG5jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXloKCExKSxjPWJbMF07Yj1iWzFdO3JldHVybltLaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxxaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOndoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB3aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz13aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1cbndoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxyaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOnhoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB4aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz14aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj14aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLFxuYixhKSxbYixhXSksY119fSxPaD1udWxsLFBoPW51bGwsUWg9ITE7ZnVuY3Rpb24gUmgoYSxiKXt2YXIgYz1TaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfVxuZnVuY3Rpb24gVGgoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFVoKGEpe2lmKFFoKXt2YXIgYj1QaDtpZihiKXt2YXIgYz1iO2lmKCFUaChhLGIpKXtiPUpkKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhVGgoYSxiKSl7YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MjtRaD0hMTtPaD1hO3JldHVybn1SaChPaCxjKX1PaD1hO1BoPUpkKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyLFFoPSExLE9oPWF9fWZ1bmN0aW9uIFZoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtPaD1hfVxuZnVuY3Rpb24gV2goYSl7aWYoYSE9PU9oKXJldHVybiExO2lmKCFRaClyZXR1cm4gVmgoYSksUWg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFHZChiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9UGg7YjspUmgoYSxiKSxiPUpkKGIubmV4dFNpYmxpbmcpO1ZoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IodSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09QWQpe2lmKDA9PT1iKXtQaD1KZChhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlIGMhPT16ZCYmYyE9PUNkJiZjIT09QmR8fGIrK31hPWEubmV4dFNpYmxpbmd9UGg9bnVsbH19ZWxzZSBQaD1PaD9KZChhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKCl7UGg9T2g9bnVsbDtRaD0hMX12YXIgWWg9V2EuUmVhY3RDdXJyZW50T3duZXIscmc9ITE7ZnVuY3Rpb24gUihhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1lnKGIsbnVsbCxjLGQpOlhnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIFpoKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtxZyhiLGUpO2Q9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGFpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhYmkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsY2koYSxiLGcsZCxlLGYpO2E9VWcoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpiZixjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiAkaChhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1TZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGNpKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJmJmKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHJnPSExLGU8Zik/KGIuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSwkaChhLGIsZikpOmRpKGEsYixjLGQsZil9ZnVuY3Rpb24gZWkoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBkaShhLGIsYyxkLGUpe3ZhciBmPUwoYyk/QmY6Si5jdXJyZW50O2Y9Q2YoYixmKTtxZyhiLGUpO2M9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO3FnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxMZyhiLGMsZCksTmcoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCk7dGc9ITE7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9eDt6ZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8eCE9PWt8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXRnfHxLZyhiLGMsaCxkLHgsayxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSx2ZyhhLGIpLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmlnKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCksdGc9ITEsaz1iLm1lbW9pemVkU3RhdGUsZy5zdGF0ZT1rLHpnKGIsZCxnLGUpLHg9Yi5tZW1vaXplZFN0YXRlLGghPT1kfHxrIT09eHx8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKG09dGd8fEtnKGIsYyxoLGQsayx4LGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGwpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1sLGQ9bSk6XG4oXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIGdpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGdpKGEsYixjLGQsZSxmKXtlaShhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmSGYoYixjLCExKSwkaChhLGIsZik7ZD1iLnN0YXRlTm9kZTtZaC5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1YZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVhnKGIsbnVsbCxoLGYpKTpSKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJkhmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9FZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZFZihhLGIuY29udGV4dCwhMSk7ZGgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIGlpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlUaW1lOjB9O1xuZnVuY3Rpb24gamkoYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9TS5jdXJyZW50LGc9ITEsaDsoaD0wIT09KGIuZWZmZWN0VGFnJjY0KSl8fChoPTAhPT0oZiYyKSYmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlKSk7aD8oZz0hMCxiLmVmZmVjdFRhZyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZS5mYWxsYmFja3x8ITA9PT1lLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZnw9MSk7SShNLGYmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWUuZmFsbGJhY2smJlVoKGIpO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49XG5iO2Uuc2libGluZz1jO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9ZD1lLmNoaWxkcmVuO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVlnKGIsbnVsbCxkLGMpfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2E9YS5jaGlsZDtkPWEuc2libGluZztpZihnKXtlPWUuZmFsbGJhY2s7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtjLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09YS5jaGlsZCkpZm9yKGMuY2hpbGQ9ZztudWxsIT09ZzspZy5yZXR1cm49YyxnPWcuc2libGluZztkPVNnKGQsZSk7ZC5yZXR1cm49YjtjLnNpYmxpbmc9ZDtjLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1jO3JldHVybiBkfWM9WGcoYixhLmNoaWxkLGUuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9XG5jfWE9YS5jaGlsZDtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2UuY2hpbGQ9YTtudWxsIT09YSYmKGEucmV0dXJuPWUpO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPWI7ZS5zaWJsaW5nPWM7Yy5lZmZlY3RUYWd8PTI7ZS5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31iLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1YZyhiLGEsZS5jaGlsZHJlbixjKX1cbmZ1bmN0aW9uIGtpKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTtwZyhhLnJldHVybixiKX1mdW5jdGlvbiBsaShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxFeHBpcmF0aW9uOjAsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbEV4cGlyYXRpb249MCxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtSKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZWZmZWN0VGFnfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJmtpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKWtpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoTSxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aGgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTtsaShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1oaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9bGkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOmxpKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiAkaChhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTswIT09ZCYmQmcoZCk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHUoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1TZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXZhciBuaSxvaSxwaSxxaTtcbm5pPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtvaT1mdW5jdGlvbigpe307XG5waT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7Y2goJGcuY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXpiKGcsZik7ZD16YihnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9R2IoZyxmKTtkPUdiKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9SWIoZyxmKTtkPUliKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9c2QpfW9kKGMsZCk7dmFyIGgsaztjPW51bGw7Zm9yKGggaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShoKSYmZi5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZltoXSlpZihcInN0eWxlXCI9PT1cbmgpZm9yKGsgaW4gZz1mW2hdLGcpZy5oYXNPd25Qcm9wZXJ0eShrKSYmKGN8fChjPXt9KSxjW2tdPVwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1oJiZcImNoaWxkcmVuXCIhPT1oJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGgsbnVsbCkpO2ZvcihoIGluIGQpe3ZhciBsPWRbaF07Zz1udWxsIT1mP2ZbaF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoaCkmJmwhPT1nJiYobnVsbCE9bHx8bnVsbCE9ZykpaWYoXCJzdHlsZVwiPT09aClpZihnKXtmb3IoayBpbiBnKSFnLmhhc093blByb3BlcnR5KGspfHxsJiZsLmhhc093blByb3BlcnR5KGspfHwoY3x8KGM9e30pLGNba109XCJcIik7Zm9yKGsgaW4gbClsLmhhc093blByb3BlcnR5KGspJiZnW2tdIT09bFtrXSYmKGN8fChjPXt9KSxcbmNba109bFtrXSl9ZWxzZSBjfHwoYXx8KGE9W10pLGEucHVzaChoLGMpKSxjPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGw9bD9sLl9faHRtbDp2b2lkIDAsZz1nP2cuX19odG1sOnZvaWQgMCxudWxsIT1sJiZnIT09bCYmKGE9YXx8W10pLnB1c2goaCxsKSk6XCJjaGlsZHJlblwiPT09aD9nPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGgsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT8obnVsbCE9bCYmcmQoZSxoKSxhfHxnPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChoLGwpKX1jJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsYyk7ZT1hO2lmKGIudXBkYXRlUXVldWU9ZSliLmVmZmVjdFRhZ3w9NH19O1xucWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmVmZmVjdFRhZ3w9NCl9O2Z1bmN0aW9uIHJpKGEsYil7c3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIHNpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAzOnJldHVybiBlaCgpLEgoSyksSChKKSxjPWIuc3RhdGVOb2RlLGMucGVuZGluZ0NvbnRleHQmJihjLmNvbnRleHQ9Yy5wZW5kaW5nQ29udGV4dCxjLnBlbmRpbmdDb250ZXh0PW51bGwpLG51bGwhPT1hJiZudWxsIT09YS5jaGlsZHx8IVdoKGIpfHwoYi5lZmZlY3RUYWd8PTQpLG9pKGIpLG51bGw7Y2FzZSA1OmdoKGIpO2M9Y2goYmguY3VycmVudCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlwaShhLGIsZSxkLGMpLGEucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbnJldHVybiBudWxsfWE9Y2goJGcuY3VycmVudCk7aWYoV2goYikpe2Q9Yi5zdGF0ZU5vZGU7ZT1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbTWRdPWI7ZFtOZF09Zjtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxhYy5sZW5ndGg7YSsrKUYoYWNbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGQpO0YoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixkKTtGKFwic3VibWl0XCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoZCxmKTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoZCxmKSxGKFwiaW52YWxpZFwiLGQpLHJkKGMsXCJvbkNoYW5nZVwiKX1vZChlLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilpZihmLmhhc093blByb3BlcnR5KGcpKXt2YXIgaD1mW2ddO1wiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBoP2QudGV4dENvbnRlbnQhPT1oJiYoYT1bXCJjaGlsZHJlblwiLGhdKTpcIm51bWJlclwiPT09dHlwZW9mIGgmJmQudGV4dENvbnRlbnQhPT1cIlwiK2gmJihhPVtcImNoaWxkcmVuXCIsXCJcIitoXSk6dmEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWgmJnJkKGMsZyl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGQpO0ViKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoZCk7TGIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJlxuKGQub25jbGljaz1zZCl9Yz1hO2IudXBkYXRlUXVldWU9YztudWxsIT09YyYmKGIuZWZmZWN0VGFnfD00KX1lbHNle2c9OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7YT09PXFkJiYoYT1OYihlKSk7YT09PXFkP1wic2NyaXB0XCI9PT1lPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoZSx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsZSk7YVtNZF09YjthW05kXT1kO25pKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXBkKGUsZCk7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixcbmEpO2g9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWMubGVuZ3RoO2grKylGKGFjW2hdLGEpO2g9ZDticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGEpO0YoXCJsb2FkXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsYSk7RihcInN1Ym1pdFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoYSxkKTtoPXpiKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9R2IoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2g9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihhLFxuZCk7aD1JYihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1kfW9kKGUsaCk7dmFyIGs9aDtmb3IoZiBpbiBrKWlmKGsuaGFzT3duUHJvcGVydHkoZikpe3ZhciBsPWtbZl07XCJzdHlsZVwiPT09Zj9tZChhLGwpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmUWIoYSxsKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/KFwidGV4dGFyZWFcIiE9PWV8fFwiXCIhPT1sKSYmUmIoYSxsKTpcIm51bWJlclwiPT09dHlwZW9mIGwmJlJiKGEsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYodmEuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9bCYmcmQoYyxmKTpudWxsIT1sJiZYYShhLGYsbCxnKSl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGEpO0ViKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihhKTtMYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrcmIoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtjPWQudmFsdWU7bnVsbCE9Yz9IYihhLCEhZC5tdWx0aXBsZSxjLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmSGIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKGEub25jbGljaz1zZCl9RmQoZSxkKSYmKGIuZWZmZWN0VGFnfD00KX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5jPWNoKGJoLmN1cnJlbnQpO2NoKCRnLmN1cnJlbnQpO1doKGIpPyhjPWIuc3RhdGVOb2RlLGQ9Yi5tZW1vaXplZFByb3BzLGNbTWRdPWIsYy5ub2RlVmFsdWUhPT1kJiYoYi5lZmZlY3RUYWd8PTQpKTooYz0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGNbTWRdPWIsYi5zdGF0ZU5vZGU9Yyl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWMsYjtjPW51bGwhPT1kO2Q9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZXaChiKTooZT1hLm1lbW9pemVkU3RhdGUsZD1udWxsIT09ZSxjfHxudWxsPT09ZXx8KGU9YS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoZj1iLmZpcnN0RWZmZWN0LG51bGwhPT1mPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWYpOihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1cbmUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKSk7aWYoYyYmIWQmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShNLmN1cnJlbnQmMSkpUz09PXRpJiYoUz11aSk7ZWxzZXtpZihTPT09dGl8fFM9PT11aSlTPXZpOzAhPT13aSYmbnVsbCE9PVQmJih4aShULFUpLHlpKFQsd2kpKX1pZihjfHxkKWIuZWZmZWN0VGFnfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxvaShiKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAxOTpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2U9MCE9PShiLmVmZmVjdFRhZyY2NCk7Zj1kLnJlbmRlcmluZztpZihudWxsPT09ZilpZihlKXJpKGQsITEpO2Vsc2V7aWYoUyE9PXRpfHxudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyZcbjY0KSlmb3IoZj1iLmNoaWxkO251bGwhPT1mOyl7YT1oaChmKTtpZihudWxsIT09YSl7Yi5lZmZlY3RUYWd8PTY0O3JpKGQsITEpO2U9YS51cGRhdGVRdWV1ZTtudWxsIT09ZSYmKGIudXBkYXRlUXVldWU9ZSxiLmVmZmVjdFRhZ3w9NCk7bnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtmb3IoZD1iLmNoaWxkO251bGwhPT1kOyllPWQsZj1jLGUuZWZmZWN0VGFnJj0yLGUubmV4dEVmZmVjdD1udWxsLGUuZmlyc3RFZmZlY3Q9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCxhPWUuYWx0ZXJuYXRlLG51bGw9PT1hPyhlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxlLmV4cGlyYXRpb25UaW1lPWYsZS5jaGlsZD1udWxsLGUubWVtb2l6ZWRQcm9wcz1udWxsLGUubWVtb2l6ZWRTdGF0ZT1udWxsLGUudXBkYXRlUXVldWU9bnVsbCxlLmRlcGVuZGVuY2llcz1udWxsKTooZS5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZSxcbmUuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSxlLmNoaWxkPWEuY2hpbGQsZS5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcyxlLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlLGUudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxmPWEuZGVwZW5kZW5jaWVzLGUuZGVwZW5kZW5jaWVzPW51bGw9PT1mP251bGw6e2V4cGlyYXRpb25UaW1lOmYuZXhwaXJhdGlvblRpbWUsZmlyc3RDb250ZXh0OmYuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Zi5yZXNwb25kZXJzfSksZD1kLnNpYmxpbmc7SShNLE0uY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWY9Zi5zaWJsaW5nfX1lbHNle2lmKCFlKWlmKGE9aGgoZiksbnVsbCE9PWEpe2lmKGIuZWZmZWN0VGFnfD02NCxlPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmVmZmVjdFRhZ3w9NCkscmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFmLmFsdGVybmF0ZSlyZXR1cm4gYj1cbmIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqJGYoKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5kLnRhaWxFeHBpcmF0aW9uJiYxPGMmJihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxyaShkLCExKSxiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT1jLTEpO2QuaXNCYWNrd2FyZHM/KGYuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zik6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1mOmIuY2hpbGQ9ZixkLmxhc3Q9Zil9cmV0dXJuIG51bGwhPT1kLnRhaWw/KDA9PT1kLnRhaWxFeHBpcmF0aW9uJiYoZC50YWlsRXhwaXJhdGlvbj0kZigpKzUwMCksYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9JGYoKSxjLnNpYmxpbmc9bnVsbCxiPU0uY3VycmVudCxJKE0sZT9iJjF8MjpiJjEpLGMpOm51bGx9dGhyb3cgRXJyb3IodSgxNTYsXG5iLnRhZykpO31mdW5jdGlvbiB6aShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpMKGEudHlwZSkmJkRmKCk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzplaCgpO0goSyk7SChKKTtiPWEuZWZmZWN0VGFnO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IodSgyODUpKTthLmVmZmVjdFRhZz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gZ2goYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKE0pLGI9YS5lZmZlY3RUYWcsYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChNKSxudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19ZnVuY3Rpb24gQWkoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpxYihiKX19XG52YXIgQmk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gQ2koYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1xYihjKSk7bnVsbCE9PWMmJnBiKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJnBiKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIERpKGEsYil7dHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXtFaShhLGMpfX1mdW5jdGlvbiBGaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtFaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBHaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzppZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBIaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmRlc3Ryb3k7Yy5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1kJiZkKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBJaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmNyZWF0ZTtjLmRlc3Ryb3k9ZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19XG5mdW5jdGlvbiBKaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SWkoMyxjKTtyZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7aWYoYy5lZmZlY3RUYWcmNClpZihudWxsPT09YilhLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczppZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKTthLmNvbXBvbmVudERpZFVwZGF0ZShkLGIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1iPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkNnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9Q2coYyxiLGEpfXJldHVybjtcbmNhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmVmZmVjdFRhZyY0JiZGZChjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJlZjKGMpKSkpO3JldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEtpKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgTGkmJkxpKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgZD1hLm5leHQ7Y2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGE9ZDtkb3t2YXIgYz1hLmRlc3Ryb3k7aWYodm9pZCAwIT09Yyl7dmFyIGc9Yjt0cnl7YygpfWNhdGNoKGgpe0VpKGcsaCl9fWE9YS5uZXh0fXdoaWxlKGEhPT1kKX0pfWJyZWFrO2Nhc2UgMTpGaShiKTtjPWIuc3RhdGVOb2RlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudFdpbGxVbm1vdW50JiZEaShiLGMpO2JyZWFrO2Nhc2UgNTpGaShiKTticmVhaztjYXNlIDQ6TWkoYSxiLGMpfX1cbmZ1bmN0aW9uIE5pKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2EucmV0dXJuPW51bGw7YS5jaGlsZD1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuYWx0ZXJuYXRlPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDtudWxsIT09YiYmTmkoYil9ZnVuY3Rpb24gT2koYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBQaShhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihPaShiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dGhyb3cgRXJyb3IodSgxNjApKTt9Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYxKSk7fWMuZWZmZWN0VGFnJjE2JiYoUmIoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fE9pKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9RaShhLGMsYik6UmkoYSxjLGIpfVxuZnVuY3Rpb24gUWkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPXNkKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFFpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUWkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gUmkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihSaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVJpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIE1pKGEsYixjKXtmb3IodmFyIGQ9YixlPSExLGYsZzs7KXtpZighZSl7ZT1kLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IodSgxNjApKTtmPWUuc3RhdGVOb2RlO3N3aXRjaChlLnRhZyl7Y2FzZSA1Omc9ITE7YnJlYWsgYTtjYXNlIDM6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9ZT1lLnJldHVybn1lPSEwfWlmKDU9PT1kLnRhZ3x8Nj09PWQudGFnKXthOmZvcih2YXIgaD1hLGs9ZCxsPWMsbT1rOzspaWYoS2koaCxtLGwpLG51bGwhPT1tLmNoaWxkJiY0IT09bS50YWcpbS5jaGlsZC5yZXR1cm49bSxtPW0uY2hpbGQ7ZWxzZXtpZihtPT09aylicmVhayBhO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoS2koYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIFNpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjpIaSgzLGIpO3JldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1tOZF09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmQmIoYyxkKTtwZChhLGUpO2I9cGQoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP21kKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9RYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/UmIoYyxoKTpYYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6Q2IoYyxkKTticmVhaztcbmNhc2UgXCJ0ZXh0YXJlYVwiOktiKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsYT1kLnZhbHVlLG51bGwhPWE/SGIoYywhIWQubXVsdGlwbGUsYSwhMSk6YiE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP0hiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpIYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmI9Yi5zdGF0ZU5vZGU7Yi5oeWRyYXRlJiYoYi5oeWRyYXRlPSExLFZjKGIuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOmM9YjtudWxsPT09Yi5tZW1vaXplZFN0YXRlP1xuZD0hMTooZD0hMCxjPWIuY2hpbGQsVGk9JGYoKSk7aWYobnVsbCE9PWMpYTpmb3IoYT1jOzspe2lmKDU9PT1hLnRhZylmPWEuc3RhdGVOb2RlLGQ/KGY9Zi5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGY9YS5zdGF0ZU5vZGUsZT1hLm1lbW9pemVkUHJvcHMuc3R5bGUsZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGwsZi5zdHlsZS5kaXNwbGF5PWxkKFwiZGlzcGxheVwiLGUpKTtlbHNlIGlmKDY9PT1hLnRhZylhLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmEubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09YS50YWcmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGw9PT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7Zj1hLmNoaWxkLnNpYmxpbmc7Zi5yZXR1cm49YTthPVxuZjtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YylicmVhaztmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YylicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31VaShiKTtyZXR1cm47Y2FzZSAxOTpVaShiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9ZnVuY3Rpb24gVWkoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgQmkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1WaS5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbnZhciBXaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBYaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1lpfHwoWWk9ITAsWmk9ZCk7Q2koYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiAkaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtDaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09YWo/YWo9bmV3IFNldChbdGhpc10pOmFqLmFkZCh0aGlzKSxDaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbnZhciBiaj1NYXRoLmNlaWwsY2o9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixkaj1XYS5SZWFjdEN1cnJlbnRPd25lcixWPTAsZWo9OCxmaj0xNixnaj0zMix0aT0wLGhqPTEsaWo9Mix1aT0zLHZpPTQsamo9NSxXPVYsVD1udWxsLFg9bnVsbCxVPTAsUz10aSxraj1udWxsLGxqPTEwNzM3NDE4MjMsbWo9MTA3Mzc0MTgyMyxuaj1udWxsLHdpPTAsb2o9ITEsVGk9MCxwaj01MDAsWT1udWxsLFlpPSExLFppPW51bGwsYWo9bnVsbCxxaj0hMSxyaj1udWxsLHNqPTkwLHRqPW51bGwsdWo9MCx2aj1udWxsLHdqPTA7ZnVuY3Rpb24gR2coKXtyZXR1cm4oVyYoZmp8Z2opKSE9PVY/MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKTowIT09d2o/d2o6d2o9MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKX1cbmZ1bmN0aW9uIEhnKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9YWcoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFcmZmopIT09VilyZXR1cm4gVTtpZihudWxsIT09YylhPWhnKGEsYy50aW1lb3V0TXN8MHx8NUUzLDI1MCk7ZWxzZSBzd2l0Y2goZCl7Y2FzZSA5OTphPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA5ODphPWhnKGEsMTUwLDEwMCk7YnJlYWs7Y2FzZSA5NzpjYXNlIDk2OmE9aGcoYSw1RTMsMjUwKTticmVhaztjYXNlIDk1OmE9MjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI2KSk7fW51bGwhPT1UJiZhPT09VSYmLS1hO3JldHVybiBhfVxuZnVuY3Rpb24gSWcoYSxiKXtpZig1MDx1ail0aHJvdyB1aj0wLHZqPW51bGwsRXJyb3IodSgxODUpKTthPXhqKGEsYik7aWYobnVsbCE9PWEpe3ZhciBjPWFnKCk7MTA3Mzc0MTgyMz09PWI/KFcmZWopIT09ViYmKFcmKGZqfGdqKSk9PT1WP3lqKGEpOihaKGEpLFc9PT1WJiZnZygpKTpaKGEpOyhXJjQpPT09Vnx8OTghPT1jJiY5OSE9PWN8fChudWxsPT09dGo/dGo9bmV3IE1hcChbW2EsYl1dKTooYz10ai5nZXQoYSksKHZvaWQgMD09PWN8fGM+YikmJnRqLnNldChhLGIpKSl9fVxuZnVuY3Rpb24geGooYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1udWxsIT09ZSYmKFQ9PT1lJiYoQmcoYiksUz09PXZpJiZ4aShlLFUpKSx5aShlLGIpKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIHpqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2lmKDAhPT1iKXJldHVybiBiO2I9YS5maXJzdFBlbmRpbmdUaW1lO2lmKCFBaihhLGIpKXJldHVybiBiO3ZhciBjPWEubGFzdFBpbmdlZFRpbWU7YT1hLm5leHRLbm93blBlbmRpbmdMZXZlbDthPWM+YT9jOmE7cmV0dXJuIDI+PWEmJmIhPT1hPzA6YX1cbmZ1bmN0aW9uIFooYSl7aWYoMCE9PWEubGFzdEV4cGlyZWRUaW1lKWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGEuY2FsbGJhY2tQcmlvcml0eT05OSxhLmNhbGxiYWNrTm9kZT1lZyh5ai5iaW5kKG51bGwsYSkpO2Vsc2V7dmFyIGI9emooYSksYz1hLmNhbGxiYWNrTm9kZTtpZigwPT09YiludWxsIT09YyYmKGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTAsYS5jYWxsYmFja1ByaW9yaXR5PTkwKTtlbHNle3ZhciBkPUdnKCk7MTA3Mzc0MTgyMz09PWI/ZD05OToxPT09Ynx8Mj09PWI/ZD05NTooZD0xMCooMTA3Mzc0MTgyMS1iKS0xMCooMTA3Mzc0MTgyMS1kKSxkPTA+PWQ/OTk6MjUwPj1kPzk4OjUyNTA+PWQ/OTc6OTUpO2lmKG51bGwhPT1jKXt2YXIgZT1hLmNhbGxiYWNrUHJpb3JpdHk7aWYoYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPT09YiYmZT49ZClyZXR1cm47YyE9PVRmJiZLZihjKX1hLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9XG5iO2EuY2FsbGJhY2tQcmlvcml0eT1kO2I9MTA3Mzc0MTgyMz09PWI/ZWcoeWouYmluZChudWxsLGEpKTpkZyhkLEJqLmJpbmQobnVsbCxhKSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMS1iKS0kZigpfSk7YS5jYWxsYmFja05vZGU9Yn19fVxuZnVuY3Rpb24gQmooYSxiKXt3aj0wO2lmKGIpcmV0dXJuIGI9R2coKSxDaihhLGIpLFooYSksbnVsbDt2YXIgYz16aihhKTtpZigwIT09Yyl7Yj1hLmNhbGxiYWNrTm9kZTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZjPT09VXx8RWooYSxjKTtpZihudWxsIT09WCl7dmFyIGQ9VztXfD1majt2YXIgZT1GaigpO2RvIHRyeXtHaigpO2JyZWFrfWNhdGNoKGgpe0hqKGEsaCl9d2hpbGUoMSk7bmcoKTtXPWQ7Y2ouY3VycmVudD1lO2lmKFM9PT1oail0aHJvdyBiPWtqLEVqKGEsYykseGkoYSxjKSxaKGEpLGI7aWYobnVsbD09PVgpc3dpdGNoKGU9YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZSxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YyxkPVMsVD1udWxsLGQpe2Nhc2UgdGk6Y2FzZSBoajp0aHJvdyBFcnJvcih1KDM0NSkpO2Nhc2UgaWo6Q2ooYSwyPGM/MjpjKTticmVhaztjYXNlIHVpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO1xuYz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYoMTA3Mzc0MTgyMz09PWxqJiYoZT1UaStwai0kZigpLDEwPGUpKXtpZihvail7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9fWY9emooYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZSk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSB2aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZihvaiYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09ZXx8ZT49Yykpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfWU9emooYSk7aWYoMCE9PWUmJmUhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1cbmQ7YnJlYWt9MTA3Mzc0MTgyMyE9PW1qP2Q9MTAqKDEwNzM3NDE4MjEtbWopLSRmKCk6MTA3Mzc0MTgyMz09PWxqP2Q9MDooZD0xMCooMTA3Mzc0MTgyMS1saiktNUUzLGU9JGYoKSxjPTEwKigxMDczNzQxODIxLWMpLWUsZD1lLWQsMD5kJiYoZD0wKSxkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKmJqKGQvMTk2MCkpLWQsYzxkJiYoZD1jKSk7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha31KaihhKTticmVhaztjYXNlIGpqOmlmKDEwNzM3NDE4MjMhPT1saiYmbnVsbCE9PW5qKXtmPWxqO3ZhciBnPW5qO2Q9Zy5idXN5TWluRHVyYXRpb25Nc3wwOzA+PWQ/ZD0wOihlPWcuYnVzeURlbGF5TXN8MCxmPSRmKCktKDEwKigxMDczNzQxODIxLWYpLShnLnRpbWVvdXRNc3wwfHw1RTMpKSxkPWY8PWU/MDplK2QtZik7aWYoMTA8ZCl7eGkoYSxjKTthLnRpbWVvdXRIYW5kbGU9XG5IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9fUpqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIEJqLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiB5aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZiPT09VXx8RWooYSxiKTtpZihudWxsIT09WCl7dmFyIGM9VztXfD1majt2YXIgZD1GaigpO2RvIHRyeXtLaigpO2JyZWFrfWNhdGNoKGUpe0hqKGEsZSl9d2hpbGUoMSk7bmcoKTtXPWM7Y2ouY3VycmVudD1kO2lmKFM9PT1oail0aHJvdyBjPWtqLEVqKGEsYikseGkoYSxiKSxaKGEpLGM7aWYobnVsbCE9PVgpdGhyb3cgRXJyb3IodSgyNjEpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1iO1Q9bnVsbDtKaihhKTtaKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIExqKCl7aWYobnVsbCE9PXRqKXt2YXIgYT10ajt0aj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhLGMpe0NqKGMsYSk7WihjKX0pO2dnKCl9fVxuZnVuY3Rpb24gTWooYSxiKXt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1mdW5jdGlvbiBOaihhLGIpe3ZhciBjPVc7VyY9LTI7V3w9ZWo7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1cbmZ1bmN0aW9uIEVqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLElkKGMpKTtpZihudWxsIT09WClmb3IoYz1YLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkRmKCk7YnJlYWs7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2JyZWFrO2Nhc2UgNTpnaChkKTticmVhaztjYXNlIDQ6ZWgoKTticmVhaztjYXNlIDEzOkgoTSk7YnJlYWs7Y2FzZSAxOTpIKE0pO2JyZWFrO2Nhc2UgMTA6b2coZCl9Yz1jLnJldHVybn1UPWE7WD1TZyhhLmN1cnJlbnQsbnVsbCk7VT1iO1M9dGk7a2o9bnVsbDttaj1saj0xMDczNzQxODIzO25qPW51bGw7d2k9MDtvaj0hMX1cbmZ1bmN0aW9uIEhqKGEsYil7ZG97dHJ5e25nKCk7amguY3VycmVudD1zaDtpZihtaClmb3IodmFyIGM9Ti5tZW1vaXplZFN0YXRlO251bGwhPT1jOyl7dmFyIGQ9Yy5xdWV1ZTtudWxsIT09ZCYmKGQucGVuZGluZz1udWxsKTtjPWMubmV4dH1saD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYobnVsbD09PVh8fG51bGw9PT1YLnJldHVybilyZXR1cm4gUz1oaixraj1iLFg9bnVsbDthOnt2YXIgZT1hLGY9WC5yZXR1cm4sZz1YLGg9YjtiPVU7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5maXJzdEVmZmVjdD1nLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09aCYmXCJvYmplY3RcIj09PXR5cGVvZiBoJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC50aGVuKXt2YXIgaz1oO2lmKDA9PT0oZy5tb2RlJjIpKXt2YXIgbD1nLmFsdGVybmF0ZTtsPyhnLnVwZGF0ZVF1ZXVlPWwudXBkYXRlUXVldWUsZy5tZW1vaXplZFN0YXRlPWwubWVtb2l6ZWRTdGF0ZSxnLmV4cGlyYXRpb25UaW1lPWwuZXhwaXJhdGlvblRpbWUpOihnLnVwZGF0ZVF1ZXVlPVxubnVsbCxnLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIG09MCE9PShNLmN1cnJlbnQmMSkscD1mO2Rve3ZhciB4O2lmKHg9MTM9PT1wLnRhZyl7dmFyIHo9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT16KXg9bnVsbCE9PXouZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciBjYT1wLm1lbW9pemVkUHJvcHM7eD12b2lkIDA9PT1jYS5mYWxsYmFjaz8hMTohMCE9PWNhLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOm0/ITE6ITB9fWlmKHgpe3ZhciBEPXAudXBkYXRlUXVldWU7aWYobnVsbD09PUQpe3ZhciB0PW5ldyBTZXQ7dC5hZGQoayk7cC51cGRhdGVRdWV1ZT10fWVsc2UgRC5hZGQoayk7aWYoMD09PShwLm1vZGUmMikpe3AuZWZmZWN0VGFnfD02NDtnLmVmZmVjdFRhZyY9LTI5ODE7aWYoMT09PWcudGFnKWlmKG51bGw9PT1nLmFsdGVybmF0ZSlnLnRhZz0xNztlbHNle3ZhciB5PXdnKDEwNzM3NDE4MjMsbnVsbCk7eS50YWc9Mjt4ZyhnLHkpfWcuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztcbmJyZWFrIGF9aD12b2lkIDA7Zz1iO3ZhciBBPWUucGluZ0NhY2hlO251bGw9PT1BPyhBPWUucGluZ0NhY2hlPW5ldyBXaSxoPW5ldyBTZXQsQS5zZXQoayxoKSk6KGg9QS5nZXQoayksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxBLnNldChrLGgpKSk7aWYoIWguaGFzKGcpKXtoLmFkZChnKTt2YXIgcT1Pai5iaW5kKG51bGwsZSxrLGcpO2sudGhlbihxLHEpfXAuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2g9RXJyb3IoKHBiKGcudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitxYihnKSl9UyE9PVxuamomJihTPWlqKTtoPUFpKGgsZyk7cD1mO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOms9aDtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIEI9WGkocCxrLGIpO3lnKHAsQik7YnJlYWsgYTtjYXNlIDE6az1oO3ZhciB3PXAudHlwZSx1Yj1wLnN0YXRlTm9kZTtpZigwPT09KHAuZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXViJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgdWIuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXModWIpKSkpe3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgdmI9JGkocCxrLGIpO3lnKHAsdmIpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVg9UGooWCl9Y2F0Y2goWGMpe2I9WGM7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBGaigpe3ZhciBhPWNqLmN1cnJlbnQ7Y2ouY3VycmVudD1zaDtyZXR1cm4gbnVsbD09PWE/c2g6YX1mdW5jdGlvbiBBZyhhLGIpe2E8bGomJjI8YSYmKGxqPWEpO251bGwhPT1iJiZhPG1qJiYyPGEmJihtaj1hLG5qPWIpfWZ1bmN0aW9uIEJnKGEpe2E+d2kmJih3aT1hKX1mdW5jdGlvbiBLaigpe2Zvcig7bnVsbCE9PVg7KVg9UWooWCl9ZnVuY3Rpb24gR2ooKXtmb3IoO251bGwhPT1YJiYhVWYoKTspWD1RaihYKX1mdW5jdGlvbiBRaihhKXt2YXIgYj1SaihhLmFsdGVybmF0ZSxhLFUpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9UGooYSkpO2RqLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIFBqKGEpe1g9YTtkb3t2YXIgYj1YLmFsdGVybmF0ZTthPVgucmV0dXJuO2lmKDA9PT0oWC5lZmZlY3RUYWcmMjA0OCkpe2I9c2koYixYLFUpO2lmKDE9PT1VfHwxIT09WC5jaGlsZEV4cGlyYXRpb25UaW1lKXtmb3IodmFyIGM9MCxkPVguY2hpbGQ7bnVsbCE9PWQ7KXt2YXIgZT1kLmV4cGlyYXRpb25UaW1lLGY9ZC5jaGlsZEV4cGlyYXRpb25UaW1lO2U+YyYmKGM9ZSk7Zj5jJiYoYz1mKTtkPWQuc2libGluZ31YLmNoaWxkRXhwaXJhdGlvblRpbWU9Y31pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YSYmMD09PShhLmVmZmVjdFRhZyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxudWxsIT09WC5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVguZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1YLmxhc3RFZmZlY3QpLDE8WC5lZmZlY3RUYWcmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WDphLmZpcnN0RWZmZWN0PVgsYS5sYXN0RWZmZWN0PVgpKX1lbHNle2I9emkoWCk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZWZmZWN0VGFnJj0yMDQ3LGI7bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZWZmZWN0VGFnfD0yMDQ4KX1iPVguc2libGluZztpZihudWxsIT09YilyZXR1cm4gYjtYPWF9d2hpbGUobnVsbCE9PVgpO1M9PT10aSYmKFM9amopO3JldHVybiBudWxsfWZ1bmN0aW9uIElqKGEpe3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7YT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7cmV0dXJuIGI+YT9iOmF9ZnVuY3Rpb24gSmooYSl7dmFyIGI9YWcoKTtjZyg5OSxTai5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBTaihhLGIpe2RvIERqKCk7d2hpbGUobnVsbCE9PXJqKTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yayxkPWEuZmluaXNoZWRFeHBpcmF0aW9uVGltZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IodSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO2EuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wO2EuY2FsbGJhY2tQcmlvcml0eT05MDthLm5leHRLbm93blBlbmRpbmdMZXZlbD0wO3ZhciBlPUlqKGMpO2EuZmlyc3RQZW5kaW5nVGltZT1lO2Q8PWEubGFzdFN1c3BlbmRlZFRpbWU/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmQ8PWEuZmlyc3RTdXNwZW5kZWRUaW1lJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9XG5kLTEpO2Q8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2Q8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCk7YT09PVQmJihYPVQ9bnVsbCxVPTApOzE8Yy5lZmZlY3RUYWc/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxlPWMuZmlyc3RFZmZlY3QpOmU9YzplPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWUpe3ZhciBmPVc7V3w9Z2o7ZGouY3VycmVudD1udWxsO0RkPWZkO3ZhciBnPXhkKCk7aWYoeWQoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpdmFyIGg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2g9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBrPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpO2lmKGsmJjAhPT1rLnJhbmdlQ291bnQpe2g9ay5hbmNob3JOb2RlO3ZhciBsPWsuYW5jaG9yT2Zmc2V0LFxubT1rLmZvY3VzTm9kZTtrPWsuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsbS5ub2RlVHlwZX1jYXRjaCh3Yil7aD1udWxsO2JyZWFrIGF9dmFyIHA9MCx4PS0xLHo9LTEsY2E9MCxEPTAsdD1nLHk9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciBBOzspe3QhPT1ofHwwIT09bCYmMyE9PXQubm9kZVR5cGV8fCh4PXArbCk7dCE9PW18fDAhPT1rJiYzIT09dC5ub2RlVHlwZXx8KHo9cCtrKTszPT09dC5ub2RlVHlwZSYmKHArPXQubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PShBPXQuZmlyc3RDaGlsZCkpYnJlYWs7eT10O3Q9QX1mb3IoOzspe2lmKHQ9PT1nKWJyZWFrIGI7eT09PWgmJisrY2E9PT1sJiYoeD1wKTt5PT09bSYmKytEPT09ayYmKHo9cCk7aWYobnVsbCE9PShBPXQubmV4dFNpYmxpbmcpKWJyZWFrO3Q9eTt5PXQucGFyZW50Tm9kZX10PUF9aD0tMT09PXh8fC0xPT09ej9udWxsOntzdGFydDp4LGVuZDp6fX1lbHNlIGg9bnVsbH1oPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9XG5udWxsO0VkPXthY3RpdmVFbGVtZW50RGV0YWNoZWQ6bnVsbCxmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO1k9ZTtkbyB0cnl7VGooKX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1lO2RvIHRyeXtmb3IoZz1hLGg9YjtudWxsIT09WTspe3ZhciBxPVkuZWZmZWN0VGFnO3EmMTYmJlJiKFkuc3RhdGVOb2RlLFwiXCIpO2lmKHEmMTI4KXt2YXIgQj1ZLmFsdGVybmF0ZTtpZihudWxsIT09Qil7dmFyIHc9Qi5yZWY7bnVsbCE9PXcmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdz93KG51bGwpOncuY3VycmVudD1udWxsKX19c3dpdGNoKHEmMTAzOCl7Y2FzZSAyOlBpKFkpO1kuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgMTAyNDpZLmVmZmVjdFRhZyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlkuZWZmZWN0VGFnJj1cbi0xMDI1O1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgNDpTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDg6bD1ZLE1pKGcsbCxoKSxOaShsKX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO3c9RWQ7Qj14ZCgpO3E9dy5mb2N1c2VkRWxlbTtoPXcuc2VsZWN0aW9uUmFuZ2U7aWYoQiE9PXEmJnEmJnEub3duZXJEb2N1bWVudCYmd2QocS5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxxKSl7bnVsbCE9PWgmJnlkKHEpJiYoQj1oLnN0YXJ0LHc9aC5lbmQsdm9pZCAwPT09dyYmKHc9QiksXCJzZWxlY3Rpb25TdGFydFwiaW4gcT8ocS5zZWxlY3Rpb25TdGFydD1CLHEuc2VsZWN0aW9uRW5kPU1hdGgubWluKHcscS52YWx1ZS5sZW5ndGgpKToodz0oQj1xLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmQi5kZWZhdWx0Vmlld3x8d2luZG93LHcuZ2V0U2VsZWN0aW9uJiZcbih3PXcuZ2V0U2VsZWN0aW9uKCksbD1xLnRleHRDb250ZW50Lmxlbmd0aCxnPU1hdGgubWluKGguc3RhcnQsbCksaD12b2lkIDA9PT1oLmVuZD9nOk1hdGgubWluKGguZW5kLGwpLCF3LmV4dGVuZCYmZz5oJiYobD1oLGg9ZyxnPWwpLGw9dmQocSxnKSxtPXZkKHEsaCksbCYmbSYmKDEhPT13LnJhbmdlQ291bnR8fHcuYW5jaG9yTm9kZSE9PWwubm9kZXx8dy5hbmNob3JPZmZzZXQhPT1sLm9mZnNldHx8dy5mb2N1c05vZGUhPT1tLm5vZGV8fHcuZm9jdXNPZmZzZXQhPT1tLm9mZnNldCkmJihCPUIuY3JlYXRlUmFuZ2UoKSxCLnNldFN0YXJ0KGwubm9kZSxsLm9mZnNldCksdy5yZW1vdmVBbGxSYW5nZXMoKSxnPmg/KHcuYWRkUmFuZ2UoQiksdy5leHRlbmQobS5ub2RlLG0ub2Zmc2V0KSk6KEIuc2V0RW5kKG0ubm9kZSxtLm9mZnNldCksdy5hZGRSYW5nZShCKSkpKSkpO0I9W107Zm9yKHc9cTt3PXcucGFyZW50Tm9kZTspMT09PXcubm9kZVR5cGUmJkIucHVzaCh7ZWxlbWVudDp3LGxlZnQ6dy5zY3JvbGxMZWZ0LFxudG9wOncuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHEuZm9jdXMmJnEuZm9jdXMoKTtmb3IocT0wO3E8Qi5sZW5ndGg7cSsrKXc9QltxXSx3LmVsZW1lbnQuc2Nyb2xsTGVmdD13LmxlZnQsdy5lbGVtZW50LnNjcm9sbFRvcD13LnRvcH1mZD0hIURkO0VkPURkPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocT1hO251bGwhPT1ZOyl7dmFyIHViPVkuZWZmZWN0VGFnO3ViJjM2JiZKaShxLFkuYWx0ZXJuYXRlLFkpO2lmKHViJjEyOCl7Qj12b2lkIDA7dmFyIHZiPVkucmVmO2lmKG51bGwhPT12Yil7dmFyIFhjPVkuc3RhdGVOb2RlO3N3aXRjaChZLnRhZyl7Y2FzZSA1OkI9WGM7YnJlYWs7ZGVmYXVsdDpCPVhjfVwiZnVuY3Rpb25cIj09PXR5cGVvZiB2Yj92YihCKTp2Yi5jdXJyZW50PUJ9fVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1cbm51bGw7VmYoKTtXPWZ9ZWxzZSBhLmN1cnJlbnQ9YztpZihxailxaj0hMSxyaj1hLHNqPWI7ZWxzZSBmb3IoWT1lO251bGwhPT1ZOyliPVkubmV4dEVmZmVjdCxZLm5leHRFZmZlY3Q9bnVsbCxZPWI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7MD09PWImJihhaj1udWxsKTsxMDczNzQxODIzPT09Yj9hPT09dmo/dWorKzoodWo9MCx2aj1hKTp1aj0wO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBVaiYmVWooYy5zdGF0ZU5vZGUsZCk7WihhKTtpZihZaSl0aHJvdyBZaT0hMSxhPVppLFppPW51bGwsYTtpZigoVyZlaikhPT1WKXJldHVybiBudWxsO2dnKCk7cmV0dXJuIG51bGx9ZnVuY3Rpb24gVGooKXtmb3IoO251bGwhPT1ZOyl7dmFyIGE9WS5lZmZlY3RUYWc7MCE9PShhJjI1NikmJkdpKFkuYWx0ZXJuYXRlLFkpOzA9PT0oYSY1MTIpfHxxanx8KHFqPSEwLGRnKDk3LGZ1bmN0aW9uKCl7RGooKTtyZXR1cm4gbnVsbH0pKTtZPVkubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBEaigpe2lmKDkwIT09c2ope3ZhciBhPTk3PHNqPzk3OnNqO3NqPTkwO3JldHVybiBjZyhhLFZqKX19ZnVuY3Rpb24gVmooKXtpZihudWxsPT09cmopcmV0dXJuITE7dmFyIGE9cmo7cmo9bnVsbDtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMzEpKTt2YXIgYj1XO1d8PWdqO2ZvcihhPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09YTspe3RyeXt2YXIgYz1hO2lmKDAhPT0oYy5lZmZlY3RUYWcmNTEyKSlzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpIaSg1LGMpLElpKDUsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7RWkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9Vz1iO2dnKCk7cmV0dXJuITB9XG5mdW5jdGlvbiBXaihhLGIsYyl7Yj1BaShjLGIpO2I9WGkoYSxiLDEwNzM3NDE4MjMpO3hnKGEsYik7YT14aihhLDEwNzM3NDE4MjMpO251bGwhPT1hJiZaKGEpfWZ1bmN0aW9uIEVpKGEsYil7aWYoMz09PWEudGFnKVdqKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7V2ooYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXMoZCkpKXthPUFpKGIsYSk7YT0kaShjLGEsMTA3Mzc0MTgyMyk7eGcoYyxhKTtjPXhqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gT2ooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtUPT09YSYmVT09PWM/Uz09PXZpfHxTPT09dWkmJjEwNzM3NDE4MjM9PT1saiYmJGYoKS1UaTxwaj9FaihhLFUpOm9qPSEwOkFqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxaKGEpKSl9ZnVuY3Rpb24gVmkoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1HZygpLGI9SGcoYixhLG51bGwpKTthPXhqKGEsYik7bnVsbCE9PWEmJlooYSl9dmFyIFJqO1xuUmo9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEpe3ZhciBlPWIucGVuZGluZ1Byb3BzO2lmKGEubWVtb2l6ZWRQcm9wcyE9PWV8fEsuY3VycmVudClyZz0hMDtlbHNle2lmKGQ8Yyl7cmc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6aGkoYik7WGgoKTticmVhaztjYXNlIDU6ZmgoYik7aWYoYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbilyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxudWxsO2JyZWFrO2Nhc2UgMTpMKGIudHlwZSkmJkdmKGIpO2JyZWFrO2Nhc2UgNDpkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7ZT1iLnR5cGUuX2NvbnRleHQ7SShqZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7XG5pZigwIT09ZCYmZD49YylyZXR1cm4gamkoYSxiLGMpO0koTSxNLmN1cnJlbnQmMSk7Yj0kaChhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPWIuY2hpbGRFeHBpcmF0aW9uVGltZT49YztpZigwIT09KGEuZWZmZWN0VGFnJjY0KSl7aWYoZClyZXR1cm4gbWkoYSxiLGMpO2IuZWZmZWN0VGFnfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwpO0koTSxNLmN1cnJlbnQpO2lmKCFkKXJldHVybiBudWxsfXJldHVybiAkaChhLGIsYyl9cmc9ITF9fWVsc2Ugcmc9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9Q2YoYixKLmN1cnJlbnQpO3FnKGIsYyk7ZT1vaChudWxsLFxuYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEwoZCkpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3VnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZGZyhiLGQsZyxhKTtlLnVwZGF0ZXI9Smc7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtOZyhiLGQsYSxjKTtiPWdpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFIobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6YTp7ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9XG5udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7b2IoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7ZT1lLl9yZXN1bHQ7Yi50eXBlPWU7Zj1iLnRhZz1YaihlKTthPWlnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWRpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1maShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPVpoKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9YWkobnVsbCxiLGUsaWcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih1KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGRpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGZpKGEsYixkLGUsYyk7XG5jYXNlIDM6aGkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih1KDI4MikpO2Q9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt2ZyhhLGIpO3pnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpWGgoKSxiPSRoKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlQaD1KZChiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLE9oPWIsZT1RaD0hMDtpZihlKWZvcihjPVlnKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxYaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGZoKGIpLG51bGw9PT1hJiZVaChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOlxubnVsbCxnPWUuY2hpbGRyZW4sR2QoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkdkKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLGVpKGEsYiksYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZVaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGppKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVhnKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLFpoKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLFxuYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShqZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPSRlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFLLmN1cnJlbnQpe2I9JGgoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PVxuayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9d2coYyxudWxsKSxsLnRhZz0yLHhnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9Yyk7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmbC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTtwZyhoLnJldHVybixjKTtrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPVxuZ31SKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHFnKGIsYyksZT1zZyhlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9aWcoZSxiLnBlbmRpbmdQcm9wcyksZj1pZyhlLnR5cGUsZiksYWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGNpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsR2YoYikpOmE9ITEscWcoYixjKSxMZyhiLGQsZSksTmcoYixkLGUsYyksZ2kobnVsbCxcbmIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIFVqPW51bGwsTGk9bnVsbDtmdW5jdGlvbiBZaihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtVaj1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyUm9vdChjLGEsdm9pZCAwLDY0PT09KGEuY3VycmVudC5lZmZlY3RUYWcmNjQpKX1jYXRjaChlKXt9fTtMaT1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfWNhdGNoKGUpe319fWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFpqKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gU2goYSxiLGMsZCl7cmV0dXJuIG5ldyBaaihhLGIsYyxkKX1cbmZ1bmN0aW9uIGJpKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gWGooYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGJpKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1nYilyZXR1cm4gMTE7aWYoYT09PWpiKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFNnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9U2goYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yi5leHBpcmF0aW9uVGltZSxcbmZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmIucmVzcG9uZGVyc307Yy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBVZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpYmkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuIFdnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmI6Zz04O2V8PTc7YnJlYWs7Y2FzZSBiYjpnPTg7ZXw9MTticmVhaztjYXNlIGNiOnJldHVybiBhPVNoKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9Y2IsYS50eXBlPWNiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaGI6cmV0dXJuIGE9U2goMTMsYyxiLGUpLGEudHlwZT1oYixhLmVsZW1lbnRUeXBlPWhiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaWI6cmV0dXJuIGE9U2goMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9aWIsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGRiOmc9XG4xMDticmVhayBhO2Nhc2UgZWI6Zz05O2JyZWFrIGE7Y2FzZSBnYjpnPTExO2JyZWFrIGE7Y2FzZSBqYjpnPTE0O2JyZWFrIGE7Y2FzZSBrYjpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgbGI6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHUoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9U2goZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBXZyhhLGIsYyxkKXthPVNoKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBUZyhhLGIsYyl7YT1TaCg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBWZyhhLGIsYyl7Yj1TaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGFrKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY3VycmVudD1udWxsO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMucGluZ0NhY2hlPXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dGhpcy5maW5pc2hlZFdvcms9bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT05MDt0aGlzLmxhc3RFeHBpcmVkVGltZT10aGlzLmxhc3RQaW5nZWRUaW1lPXRoaXMubmV4dEtub3duUGVuZGluZ0xldmVsPXRoaXMubGFzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFBlbmRpbmdUaW1lPTB9XG5mdW5jdGlvbiBBaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lO2E9YS5sYXN0U3VzcGVuZGVkVGltZTtyZXR1cm4gMCE9PWMmJmM+PWImJmE8PWJ9ZnVuY3Rpb24geGkoYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZSxkPWEubGFzdFN1c3BlbmRlZFRpbWU7YzxiJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9Yik7aWYoZD5ifHwwPT09YylhLmxhc3RTdXNwZW5kZWRUaW1lPWI7Yjw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7Yjw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKX1cbmZ1bmN0aW9uIHlpKGEsYil7Yj5hLmZpcnN0UGVuZGluZ1RpbWUmJihhLmZpcnN0UGVuZGluZ1RpbWU9Yik7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7MCE9PWMmJihiPj1jP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpiPj1hLmxhc3RTdXNwZW5kZWRUaW1lJiYoYS5sYXN0U3VzcGVuZGVkVGltZT1iKzEpLGI+YS5uZXh0S25vd25QZW5kaW5nTGV2ZWwmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1iKSl9ZnVuY3Rpb24gQ2ooYSxiKXt2YXIgYz1hLmxhc3RFeHBpcmVkVGltZTtpZigwPT09Y3x8Yz5iKWEubGFzdEV4cGlyZWRUaW1lPWJ9XG5mdW5jdGlvbiBiayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1HZygpLGc9RGcuc3VzcGVuc2U7Zj1IZyhmLGUsZyk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOntpZihkYyhjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEwoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih1KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihMKGspKXtjPUZmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUFmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9d2coZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1cbmQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTt4ZyhlLGIpO0lnKGUsZik7cmV0dXJuIGZ9ZnVuY3Rpb24gY2soYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBkayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO251bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkJiZhLnJldHJ5VGltZTxiJiYoYS5yZXRyeVRpbWU9Yil9ZnVuY3Rpb24gZWsoYSxiKXtkayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmZGsoYSxiKX1cbmZ1bmN0aW9uIGZrKGEsYixjKXtjPW51bGwhPWMmJiEwPT09Yy5oeWRyYXRlO3ZhciBkPW5ldyBhayhhLGIsYyksZT1TaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7ZC5jdXJyZW50PWU7ZS5zdGF0ZU5vZGU9ZDt1ZyhlKTthW09kXT1kLmN1cnJlbnQ7YyYmMCE9PWImJkpjKGEsOT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQpO3RoaXMuX2ludGVybmFsUm9vdD1kfWZrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7YmsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07ZmsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87YmsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW09kXT1udWxsfSl9O1xuZnVuY3Rpb24gZ2soYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWZ1bmN0aW9uIGhrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgZmsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiBpayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2guY2FsbChhKX19YmsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1oayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtrLmNhbGwoYSl9fU5qKGZ1bmN0aW9uKCl7YmsoYixnLGEsZSl9KX1yZXR1cm4gY2soZyl9ZnVuY3Rpb24gamsoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjokYSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbndjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWhnKEdnKCksMTUwLDEwMCk7SWcoYSxiKTtlayhhLGIpfX07eGM9ZnVuY3Rpb24oYSl7MTM9PT1hLnRhZyYmKElnKGEsMyksZWsoYSwzKSl9O3ljPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUdnKCk7Yj1IZyhiLGEsbnVsbCk7SWcoYSxiKTtlayhhLGIpfX07XG56YT1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1RZChkKTtpZighZSl0aHJvdyBFcnJvcih1KDkwKSk7eWIoZCk7Q2IoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOktiKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZIYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0ZhPU1qO1xuR2E9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1XO1d8PTQ7dHJ5e3JldHVybiBjZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtXPWYsVz09PVYmJmdnKCl9fTtIYT1mdW5jdGlvbigpeyhXJigxfGZqfGdqKSk9PT1WJiYoTGooKSxEaigpKX07SWE9ZnVuY3Rpb24oYSxiKXt2YXIgYz1XO1d8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX07ZnVuY3Rpb24ga2soYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gamsoYSxiLG51bGwsYyl9dmFyIGxrPXtFdmVudHM6W05jLFBkLFFkLHhhLHRhLFhkLGZ1bmN0aW9uKGEpe2pjKGEsV2QpfSxEYSxFYSxpZCxtYyxEaix7Y3VycmVudDohMX1dfTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBZaihuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWhjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dGMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xMy4xXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWxrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPWtrO2V4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1oYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O1xuZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgxODcpKTt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBjZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtXPWMsZ2coKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCEwLGMpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCExLGMpfTtcbmV4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighZ2soYSkpdGhyb3cgRXJyb3IodSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KE5qKGZ1bmN0aW9uKCl7aWsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW09kXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9TWo7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4ga2soYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFnayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcil0aHJvdyBFcnJvcih1KDM4KSk7cmV0dXJuIGlrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xMy4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjE5LjFcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsayxsO1xuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHA9bnVsbCxxPW51bGwsdD1mdW5jdGlvbigpe2lmKG51bGwhPT1wKXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3AoITAsYSk7cD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodCwwKSxiO319LHU9RGF0ZS5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLXV9O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXA/c2V0VGltZW91dChmLDAsYSk6KHA9YSxzZXRUaW1lb3V0KHQsMCkpfTtnPWZ1bmN0aW9uKGEsYil7cT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQocSl9O2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX07bD1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB3PXdpbmRvdy5wZXJmb3JtYW5jZSx4PXdpbmRvdy5EYXRlLFxueT13aW5kb3cuc2V0VGltZW91dCx6PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgQT13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKX1pZihcIm9iamVjdFwiPT09XG50eXBlb2YgdyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcubm93KWV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHcubm93KCl9O2Vsc2V7dmFyIEI9eC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpLUJ9fXZhciBDPSExLEQ9bnVsbCxFPS0xLEY9NSxHPTA7az1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1HfTtsPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3QgdW5zdXBwb3J0ZWRcIik6Rj0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEg9bmV3IE1lc3NhZ2VDaGFubmVsLEk9SC5wb3J0MjtILnBvcnQxLm9ubWVzc2FnZT1cbmZ1bmN0aW9uKCl7aWYobnVsbCE9PUQpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7Rz1hK0Y7dHJ5e0QoITAsYSk/SS5wb3N0TWVzc2FnZShudWxsKTooQz0hMSxEPW51bGwpfWNhdGNoKGIpe3Rocm93IEkucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQz0hMX07Zj1mdW5jdGlvbihhKXtEPWE7Q3x8KEM9ITAsSS5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtFPXkoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3ooRSk7RT0tMX19ZnVuY3Rpb24gSihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxLKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBMKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBNKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPksobixjKSl2b2lkIDAhPT1yJiYwPksocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPksocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEsoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIE49W10sTz1bXSxQPTEsUT1udWxsLFI9MyxTPSExLFQ9ITEsVT0hMTtcbmZ1bmN0aW9uIFYoYSl7Zm9yKHZhciBiPUwoTyk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylNKE8pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpTShPKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEooTixiKTtlbHNlIGJyZWFrO2I9TChPKX19ZnVuY3Rpb24gVyhhKXtVPSExO1YoYSk7aWYoIVQpaWYobnVsbCE9PUwoTikpVD0hMCxmKFgpO2Vsc2V7dmFyIGI9TChPKTtudWxsIT09YiYmZyhXLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFgoYSxiKXtUPSExO1UmJihVPSExLGgoKSk7Uz0hMDt2YXIgYz1SO3RyeXtWKGIpO2ZvcihRPUwoTik7bnVsbCE9PVEmJighKFEuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFrKCkpOyl7dmFyIGQ9US5jYWxsYmFjaztpZihudWxsIT09ZCl7US5jYWxsYmFjaz1udWxsO1I9US5wcmlvcml0eUxldmVsO3ZhciBlPWQoUS5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP1EuY2FsbGJhY2s9ZTpRPT09TChOKSYmTShOKTtWKGIpfWVsc2UgTShOKTtRPUwoTil9aWYobnVsbCE9PVEpdmFyIG09ITA7ZWxzZXt2YXIgbj1MKE8pO251bGwhPT1uJiZnKFcsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e1E9bnVsbCxSPWMsUz0hMX19XG5mdW5jdGlvbiBZKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuLTE7Y2FzZSAyOnJldHVybiAyNTA7Y2FzZSA1OnJldHVybiAxMDczNzQxODIzO2Nhc2UgNDpyZXR1cm4gMUU0O2RlZmF1bHQ6cmV0dXJuIDVFM319dmFyIFo9bDtleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7VHx8U3x8KFQ9ITAsZihYKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBSfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEwoTil9O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUil7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9Un12YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1I9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVo7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1SO1I9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1I9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3ZhciBlPWMuZGVsYXk7ZT1cIm51bWJlclwiPT09dHlwZW9mIGUmJjA8ZT9kK2U6ZDtjPVwibnVtYmVyXCI9PT10eXBlb2YgYy50aW1lb3V0P2MudGltZW91dDpZKGEpfWVsc2UgYz1ZKGEpLGU9ZDtjPWUrYzthPXtpZDpQKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmUsZXhwaXJhdGlvblRpbWU6Yyxzb3J0SW5kZXg6LTF9O2U+ZD8oYS5zb3J0SW5kZXg9ZSxKKE8sYSksbnVsbD09PUwoTikmJmE9PT1MKE8pJiYoVT9oKCk6VT0hMCxnKFcsZS1kKSkpOihhLnNvcnRJbmRleD1jLEooTixhKSxUfHxTfHwoVD0hMCxmKFgpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7VihhKTt2YXIgYj1MKE4pO3JldHVybiBiIT09USYmbnVsbCE9PVEmJm51bGwhPT1iJiZudWxsIT09Yi5jYWxsYmFjayYmYi5zdGFydFRpbWU8PWEmJmIuZXhwaXJhdGlvblRpbWU8US5leHBpcmF0aW9uVGltZXx8aygpfTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1SO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtSPWN9fX07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbnZhciBydW50aW1lID0gKGZ1bmN0aW9uIChleHBvcnRzKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBPcCA9IE9iamVjdC5wcm90b3R5cGU7XG4gIHZhciBoYXNPd24gPSBPcC5oYXNPd25Qcm9wZXJ0eTtcbiAgdmFyIHVuZGVmaW5lZDsgLy8gTW9yZSBjb21wcmVzc2libGUgdGhhbiB2b2lkIDAuXG4gIHZhciAkU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiID8gU3ltYm9sIDoge307XG4gIHZhciBpdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuaXRlcmF0b3IgfHwgXCJAQGl0ZXJhdG9yXCI7XG4gIHZhciBhc3luY0l0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5hc3luY0l0ZXJhdG9yIHx8IFwiQEBhc3luY0l0ZXJhdG9yXCI7XG4gIHZhciB0b1N0cmluZ1RhZ1N5bWJvbCA9ICRTeW1ib2wudG9TdHJpbmdUYWcgfHwgXCJAQHRvU3RyaW5nVGFnXCI7XG5cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIC8vIElmIG91dGVyRm4gcHJvdmlkZWQgYW5kIG91dGVyRm4ucHJvdG90eXBlIGlzIGEgR2VuZXJhdG9yLCB0aGVuIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yLlxuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yO1xuICAgIHZhciBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSk7XG4gICAgdmFyIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7XG5cbiAgICAvLyBUaGUgLl9pbnZva2UgbWV0aG9kIHVuaWZpZXMgdGhlIGltcGxlbWVudGF0aW9ucyBvZiB0aGUgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzLlxuICAgIGdlbmVyYXRvci5faW52b2tlID0gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcblxuICAgIHJldHVybiBnZW5lcmF0b3I7XG4gIH1cbiAgZXhwb3J0cy53cmFwID0gd3JhcDtcblxuICAvLyBUcnkvY2F0Y2ggaGVscGVyIHRvIG1pbmltaXplIGRlb3B0aW1pemF0aW9ucy4gUmV0dXJucyBhIGNvbXBsZXRpb25cbiAgLy8gcmVjb3JkIGxpa2UgY29udGV4dC50cnlFbnRyaWVzW2ldLmNvbXBsZXRpb24uIFRoaXMgaW50ZXJmYWNlIGNvdWxkXG4gIC8vIGhhdmUgYmVlbiAoYW5kIHdhcyBwcmV2aW91c2x5KSBkZXNpZ25lZCB0byB0YWtlIGEgY2xvc3VyZSB0byBiZVxuICAvLyBpbnZva2VkIHdpdGhvdXQgYXJndW1lbnRzLCBidXQgaW4gYWxsIHRoZSBjYXNlcyB3ZSBjYXJlIGFib3V0IHdlXG4gIC8vIGFscmVhZHkgaGF2ZSBhbiBleGlzdGluZyBtZXRob2Qgd2Ugd2FudCB0byBjYWxsLCBzbyB0aGVyZSdzIG5vIG5lZWRcbiAgLy8gdG8gY3JlYXRlIGEgbmV3IGZ1bmN0aW9uIG9iamVjdC4gV2UgY2FuIGV2ZW4gZ2V0IGF3YXkgd2l0aCBhc3N1bWluZ1xuICAvLyB0aGUgbWV0aG9kIHRha2VzIGV4YWN0bHkgb25lIGFyZ3VtZW50LCBzaW5jZSB0aGF0IGhhcHBlbnMgdG8gYmUgdHJ1ZVxuICAvLyBpbiBldmVyeSBjYXNlLCBzbyB3ZSBkb24ndCBoYXZlIHRvIHRvdWNoIHRoZSBhcmd1bWVudHMgb2JqZWN0LiBUaGVcbiAgLy8gb25seSBhZGRpdGlvbmFsIGFsbG9jYXRpb24gcmVxdWlyZWQgaXMgdGhlIGNvbXBsZXRpb24gcmVjb3JkLCB3aGljaFxuICAvLyBoYXMgYSBzdGFibGUgc2hhcGUgYW5kIHNvIGhvcGVmdWxseSBzaG91bGQgYmUgY2hlYXAgdG8gYWxsb2NhdGUuXG4gIGZ1bmN0aW9uIHRyeUNhdGNoKGZuLCBvYmosIGFyZykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcIm5vcm1hbFwiLCBhcmc6IGZuLmNhbGwob2JqLCBhcmcpIH07XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcInRocm93XCIsIGFyZzogZXJyIH07XG4gICAgfVxuICB9XG5cbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkU3RhcnQgPSBcInN1c3BlbmRlZFN0YXJ0XCI7XG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkID0gXCJzdXNwZW5kZWRZaWVsZFwiO1xuICB2YXIgR2VuU3RhdGVFeGVjdXRpbmcgPSBcImV4ZWN1dGluZ1wiO1xuICB2YXIgR2VuU3RhdGVDb21wbGV0ZWQgPSBcImNvbXBsZXRlZFwiO1xuXG4gIC8vIFJldHVybmluZyB0aGlzIG9iamVjdCBmcm9tIHRoZSBpbm5lckZuIGhhcyB0aGUgc2FtZSBlZmZlY3QgYXNcbiAgLy8gYnJlYWtpbmcgb3V0IG9mIHRoZSBkaXNwYXRjaCBzd2l0Y2ggc3RhdGVtZW50LlxuICB2YXIgQ29udGludWVTZW50aW5lbCA9IHt9O1xuXG4gIC8vIER1bW15IGNvbnN0cnVjdG9yIGZ1bmN0aW9ucyB0aGF0IHdlIHVzZSBhcyB0aGUgLmNvbnN0cnVjdG9yIGFuZFxuICAvLyAuY29uc3RydWN0b3IucHJvdG90eXBlIHByb3BlcnRpZXMgZm9yIGZ1bmN0aW9ucyB0aGF0IHJldHVybiBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0cy4gRm9yIGZ1bGwgc3BlYyBjb21wbGlhbmNlLCB5b3UgbWF5IHdpc2ggdG8gY29uZmlndXJlIHlvdXJcbiAgLy8gbWluaWZpZXIgbm90IHRvIG1hbmdsZSB0aGUgbmFtZXMgb2YgdGhlc2UgdHdvIGZ1bmN0aW9ucy5cbiAgZnVuY3Rpb24gR2VuZXJhdG9yKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9XG5cbiAgLy8gVGhpcyBpcyBhIHBvbHlmaWxsIGZvciAlSXRlcmF0b3JQcm90b3R5cGUlIGZvciBlbnZpcm9ubWVudHMgdGhhdFxuICAvLyBkb24ndCBuYXRpdmVseSBzdXBwb3J0IGl0LlxuICB2YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcbiAgSXRlcmF0b3JQcm90b3R5cGVbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbiAgdmFyIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG8gJiYgZ2V0UHJvdG8oZ2V0UHJvdG8odmFsdWVzKFtdKSkpO1xuICBpZiAoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgJiZcbiAgICAgIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICE9PSBPcCAmJlxuICAgICAgaGFzT3duLmNhbGwoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUsIGl0ZXJhdG9yU3ltYm9sKSkge1xuICAgIC8vIFRoaXMgZW52aXJvbm1lbnQgaGFzIGEgbmF0aXZlICVJdGVyYXRvclByb3RvdHlwZSU7IHVzZSBpdCBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIHBvbHlmaWxsLlxuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gTmF0aXZlSXRlcmF0b3JQcm90b3R5cGU7XG4gIH1cblxuICB2YXIgR3AgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5wcm90b3R5cGUgPVxuICAgIEdlbmVyYXRvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlKTtcbiAgR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR3AuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvbjtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGVbdG9TdHJpbmdUYWdTeW1ib2xdID1cbiAgICBHZW5lcmF0b3JGdW5jdGlvbi5kaXNwbGF5TmFtZSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcblxuICAvLyBIZWxwZXIgZm9yIGRlZmluaW5nIHRoZSAubmV4dCwgLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzIG9mIHRoZVxuICAvLyBJdGVyYXRvciBpbnRlcmZhY2UgaW4gdGVybXMgb2YgYSBzaW5nbGUgLl9pbnZva2UgbWV0aG9kLlxuICBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7XG4gICAgW1wibmV4dFwiLCBcInRocm93XCIsIFwicmV0dXJuXCJdLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgICBwcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKGFyZykge1xuICAgICAgICByZXR1cm4gdGhpcy5faW52b2tlKG1ldGhvZCwgYXJnKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBleHBvcnRzLmlzR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICB2YXIgY3RvciA9IHR5cGVvZiBnZW5GdW4gPT09IFwiZnVuY3Rpb25cIiAmJiBnZW5GdW4uY29uc3RydWN0b3I7XG4gICAgcmV0dXJuIGN0b3JcbiAgICAgID8gY3RvciA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHxcbiAgICAgICAgLy8gRm9yIHRoZSBuYXRpdmUgR2VuZXJhdG9yRnVuY3Rpb24gY29uc3RydWN0b3IsIHRoZSBiZXN0IHdlIGNhblxuICAgICAgICAvLyBkbyBpcyB0byBjaGVjayBpdHMgLm5hbWUgcHJvcGVydHkuXG4gICAgICAgIChjdG9yLmRpc3BsYXlOYW1lIHx8IGN0b3IubmFtZSkgPT09IFwiR2VuZXJhdG9yRnVuY3Rpb25cIlxuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuICBleHBvcnRzLm1hcmsgPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICBpZiAoT2JqZWN0LnNldFByb3RvdHlwZU9mKSB7XG4gICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoZ2VuRnVuLCBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdlbkZ1bi5fX3Byb3RvX18gPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgICAgIGlmICghKHRvU3RyaW5nVGFnU3ltYm9sIGluIGdlbkZ1bikpIHtcbiAgICAgICAgZ2VuRnVuW3RvU3RyaW5nVGFnU3ltYm9sXSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcbiAgICAgIH1cbiAgICB9XG4gICAgZ2VuRnVuLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoR3ApO1xuICAgIHJldHVybiBnZW5GdW47XG4gIH07XG5cbiAgLy8gV2l0aGluIHRoZSBib2R5IG9mIGFueSBhc3luYyBmdW5jdGlvbiwgYGF3YWl0IHhgIGlzIHRyYW5zZm9ybWVkIHRvXG4gIC8vIGB5aWVsZCByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoeClgLCBzbyB0aGF0IHRoZSBydW50aW1lIGNhbiB0ZXN0XG4gIC8vIGBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpYCB0byBkZXRlcm1pbmUgaWYgdGhlIHlpZWxkZWQgdmFsdWUgaXNcbiAgLy8gbWVhbnQgdG8gYmUgYXdhaXRlZC5cbiAgZXhwb3J0cy5hd3JhcCA9IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiB7IF9fYXdhaXQ6IGFyZyB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIEFzeW5jSXRlcmF0b3IoZ2VuZXJhdG9yLCBQcm9taXNlSW1wbCkge1xuICAgIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goZ2VuZXJhdG9yW21ldGhvZF0sIGdlbmVyYXRvciwgYXJnKTtcbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHJlamVjdChyZWNvcmQuYXJnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciByZXN1bHQgPSByZWNvcmQuYXJnO1xuICAgICAgICB2YXIgdmFsdWUgPSByZXN1bHQudmFsdWU7XG4gICAgICAgIGlmICh2YWx1ZSAmJlxuICAgICAgICAgICAgdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpKSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2VJbXBsLnJlc29sdmUodmFsdWUuX19hd2FpdCkudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uKHVud3JhcHBlZCkge1xuICAgICAgICAgIC8vIFdoZW4gYSB5aWVsZGVkIFByb21pc2UgaXMgcmVzb2x2ZWQsIGl0cyBmaW5hbCB2YWx1ZSBiZWNvbWVzXG4gICAgICAgICAgLy8gdGhlIC52YWx1ZSBvZiB0aGUgUHJvbWlzZTx7dmFsdWUsZG9uZX0+IHJlc3VsdCBmb3IgdGhlXG4gICAgICAgICAgLy8gY3VycmVudCBpdGVyYXRpb24uXG4gICAgICAgICAgcmVzdWx0LnZhbHVlID0gdW53cmFwcGVkO1xuICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICAvLyBJZiBhIHJlamVjdGVkIFByb21pc2Ugd2FzIHlpZWxkZWQsIHRocm93IHRoZSByZWplY3Rpb24gYmFja1xuICAgICAgICAgIC8vIGludG8gdGhlIGFzeW5jIGdlbmVyYXRvciBmdW5jdGlvbiBzbyBpdCBjYW4gYmUgaGFuZGxlZCB0aGVyZS5cbiAgICAgICAgICByZXR1cm4gaW52b2tlKFwidGhyb3dcIiwgZXJyb3IsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcmV2aW91c1Byb21pc2U7XG5cbiAgICBmdW5jdGlvbiBlbnF1ZXVlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBmdW5jdGlvbiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlSW1wbChmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID1cbiAgICAgICAgLy8gSWYgZW5xdWV1ZSBoYXMgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIHdlIHdhbnQgdG8gd2FpdCB1bnRpbFxuICAgICAgICAvLyBhbGwgcHJldmlvdXMgUHJvbWlzZXMgaGF2ZSBiZWVuIHJlc29sdmVkIGJlZm9yZSBjYWxsaW5nIGludm9rZSxcbiAgICAgICAgLy8gc28gdGhhdCByZXN1bHRzIGFyZSBhbHdheXMgZGVsaXZlcmVkIGluIHRoZSBjb3JyZWN0IG9yZGVyLiBJZlxuICAgICAgICAvLyBlbnF1ZXVlIGhhcyBub3QgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIGl0IGlzIGltcG9ydGFudCB0b1xuICAgICAgICAvLyBjYWxsIGludm9rZSBpbW1lZGlhdGVseSwgd2l0aG91dCB3YWl0aW5nIG9uIGEgY2FsbGJhY2sgdG8gZmlyZSxcbiAgICAgICAgLy8gc28gdGhhdCB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIGhhcyB0aGUgb3Bwb3J0dW5pdHkgdG8gZG9cbiAgICAgICAgLy8gYW55IG5lY2Vzc2FyeSBzZXR1cCBpbiBhIHByZWRpY3RhYmxlIHdheS4gVGhpcyBwcmVkaWN0YWJpbGl0eVxuICAgICAgICAvLyBpcyB3aHkgdGhlIFByb21pc2UgY29uc3RydWN0b3Igc3luY2hyb25vdXNseSBpbnZva2VzIGl0c1xuICAgICAgICAvLyBleGVjdXRvciBjYWxsYmFjaywgYW5kIHdoeSBhc3luYyBmdW5jdGlvbnMgc3luY2hyb25vdXNseVxuICAgICAgICAvLyBleGVjdXRlIGNvZGUgYmVmb3JlIHRoZSBmaXJzdCBhd2FpdC4gU2luY2Ugd2UgaW1wbGVtZW50IHNpbXBsZVxuICAgICAgICAvLyBhc3luYyBmdW5jdGlvbnMgaW4gdGVybXMgb2YgYXN5bmMgZ2VuZXJhdG9ycywgaXQgaXMgZXNwZWNpYWxseVxuICAgICAgICAvLyBpbXBvcnRhbnQgdG8gZ2V0IHRoaXMgcmlnaHQsIGV2ZW4gdGhvdWdoIGl0IHJlcXVpcmVzIGNhcmUuXG4gICAgICAgIHByZXZpb3VzUHJvbWlzZSA/IHByZXZpb3VzUHJvbWlzZS50aGVuKFxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLFxuICAgICAgICAgIC8vIEF2b2lkIHByb3BhZ2F0aW5nIGZhaWx1cmVzIHRvIFByb21pc2VzIHJldHVybmVkIGJ5IGxhdGVyXG4gICAgICAgICAgLy8gaW52b2NhdGlvbnMgb2YgdGhlIGl0ZXJhdG9yLlxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnXG4gICAgICAgICkgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpO1xuICAgIH1cblxuICAgIC8vIERlZmluZSB0aGUgdW5pZmllZCBoZWxwZXIgbWV0aG9kIHRoYXQgaXMgdXNlZCB0byBpbXBsZW1lbnQgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiAoc2VlIGRlZmluZUl0ZXJhdG9yTWV0aG9kcykuXG4gICAgdGhpcy5faW52b2tlID0gZW5xdWV1ZTtcbiAgfVxuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSk7XG4gIEFzeW5jSXRlcmF0b3IucHJvdG90eXBlW2FzeW5jSXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBleHBvcnRzLkFzeW5jSXRlcmF0b3IgPSBBc3luY0l0ZXJhdG9yO1xuXG4gIC8vIE5vdGUgdGhhdCBzaW1wbGUgYXN5bmMgZnVuY3Rpb25zIGFyZSBpbXBsZW1lbnRlZCBvbiB0b3Agb2ZcbiAgLy8gQXN5bmNJdGVyYXRvciBvYmplY3RzOyB0aGV5IGp1c3QgcmV0dXJuIGEgUHJvbWlzZSBmb3IgdGhlIHZhbHVlIG9mXG4gIC8vIHRoZSBmaW5hbCByZXN1bHQgcHJvZHVjZWQgYnkgdGhlIGl0ZXJhdG9yLlxuICBleHBvcnRzLmFzeW5jID0gZnVuY3Rpb24oaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QsIFByb21pc2VJbXBsKSB7XG4gICAgaWYgKFByb21pc2VJbXBsID09PSB2b2lkIDApIFByb21pc2VJbXBsID0gUHJvbWlzZTtcblxuICAgIHZhciBpdGVyID0gbmV3IEFzeW5jSXRlcmF0b3IoXG4gICAgICB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSxcbiAgICAgIFByb21pc2VJbXBsXG4gICAgKTtcblxuICAgIHJldHVybiBleHBvcnRzLmlzR2VuZXJhdG9yRnVuY3Rpb24ob3V0ZXJGbilcbiAgICAgID8gaXRlciAvLyBJZiBvdXRlckZuIGlzIGEgZ2VuZXJhdG9yLCByZXR1cm4gdGhlIGZ1bGwgaXRlcmF0b3IuXG4gICAgICA6IGl0ZXIubmV4dCgpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdC5kb25lID8gcmVzdWx0LnZhbHVlIDogaXRlci5uZXh0KCk7XG4gICAgICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCkge1xuICAgIHZhciBzdGF0ZSA9IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlRXhlY3V0aW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmdcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVDb21wbGV0ZWQpIHtcbiAgICAgICAgaWYgKG1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgdGhyb3cgYXJnO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQmUgZm9yZ2l2aW5nLCBwZXIgMjUuMy4zLjMuMyBvZiB0aGUgc3BlYzpcbiAgICAgICAgLy8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLWdlbmVyYXRvcnJlc3VtZVxuICAgICAgICByZXR1cm4gZG9uZVJlc3VsdCgpO1xuICAgICAgfVxuXG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IG1ldGhvZDtcbiAgICAgIGNvbnRleHQuYXJnID0gYXJnO1xuXG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgZGVsZWdhdGUgPSBjb250ZXh0LmRlbGVnYXRlO1xuICAgICAgICBpZiAoZGVsZWdhdGUpIHtcbiAgICAgICAgICB2YXIgZGVsZWdhdGVSZXN1bHQgPSBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcbiAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCA9PT0gQ29udGludWVTZW50aW5lbCkgY29udGludWU7XG4gICAgICAgICAgICByZXR1cm4gZGVsZWdhdGVSZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAgIC8vIFNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICAgICAgY29udGV4dC5zZW50ID0gY29udGV4dC5fc2VudCA9IGNvbnRleHQuYXJnO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydCkge1xuICAgICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAgIHRocm93IGNvbnRleHQuYXJnO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oY29udGV4dC5hcmcpO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgICBjb250ZXh0LmFicnVwdChcInJldHVyblwiLCBjb250ZXh0LmFyZyk7XG4gICAgICAgIH1cblxuICAgICAgICBzdGF0ZSA9IEdlblN0YXRlRXhlY3V0aW5nO1xuXG4gICAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcbiAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiKSB7XG4gICAgICAgICAgLy8gSWYgYW4gZXhjZXB0aW9uIGlzIHRocm93biBmcm9tIGlubmVyRm4sIHdlIGxlYXZlIHN0YXRlID09PVxuICAgICAgICAgIC8vIEdlblN0YXRlRXhlY3V0aW5nIGFuZCBsb29wIGJhY2sgZm9yIGFub3RoZXIgaW52b2NhdGlvbi5cbiAgICAgICAgICBzdGF0ZSA9IGNvbnRleHQuZG9uZVxuICAgICAgICAgICAgPyBHZW5TdGF0ZUNvbXBsZXRlZFxuICAgICAgICAgICAgOiBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkO1xuXG4gICAgICAgICAgaWYgKHJlY29yZC5hcmcgPT09IENvbnRpbnVlU2VudGluZWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogcmVjb3JkLmFyZyxcbiAgICAgICAgICAgIGRvbmU6IGNvbnRleHQuZG9uZVxuICAgICAgICAgIH07XG5cbiAgICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAvLyBEaXNwYXRjaCB0aGUgZXhjZXB0aW9uIGJ5IGxvb3BpbmcgYmFjayBhcm91bmQgdG8gdGhlXG4gICAgICAgICAgLy8gY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZykgY2FsbCBhYm92ZS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgLy8gQ2FsbCBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF0oY29udGV4dC5hcmcpIGFuZCBoYW5kbGUgdGhlXG4gIC8vIHJlc3VsdCwgZWl0aGVyIGJ5IHJldHVybmluZyBhIHsgdmFsdWUsIGRvbmUgfSByZXN1bHQgZnJvbSB0aGVcbiAgLy8gZGVsZWdhdGUgaXRlcmF0b3IsIG9yIGJ5IG1vZGlmeWluZyBjb250ZXh0Lm1ldGhvZCBhbmQgY29udGV4dC5hcmcsXG4gIC8vIHNldHRpbmcgY29udGV4dC5kZWxlZ2F0ZSB0byBudWxsLCBhbmQgcmV0dXJuaW5nIHRoZSBDb250aW51ZVNlbnRpbmVsLlxuICBmdW5jdGlvbiBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KSB7XG4gICAgdmFyIG1ldGhvZCA9IGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXTtcbiAgICBpZiAobWV0aG9kID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIEEgLnRocm93IG9yIC5yZXR1cm4gd2hlbiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIG5vIC50aHJvd1xuICAgICAgLy8gbWV0aG9kIGFsd2F5cyB0ZXJtaW5hdGVzIHRoZSB5aWVsZCogbG9vcC5cbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAvLyBOb3RlOiBbXCJyZXR1cm5cIl0gbXVzdCBiZSB1c2VkIGZvciBFUzMgcGFyc2luZyBjb21wYXRpYmlsaXR5LlxuICAgICAgICBpZiAoZGVsZWdhdGUuaXRlcmF0b3JbXCJyZXR1cm5cIl0pIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIGEgcmV0dXJuIG1ldGhvZCwgZ2l2ZSBpdCBhXG4gICAgICAgICAgLy8gY2hhbmNlIHRvIGNsZWFuIHVwLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcblxuICAgICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICAvLyBJZiBtYXliZUludm9rZURlbGVnYXRlKGNvbnRleHQpIGNoYW5nZWQgY29udGV4dC5tZXRob2QgZnJvbVxuICAgICAgICAgICAgLy8gXCJyZXR1cm5cIiB0byBcInRocm93XCIsIGxldCB0aGF0IG92ZXJyaWRlIHRoZSBUeXBlRXJyb3IgYmVsb3cuXG4gICAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgIFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTtcblxuICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIGluZm8gPSByZWNvcmQuYXJnO1xuXG4gICAgaWYgKCEgaW5mbykge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJpdGVyYXRvciByZXN1bHQgaXMgbm90IGFuIG9iamVjdFwiKTtcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgaWYgKGluZm8uZG9uZSkge1xuICAgICAgLy8gQXNzaWduIHRoZSByZXN1bHQgb2YgdGhlIGZpbmlzaGVkIGRlbGVnYXRlIHRvIHRoZSB0ZW1wb3JhcnlcbiAgICAgIC8vIHZhcmlhYmxlIHNwZWNpZmllZCBieSBkZWxlZ2F0ZS5yZXN1bHROYW1lIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZTtcblxuICAgICAgLy8gUmVzdW1lIGV4ZWN1dGlvbiBhdCB0aGUgZGVzaXJlZCBsb2NhdGlvbiAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYztcblxuICAgICAgLy8gSWYgY29udGV4dC5tZXRob2Qgd2FzIFwidGhyb3dcIiBidXQgdGhlIGRlbGVnYXRlIGhhbmRsZWQgdGhlXG4gICAgICAvLyBleGNlcHRpb24sIGxldCB0aGUgb3V0ZXIgZ2VuZXJhdG9yIHByb2NlZWQgbm9ybWFsbHkuIElmXG4gICAgICAvLyBjb250ZXh0Lm1ldGhvZCB3YXMgXCJuZXh0XCIsIGZvcmdldCBjb250ZXh0LmFyZyBzaW5jZSBpdCBoYXMgYmVlblxuICAgICAgLy8gXCJjb25zdW1lZFwiIGJ5IHRoZSBkZWxlZ2F0ZSBpdGVyYXRvci4gSWYgY29udGV4dC5tZXRob2Qgd2FzXG4gICAgICAvLyBcInJldHVyblwiLCBhbGxvdyB0aGUgb3JpZ2luYWwgLnJldHVybiBjYWxsIHRvIGNvbnRpbnVlIGluIHRoZVxuICAgICAgLy8gb3V0ZXIgZ2VuZXJhdG9yLlxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kICE9PSBcInJldHVyblwiKSB7XG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlLXlpZWxkIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGRlbGVnYXRlIG1ldGhvZC5cbiAgICAgIHJldHVybiBpbmZvO1xuICAgIH1cblxuICAgIC8vIFRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBpcyBmaW5pc2hlZCwgc28gZm9yZ2V0IGl0IGFuZCBjb250aW51ZSB3aXRoXG4gICAgLy8gdGhlIG91dGVyIGdlbmVyYXRvci5cbiAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgfVxuXG4gIC8vIERlZmluZSBHZW5lcmF0b3IucHJvdG90eXBlLntuZXh0LHRocm93LHJldHVybn0gaW4gdGVybXMgb2YgdGhlXG4gIC8vIHVuaWZpZWQgLl9pbnZva2UgaGVscGVyIG1ldGhvZC5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEdwKTtcblxuICBHcFt0b1N0cmluZ1RhZ1N5bWJvbF0gPSBcIkdlbmVyYXRvclwiO1xuXG4gIC8vIEEgR2VuZXJhdG9yIHNob3VsZCBhbHdheXMgcmV0dXJuIGl0c2VsZiBhcyB0aGUgaXRlcmF0b3Igb2JqZWN0IHdoZW4gdGhlXG4gIC8vIEBAaXRlcmF0b3IgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIGl0LiBTb21lIGJyb3dzZXJzJyBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlXG4gIC8vIGl0ZXJhdG9yIHByb3RvdHlwZSBjaGFpbiBpbmNvcnJlY3RseSBpbXBsZW1lbnQgdGhpcywgY2F1c2luZyB0aGUgR2VuZXJhdG9yXG4gIC8vIG9iamVjdCB0byBub3QgYmUgcmV0dXJuZWQgZnJvbSB0aGlzIGNhbGwuIFRoaXMgZW5zdXJlcyB0aGF0IGRvZXNuJ3QgaGFwcGVuLlxuICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2lzc3Vlcy8yNzQgZm9yIG1vcmUgZGV0YWlscy5cbiAgR3BbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgR3AudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfTtcblxuICBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykge1xuICAgIHZhciBlbnRyeSA9IHsgdHJ5TG9jOiBsb2NzWzBdIH07XG5cbiAgICBpZiAoMSBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5jYXRjaExvYyA9IGxvY3NbMV07XG4gICAgfVxuXG4gICAgaWYgKDIgaW4gbG9jcykge1xuICAgICAgZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl07XG4gICAgICBlbnRyeS5hZnRlckxvYyA9IGxvY3NbM107XG4gICAgfVxuXG4gICAgdGhpcy50cnlFbnRyaWVzLnB1c2goZW50cnkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIjtcbiAgICBkZWxldGUgcmVjb3JkLmFyZztcbiAgICBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIC8vIFRoZSByb290IGVudHJ5IG9iamVjdCAoZWZmZWN0aXZlbHkgYSB0cnkgc3RhdGVtZW50IHdpdGhvdXQgYSBjYXRjaFxuICAgIC8vIG9yIGEgZmluYWxseSBibG9jaykgZ2l2ZXMgdXMgYSBwbGFjZSB0byBzdG9yZSB2YWx1ZXMgdGhyb3duIGZyb21cbiAgICAvLyBsb2NhdGlvbnMgd2hlcmUgdGhlcmUgaXMgbm8gZW5jbG9zaW5nIHRyeSBzdGF0ZW1lbnQuXG4gICAgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiBcInJvb3RcIiB9XTtcbiAgICB0cnlMb2NzTGlzdC5mb3JFYWNoKHB1c2hUcnlFbnRyeSwgdGhpcyk7XG4gICAgdGhpcy5yZXNldCh0cnVlKTtcbiAgfVxuXG4gIGV4cG9ydHMua2V5cyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuICAgIGtleXMucmV2ZXJzZSgpO1xuXG4gICAgLy8gUmF0aGVyIHRoYW4gcmV0dXJuaW5nIGFuIG9iamVjdCB3aXRoIGEgbmV4dCBtZXRob2QsIHdlIGtlZXBcbiAgICAvLyB0aGluZ3Mgc2ltcGxlIGFuZCByZXR1cm4gdGhlIG5leHQgZnVuY3Rpb24gaXRzZWxmLlxuICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgd2hpbGUgKGtleXMubGVuZ3RoKSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzLnBvcCgpO1xuICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgIG5leHQudmFsdWUgPSBrZXk7XG4gICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVG8gYXZvaWQgY3JlYXRpbmcgYW4gYWRkaXRpb25hbCBvYmplY3QsIHdlIGp1c3QgaGFuZyB0aGUgLnZhbHVlXG4gICAgICAvLyBhbmQgLmRvbmUgcHJvcGVydGllcyBvZmYgdGhlIG5leHQgZnVuY3Rpb24gb2JqZWN0IGl0c2VsZi4gVGhpc1xuICAgICAgLy8gYWxzbyBlbnN1cmVzIHRoYXQgdGhlIG1pbmlmaWVyIHdpbGwgbm90IGFub255bWl6ZSB0aGUgZnVuY3Rpb24uXG4gICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHtcbiAgICBpZiAoaXRlcmFibGUpIHtcbiAgICAgIHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkge1xuICAgICAgICByZXR1cm4gaXRlcmF0b3JNZXRob2QuY2FsbChpdGVyYWJsZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaXRlcmFibGUubmV4dCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBpdGVyYWJsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc05hTihpdGVyYWJsZS5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBpdGVyYWJsZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd24uY2FsbChpdGVyYWJsZSwgaSkpIHtcbiAgICAgICAgICAgICAgbmV4dC52YWx1ZSA9IGl0ZXJhYmxlW2ldO1xuICAgICAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbmV4dC52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuXG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIGFuIGl0ZXJhdG9yIHdpdGggbm8gdmFsdWVzLlxuICAgIHJldHVybiB7IG5leHQ6IGRvbmVSZXN1bHQgfTtcbiAgfVxuICBleHBvcnRzLnZhbHVlcyA9IHZhbHVlcztcblxuICBmdW5jdGlvbiBkb25lUmVzdWx0KCkge1xuICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgfVxuXG4gIENvbnRleHQucHJvdG90eXBlID0ge1xuICAgIGNvbnN0cnVjdG9yOiBDb250ZXh0LFxuXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKHNraXBUZW1wUmVzZXQpIHtcbiAgICAgIHRoaXMucHJldiA9IDA7XG4gICAgICB0aGlzLm5leHQgPSAwO1xuICAgICAgLy8gUmVzZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICB0aGlzLnNlbnQgPSB0aGlzLl9zZW50ID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICB0aGlzLmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuXG4gICAgICB0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChyZXNldFRyeUVudHJ5KTtcblxuICAgICAgaWYgKCFza2lwVGVtcFJlc2V0KSB7XG4gICAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykge1xuICAgICAgICAgIC8vIE5vdCBzdXJlIGFib3V0IHRoZSBvcHRpbWFsIG9yZGVyIG9mIHRoZXNlIGNvbmRpdGlvbnM6XG4gICAgICAgICAgaWYgKG5hbWUuY2hhckF0KDApID09PSBcInRcIiAmJlxuICAgICAgICAgICAgICBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJlxuICAgICAgICAgICAgICAhaXNOYU4oK25hbWUuc2xpY2UoMSkpKSB7XG4gICAgICAgICAgICB0aGlzW25hbWVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuZG9uZSA9IHRydWU7XG5cbiAgICAgIHZhciByb290RW50cnkgPSB0aGlzLnRyeUVudHJpZXNbMF07XG4gICAgICB2YXIgcm9vdFJlY29yZCA9IHJvb3RFbnRyeS5jb21wbGV0aW9uO1xuICAgICAgaWYgKHJvb3RSZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJvb3RSZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5ydmFsO1xuICAgIH0sXG5cbiAgICBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24oZXhjZXB0aW9uKSB7XG4gICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgIHRocm93IGV4Y2VwdGlvbjtcbiAgICAgIH1cblxuICAgICAgdmFyIGNvbnRleHQgPSB0aGlzO1xuICAgICAgZnVuY3Rpb24gaGFuZGxlKGxvYywgY2F1Z2h0KSB7XG4gICAgICAgIHJlY29yZC50eXBlID0gXCJ0aHJvd1wiO1xuICAgICAgICByZWNvcmQuYXJnID0gZXhjZXB0aW9uO1xuICAgICAgICBjb250ZXh0Lm5leHQgPSBsb2M7XG5cbiAgICAgICAgaWYgKGNhdWdodCkge1xuICAgICAgICAgIC8vIElmIHRoZSBkaXNwYXRjaGVkIGV4Y2VwdGlvbiB3YXMgY2F1Z2h0IGJ5IGEgY2F0Y2ggYmxvY2ssXG4gICAgICAgICAgLy8gdGhlbiBsZXQgdGhhdCBjYXRjaCBibG9jayBoYW5kbGUgdGhlIGV4Y2VwdGlvbiBub3JtYWxseS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICEhIGNhdWdodDtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IFwicm9vdFwiKSB7XG4gICAgICAgICAgLy8gRXhjZXB0aW9uIHRocm93biBvdXRzaWRlIG9mIGFueSB0cnkgYmxvY2sgdGhhdCBjb3VsZCBoYW5kbGVcbiAgICAgICAgICAvLyBpdCwgc28gc2V0IHRoZSBjb21wbGV0aW9uIHZhbHVlIG9mIHRoZSBlbnRpcmUgZnVuY3Rpb24gdG9cbiAgICAgICAgICAvLyB0aHJvdyB0aGUgZXhjZXB0aW9uLlxuICAgICAgICAgIHJldHVybiBoYW5kbGUoXCJlbmRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldikge1xuICAgICAgICAgIHZhciBoYXNDYXRjaCA9IGhhc093bi5jYWxsKGVudHJ5LCBcImNhdGNoTG9jXCIpO1xuICAgICAgICAgIHZhciBoYXNGaW5hbGx5ID0gaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKTtcblxuICAgICAgICAgIGlmIChoYXNDYXRjaCAmJiBoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzQ2F0Y2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgYWJydXB0OiBmdW5jdGlvbih0eXBlLCBhcmcpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKSAmJlxuICAgICAgICAgICAgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZmluYWxseUVudHJ5ICYmXG4gICAgICAgICAgKHR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgICB0eXBlID09PSBcImNvbnRpbnVlXCIpICYmXG4gICAgICAgICAgZmluYWxseUVudHJ5LnRyeUxvYyA8PSBhcmcgJiZcbiAgICAgICAgICBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgLy8gSWdub3JlIHRoZSBmaW5hbGx5IGVudHJ5IGlmIGNvbnRyb2wgaXMgbm90IGp1bXBpbmcgdG8gYVxuICAgICAgICAvLyBsb2NhdGlvbiBvdXRzaWRlIHRoZSB0cnkvY2F0Y2ggYmxvY2suXG4gICAgICAgIGZpbmFsbHlFbnRyeSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciByZWNvcmQgPSBmaW5hbGx5RW50cnkgPyBmaW5hbGx5RW50cnkuY29tcGxldGlvbiA6IHt9O1xuICAgICAgcmVjb3JkLnR5cGUgPSB0eXBlO1xuICAgICAgcmVjb3JkLmFyZyA9IGFyZztcblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSkge1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICB0aGlzLm5leHQgPSBmaW5hbGx5RW50cnkuZmluYWxseUxvYztcbiAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmNvbXBsZXRlKHJlY29yZCk7XG4gICAgfSxcblxuICAgIGNvbXBsZXRlOiBmdW5jdGlvbihyZWNvcmQsIGFmdGVyTG9jKSB7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgIHJlY29yZC50eXBlID09PSBcImNvbnRpbnVlXCIpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gcmVjb3JkLmFyZztcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgdGhpcy5ydmFsID0gdGhpcy5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgIHRoaXMubmV4dCA9IFwiZW5kXCI7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiICYmIGFmdGVyTG9jKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IGFmdGVyTG9jO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9LFxuXG4gICAgZmluaXNoOiBmdW5jdGlvbihmaW5hbGx5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKTtcbiAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBcImNhdGNoXCI6IGZ1bmN0aW9uKHRyeUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IHRyeUxvYykge1xuICAgICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuICAgICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICB2YXIgdGhyb3duID0gcmVjb3JkLmFyZztcbiAgICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdGhyb3duO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSBjb250ZXh0LmNhdGNoIG1ldGhvZCBtdXN0IG9ubHkgYmUgY2FsbGVkIHdpdGggYSBsb2NhdGlvblxuICAgICAgLy8gYXJndW1lbnQgdGhhdCBjb3JyZXNwb25kcyB0byBhIGtub3duIGNhdGNoIGJsb2NrLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpO1xuICAgIH0sXG5cbiAgICBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbihpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykge1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IHtcbiAgICAgICAgaXRlcmF0b3I6IHZhbHVlcyhpdGVyYWJsZSksXG4gICAgICAgIHJlc3VsdE5hbWU6IHJlc3VsdE5hbWUsXG4gICAgICAgIG5leHRMb2M6IG5leHRMb2NcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgLy8gRGVsaWJlcmF0ZWx5IGZvcmdldCB0aGUgbGFzdCBzZW50IHZhbHVlIHNvIHRoYXQgd2UgZG9uJ3RcbiAgICAgICAgLy8gYWNjaWRlbnRhbGx5IHBhc3MgaXQgb24gdG8gdGhlIGRlbGVnYXRlLlxuICAgICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuICB9O1xuXG4gIC8vIFJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGlzIHNjcmlwdCBpcyBleGVjdXRpbmcgYXMgYSBDb21tb25KUyBtb2R1bGVcbiAgLy8gb3Igbm90LCByZXR1cm4gdGhlIHJ1bnRpbWUgb2JqZWN0IHNvIHRoYXQgd2UgY2FuIGRlY2xhcmUgdGhlIHZhcmlhYmxlXG4gIC8vIHJlZ2VuZXJhdG9yUnVudGltZSBpbiB0aGUgb3V0ZXIgc2NvcGUsIHdoaWNoIGFsbG93cyB0aGlzIG1vZHVsZSB0byBiZVxuICAvLyBpbmplY3RlZCBlYXNpbHkgYnkgYGJpbi9yZWdlbmVyYXRvciAtLWluY2x1ZGUtcnVudGltZSBzY3JpcHQuanNgLlxuICByZXR1cm4gZXhwb3J0cztcblxufShcbiAgLy8gSWYgdGhpcyBzY3JpcHQgaXMgZXhlY3V0aW5nIGFzIGEgQ29tbW9uSlMgbW9kdWxlLCB1c2UgbW9kdWxlLmV4cG9ydHNcbiAgLy8gYXMgdGhlIHJlZ2VuZXJhdG9yUnVudGltZSBuYW1lc3BhY2UuIE90aGVyd2lzZSBjcmVhdGUgYSBuZXcgZW1wdHlcbiAgLy8gb2JqZWN0LiBFaXRoZXIgd2F5LCB0aGUgcmVzdWx0aW5nIG9iamVjdCB3aWxsIGJlIHVzZWQgdG8gaW5pdGlhbGl6ZVxuICAvLyB0aGUgcmVnZW5lcmF0b3JSdW50aW1lIHZhcmlhYmxlIGF0IHRoZSB0b3Agb2YgdGhpcyBmaWxlLlxuICB0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiID8gbW9kdWxlLmV4cG9ydHMgOiB7fVxuKSk7XG5cbnRyeSB7XG4gIHJlZ2VuZXJhdG9yUnVudGltZSA9IHJ1bnRpbWU7XG59IGNhdGNoIChhY2NpZGVudGFsU3RyaWN0TW9kZSkge1xuICAvLyBUaGlzIG1vZHVsZSBzaG91bGQgbm90IGJlIHJ1bm5pbmcgaW4gc3RyaWN0IG1vZGUsIHNvIHRoZSBhYm92ZVxuICAvLyBhc3NpZ25tZW50IHNob3VsZCBhbHdheXMgd29yayB1bmxlc3Mgc29tZXRoaW5nIGlzIG1pc2NvbmZpZ3VyZWQuIEp1c3RcbiAgLy8gaW4gY2FzZSBydW50aW1lLmpzIGFjY2lkZW50YWxseSBydW5zIGluIHN0cmljdCBtb2RlLCB3ZSBjYW4gZXNjYXBlXG4gIC8vIHN0cmljdCBtb2RlIHVzaW5nIGEgZ2xvYmFsIEZ1bmN0aW9uIGNhbGwuIFRoaXMgY291bGQgY29uY2VpdmFibHkgZmFpbFxuICAvLyBpZiBhIENvbnRlbnQgU2VjdXJpdHkgUG9saWN5IGZvcmJpZHMgdXNpbmcgRnVuY3Rpb24sIGJ1dCBpbiB0aGF0IGNhc2VcbiAgLy8gdGhlIHByb3BlciBzb2x1dGlvbiBpcyB0byBmaXggdGhlIGFjY2lkZW50YWwgc3RyaWN0IG1vZGUgcHJvYmxlbS4gSWZcbiAgLy8geW91J3ZlIG1pc2NvbmZpZ3VyZWQgeW91ciBidW5kbGVyIHRvIGZvcmNlIHN0cmljdCBtb2RlIGFuZCBhcHBsaWVkIGFcbiAgLy8gQ1NQIHRvIGZvcmJpZCBGdW5jdGlvbiwgYW5kIHlvdSdyZSBub3Qgd2lsbGluZyB0byBmaXggZWl0aGVyIG9mIHRob3NlXG4gIC8vIHByb2JsZW1zLCBwbGVhc2UgZGV0YWlsIHlvdXIgdW5pcXVlIHByZWRpY2FtZW50IGluIGEgR2l0SHViIGlzc3VlLlxuICBGdW5jdGlvbihcInJcIiwgXCJyZWdlbmVyYXRvclJ1bnRpbWUgPSByXCIpKHJ1bnRpbWUpO1xufVxuIiwiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mOyIsImZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mOyIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9BcHAuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG52YXIgZXhwb3J0ZWQgPSBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDoge307XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVkOyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcblxcclxcbiAgfVxcclxcblxcclxcbiAgYm9keSB7XFxyXFxuICAgIG1hcmdpbi10b3A6IDI1cHg7XFxyXFxuICB9XFxyXFxuXFxyXFxuXFxyXFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsImZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlXaXRoSG9sZXM7IiwiZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkge1xuICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkpIHJldHVybjtcbiAgdmFyIF9hcnIgPSBbXTtcbiAgdmFyIF9uID0gdHJ1ZTtcbiAgdmFyIF9kID0gZmFsc2U7XG4gIHZhciBfZSA9IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHtcbiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7XG5cbiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhaztcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9kID0gdHJ1ZTtcbiAgICBfZSA9IGVycjtcbiAgfSBmaW5hbGx5IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoX2QpIHRocm93IF9lO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBfYXJyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pdGVyYWJsZVRvQXJyYXlMaW1pdDsiLCJ2YXIgYXJyYXlMaWtlVG9BcnJheSA9IHJlcXVpcmUoXCIuL2FycmF5TGlrZVRvQXJyYXlcIik7XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgaWYgKCFvKSByZXR1cm47XG4gIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShuKTtcbiAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5OyIsImZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlMaWtlVG9BcnJheTsiLCJmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9ub25JdGVyYWJsZVJlc3Q7IiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0hvbWUuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG52YXIgZXhwb3J0ZWQgPSBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDoge307XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVkOyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuaG9tZS1ib2R5IHtcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgM2ZyIDFmcjtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzZnIgMWZyICA7XFxyXFxuICAgIC8qIGp1c3RpZnktY29udGVudDogY2VudGVyOyAqL1xcclxcbiAgICAvKiBhbGlnbi1jb250ZW50OiBjZW50ZXI7ICovXFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDYsIDIwOSwgMjA4KTsgXFxyXFxuICAgIC8qIGJvcmRlcjogcmdiKDIzNiwgOCwgMTYwKTtcXHJcXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDsgKi9cXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLyogLmhvbWUtYm9keSAqIHtcXHJcXG4gICAgYm9yZGVyLXN0eWxlOiBkb3R0ZWQ7XFxyXFxuICAgIGJvcmRlci13aWR0aDogdGhpY2s7XFxyXFxuICAgIGJvcmRlci1jb2xvcjogcmVkO1xcclxcbn0gKi9cXHJcXG4uY291bnRkb3due1xcclxcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcXHJcXG4gICAgZ3JpZC1yb3c6IDE7XFxyXFxuICAgIGdyaWQtY29sdW1uOiAxO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE0LCAyNDEsIDE2NSwgMC4xOTIpO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLnJlc3VsdCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIC8qIGp1c3RpZnktY29udGVudDogY2VudGVyOyAqL1xcclxcbiAgICAvKiBib3JkZXI6IHJnYig0MiwgMjE2LCAzNik7XFxyXFxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7ICovXFxyXFxuICAgIGdyaWQtY29sdW1uOiAxO1xcclxcbiAgICBncmlkLXJvdzogMjtcXHJcXG4gICAgLyogYWxpZ24taXRlbXM6IGNlbnRlcjsgKi9cXHJcXG59XFxyXFxuXFxyXFxuLmltYWdlLWJveCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMCk7XFxyXFxuICAgIGJvcmRlcjogcmdiKDg0LCA4NSwgODcpOyBcXHJcXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXHJcXG4gICAgLyogcGFkZGluZzogMjBweCAwcHggMHB4IDEwcHg7ICovXFxyXFxuICAgIC8qIG1hcmdpbjogMjBweCAwcHggMHB4IDEwcHggOyAqL1xcclxcbiAgICAvKiBib3JkZXItcmFkaXVzOiAyMHB4OyAqL1xcclxcbiAgICAvKiBib3JkZXItd2lkdGg6IDE1cHg7ICovXFxyXFxuICAgIHdpZHRoOiA3MHZ3O1xcclxcbiAgICBoZWlnaHQ6IDcwdmg7XFxyXFxuICAgIGdyaWQtcm93OiAxIDtcXHJcXG4gICAgZ3JpZC1jb2x1bW46IDIgIDsgXFxyXFxufVxcclxcblxcclxcbi5pbWFnZXtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IC00MHB4IDEwMHB4IHJnYmEoMCwgMCwgMCwgMC41ODIpO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OjEwMCU7XFxyXFxuICAgIC8qIGRpc3BsYXk6IGJsb2NrOyAqL1xcclxcbiAgICAvKiBvYmplY3QtZml0OiBzY2FsZS1kb3duOyAqL1xcclxcbn1cXHJcXG5cXHJcXG4ub3B0aW9ucy1ib3gge1xcclxcbiAgICAvKiBhbGlnbi1zZWxmOiBjZW50ZXI7ICovXFxyXFxuICAgIC8qIGp1c3RpZnktc2VsZjogY2VudGVyOyAqL1xcclxcbiAgICBncmlkLXJvdzogMjtcXHJcXG4gICAgZ3JpZC1jb2x1bW46IDI7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXHJcXG4gICAgLyogd2lkdGg6IDcwdnc7ICovXFxyXFxuICAgIC8qIGhlaWdodDogMjB2aDsgKi9cXHJcXG4gICAgLyogbWFyZ2luLWxlZnQ6IDJ2dyA7ICovXFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4ubmV4dC1idXR0b257XFxyXFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxyXFxuICAgIC8qIG1hcmdpbi1sZWZ0OiAxdnc7ICovXFxyXFxuICAgIC8qIG1hcmdpbi1yaWdodDogMXZ3OyAqL1xcclxcbiAgICBwYWRkaW5nOiAyMHB4O1xcclxcblxcclxcbiAgICBncmlkLXJvdzogMjtcXHJcXG4gICAgZ3JpZC1jb2x1bW46IDM7XFxyXFxuXFxyXFxuXFxyXFxufVxcclxcbi5ub3JtYWx7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IGNoYXJ0cmV1c2U7XFxyXFxufVxcclxcblxcclxcbi5ncmV5ZWR7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig5OSwgOTksIDk5KTtcXHJcXG4gICAgY29sb3I6IGZsb3JhbHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAuaW1hZ2UtYm94e1xcclxcbiAgICAgICAgd2lkdGg6IDEwMHZ3O1xcclxcbiAgICAgICAgaGVpZ2h0OiA1MHZoO1xcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyMDBweCkge1xcclxcbiAgICAuaG9tZS1ib2R5e1xcclxcbiAgICAgICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIH1cXHJcXG4gICAgLmltYWdlLWJveCB7XFxyXFxuICAgICAgICB3aWR0aDogMTAwdnc7XFxyXFxuICAgICAgICBoZWlnaHQ6IDUwdmg7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG59XCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9PcHRpb25zLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ1dHRvbi1jb250YWluZXJ7XFxyXFxuICAgIGZsZXgtZ3JvdzogMDtcXHJcXG4gICAgZmxleC1zaHJpbms6IDA7XFxyXFxuICAgIGZsZXgtYmFzaXM6IDUwJTtcXHJcXG4gICAgbWFyZ2luOiA1cHggMHB4O1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLm9wdGlvbiB7XFxyXFxuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXHJcXG4gICAgLyogcG9zaXRpb246IGFic29sdXRlOyAqL1xcclxcbiAgICB3aWR0aDogNTAlO1xcclxcbiAgICAvKiBmb250LXNpemU6IDFyZW07ICovXFxyXFxuICAgIC8qIHBhZGRpbmctdG9wOiA1cHg7XFxyXFxuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHg7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XFxyXFxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7ICovXFxyXFxufVxcclxcbi5ub3JtYWx7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHR1cnF1b2lzZTtcXHJcXG4gICAgY29sb3I6IGJsYWNrO1xcclxcbn1cXHJcXG4uZ3JleWVke1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNzgsIDE1NiwgMTQ4KTtcXHJcXG59XFxyXFxuLnJlZHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcclxcbiAgICBjb2xvcjogd2hpdGU7XFxyXFxufVxcclxcbi5ncmVlbntcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW55ZWxsb3c7XFxyXFxufVxcclxcblxcclxcblxcclxcbi8qIGlucHV0W3R5cGU9XFxcInJhZGlvXFxcIl17XFxyXFxuICAgIG1hcmdpbjogMCAzNXB4IDAgMDtcXHJcXG4gIH0gKi9cXHJcXG4vKiBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcXHJcXG4gICAgaW5wdXRbdHlwZT1cXFwicmFkaW9cXFwiXXtcXHJcXG4gICAgICAgIG1hcmdpbjogMCAwIDAgMDtcXHJcXG4gICAgfVxcclxcbiAgICAub3B0aW9uTGFiZWwge1xcclxcbiAgICAgICAgbWFyZ2luOjA7XFxyXFxuICAgICAgICBwYWRkaW5nOjA7XFxyXFxuICAgIH1cXHJcXG59ICovXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TY29yZS5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7IiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5TY29yZXtcXHJcXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XFxyXFxuICAgIGdyaWQtcm93OiAxO1xcclxcbiAgICBncmlkLWNvbHVtbjogMztcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNCwgMjQxLCAxNjUsIDAuMTkyKTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vTmF2YmFyLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxyXFxuLm5hdmJhciB7XFxyXFxuICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICB6LWluZGV4OiAxO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQscmdiKDcwLCAxMDgsIDEyNikscmdiKDEyNSwgMTkwLCAyMTkpLHJnYig3MCwgMTA4LCAxMjYpKTtcXHJcXG4gIHRvcDogMDtcXHJcXG4gIGxlZnQ6IDA7XFxyXFxuICAvKiBvdmVyZmxvdy15OiBoaWRkZW47ICovXFxyXFxuICAvKiBwYWRkaW5nOiAwLjNyZW0gMC4zcmVtOyAqL1xcclxcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxufVxcclxcbi5uYXYtYnV0dG9uIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgY29sb3I6IHJnYigyMDcsIDE2NywgMzQpO1xcclxcbiAgdHJhbnNmb3JtOiBzY2FsZSgyLDIpO1xcclxcbiAgb3JkZXI6IDE7XFxyXFxufVxcclxcbi5ib3gtMmItZmlsbGVke1xcclxcbiAgd2lkdGg6IDcwJTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOSwgODgsIDk5KTtcXHJcXG4gIG9yZGVyOiAyO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcXHJcXG59XFxyXFxuLmJ1dHRvbntcXHJcXG4gIG9yZGVyOiAzO1xcclxcbn1cXHJcXG5cXHJcXG4ucGVyYyB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOSwgODgsIDk5KTtcXHJcXG4gIGNvbG9yOiAjZmZmZmZmO1xcclxcbiAgd2lkdGg6IDNyZW07XFxyXFxuICBwYWRkaW5nLXRvcDogMC4xcmVtO1xcclxcbiAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XFxyXFxuICBvcmRlcjogMTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG4gIC8qIG1hcmdpbi1sZWZ0OiAycmVtOyAqL1xcclxcbn1cXHJcXG4ucHJvZ3tcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNywgMTc2LCAxOTcpO1xcclxcbiAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgb3JkZXI6IDI7XFxyXFxuICAvKiB3aWR0aDogM3JlbTsgKi9cXHJcXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxyXFxufVxcclxcblxcclxcblxcclxcbi5vdmVybGF5IHtcXHJcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICB6LWluZGV4OiAyO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IDEwMCU7XFxyXFxuICB0b3A6IDA7XFxyXFxuICBsZWZ0OiAwO1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSg1OSwgODksIDEwMiwgMC43KTtcXHJcXG4gIHRyYW5zaXRpb246ICAxLjJzO1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuLm92ZXJsYXkuaGlkZSB7XFxyXFxuICAvKiBkaXNwbGF5OiBub25lOyAqL1xcclxcbiAgaGVpZ2h0OiAwO1xcclxcbn1cXHJcXG4ub3Zlci1idXR0b24ge1xcclxcbiAgLyogZGlzcGxheTogaW5saW5lLWJsb2NrOyAqL1xcclxcbiAgZm9udC1zaXplOiAycmVtO1xcclxcbiAgd2lkdGg6IDEwJTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDUwcHg7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhbWFyaW5lO1xcclxcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcclxcbiAgbWFyZ2luLXRvcDogMzBweDtcXHJcXG4gIHRyYW5zaXRpb246ICAxLjVzO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4ub3Zlci1idXR0b24uaGlkZXtcXHJcXG4gIG1hcmdpbi10b3A6IC0xMDAlO1xcclxcbiAgdG9wOiAtMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuLm92ZXJsYXktdGV4dHtcXHJcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXHJcXG4gIGNvbG9yOiAjZmZmZmZmO1xcclxcbiAgb3JkZXI6IC0xO1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgbWFyZ2luLXRvcDogMjAwcHg7XFxyXFxuICB0cmFuc2l0aW9uOiAgMS4ycztcXHJcXG59XFxyXFxuLm92ZXJsYXktdGV4dC5oaWRle1xcclxcbiAgbWFyZ2luLXRvcDogLTEwMCU7XFxyXFxuICB0b3A6IC0xMDAlO1xcclxcbn1cXHJcXG5cXHJcXG4vKiAubmF2LWhlYWRlciB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gIH0gKi9cXHJcXG5cXHJcXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDcwMHB4KSB7XFxyXFxuICAgIC5vdmVyLWJ1dHRvbiB7XFxyXFxuICAgICB3aWR0aDogMzAlO1xcclxcbiAgICB9XFxyXFxuICAgIC5vdmVybGF5LXRleHQge1xcclxcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbiAgICB9XFxyXFxuICB9XCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bywgZnJvbSkge1xuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XG5cbiAgdmFyIHRvUGFydHMgPSAodG8gJiYgdG8uc3BsaXQoJy8nKSkgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2g7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG5cbiAgaWYgKFxuICAgIG11c3RFbmRBYnMgJiZcbiAgICBmcm9tUGFydHNbMF0gIT09ICcnICYmXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcbiAgKVxuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTtcbiIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBwYXRoLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihwcmVmaXgudG9Mb3dlckNhc2UoKSkgPT09IDAgJiYgJy8/IycuaW5kZXhPZihwYXRoLmNoYXJBdChwcmVmaXgubGVuZ3RoKSkgIT09IC0xO1xufVxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcblxuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbiAgcmV0dXJuIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb247XG5cbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59XG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxuZnVuY3Rpb24gc3RyaXBIYXNoKHVybCkge1xuICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyB1cmwgOiB1cmwuc2xpY2UoMCwgaGFzaEluZGV4KTtcbn1cblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uoc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcjJyArIHBhdGgpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBfcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdm9pZCAwID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbCQkMShhLCBiKSB7XG4gICAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwkJDEocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuXG5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICB2YXIgYmFzZVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICB2YXIgaHJlZiA9ICcnO1xuXG4gICAgaWYgKGJhc2VUYWcgJiYgYmFzZVRhZy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgaHJlZiA9IHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhyZWYgKyAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJykgOiB2b2lkIDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBfcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBndWQgZnJvbSAnZ3VkJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xuXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBndWQoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgICAgdmFyIF90aGlzO1xuXG4gICAgICBfdGhpcyA9IF9Db21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSk7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHdhcm5pbmcoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICcgKyBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0c0xvb3NlKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGhpczI7XG5cbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9O1xuXG4gICAgICBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcblxuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxudmFyIGluZGV4ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdtaW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0JztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0ID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBjb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlclwiKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxuICAgICAgdmFsdWU6IHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICBsb2NhdGlvbjogdGhpcy5zdGF0ZS5sb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxuICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLnN0YXRpY0NvbnRleHRcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcmV2UHJvcHMuaGlzdG9yeSA9PT0gdGhpcy5wcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5cbnZhciBNZW1vcnlSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTWVtb3J5Um91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW1vcnlSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZU1lbW9yeUhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBNZW1vcnlSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgTGlmZWN5Y2xlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKExpZmVjeWNsZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGlmZWN5Y2xlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaWZlY3ljbGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBMaWZlY3ljbGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5IGZyb20gYSBzY3JlZW4uXG4gKi9cblxuZnVuY3Rpb24gUHJvbXB0KF9yZWYpIHtcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXG4gICAgICBfcmVmJHdoZW4gPSBfcmVmLndoZW4sXG4gICAgICB3aGVuID0gX3JlZiR3aGVuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR3aGVuO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGlmICghd2hlbiB8fCBjb250ZXh0LnN0YXRpY0NvbnRleHQpIHJldHVybiBudWxsO1xuICAgIHZhciBtZXRob2QgPSBjb250ZXh0Lmhpc3RvcnkuYmxvY2s7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKHByZXZQcm9wcy5tZXNzYWdlICE9PSBtZXNzYWdlKSB7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25Vbm1vdW50OiBmdW5jdGlvbiBvblVubW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciBtZXNzYWdlVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG4gIFByb21wdC5wcm9wVHlwZXMgPSB7XG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgbWVzc2FnZTogbWVzc2FnZVR5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcbiAgaWYgKGNhY2hlW3BhdGhdKSByZXR1cm4gY2FjaGVbcGF0aF07XG4gIHZhciBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdG9yO1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxuICovXG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKHBhdGgsIHBhcmFtcykge1xuICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGF0aCA9IFwiL1wiO1xuICB9XG5cbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aCA9PT0gXCIvXCIgPyBwYXRoIDogY29tcGlsZVBhdGgocGF0aCkocGFyYW1zLCB7XG4gICAgcHJldHR5OiB0cnVlXG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBuYXZpZ2F0aW5nIHByb2dyYW1tYXRpY2FsbHkgd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG5mdW5jdGlvbiBSZWRpcmVjdChfcmVmKSB7XG4gIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgX3JlZiRwdXNoID0gX3JlZi5wdXNoLFxuICAgICAgcHVzaCA9IF9yZWYkcHVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJHB1c2g7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IGNvbnRleHQuc3RhdGljQ29udGV4dDtcbiAgICB2YXIgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihjb21wdXRlZE1hdGNoID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcykgOiBfZXh0ZW5kcyh7fSwgdG8sIHtcbiAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgIH0pIDogdG8pOyAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxuICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxuXG4gICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcbiAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICB2YXIgcHJldkxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcblxuICAgICAgICBpZiAoIWxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgICAgICAga2V5OiBwcmV2TG9jYXRpb24ua2V5XG4gICAgICAgIH0pKSkge1xuICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0bzogdG9cbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSQxID0ge307XG52YXIgY2FjaGVMaW1pdCQxID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCQxID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgkMShwYXRoLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAga2V5czoga2V5c1xuICB9O1xuXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCQxKys7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cblxuXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgb3B0aW9ucyA9IHtcbiAgICAgIHBhdGg6IG9wdGlvbnNcbiAgICB9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcbiAgICAgIGV4YWN0ID0gX29wdGlvbnMkZXhhY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkZXhhY3QsXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxuICAgICAgX29wdGlvbnMkc2Vuc2l0aXZlID0gX29wdGlvbnMuc2Vuc2l0aXZlLFxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhzID0gW10uY29uY2F0KHBhdGgpO1xuICByZXR1cm4gcGF0aHMucmVkdWNlKGZ1bmN0aW9uIChtYXRjaGVkLCBwYXRoKSB7XG4gICAgaWYgKCFwYXRoICYmIHBhdGggIT09IFwiXCIpIHJldHVybiBudWxsO1xuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcblxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcbiAgICAgIGVuZDogZXhhY3QsXG4gICAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXG4gICAgfSksXG4gICAgICAgIHJlZ2V4cCA9IF9jb21waWxlUGF0aC5yZWdleHAsXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICAgIHZhciBtYXRjaCA9IHJlZ2V4cC5leGVjKHBhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBwYXRoLFxuICAgICAgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxuICAgICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCxcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdDogaXNFeGFjdCxcbiAgICAgIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pXG4gICAgfTtcbiAgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufVxuXG5mdW5jdGlvbiBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBwYXRoKSB7XG4gIHZhciB2YWx1ZSA9IGNoaWxkcmVuKHByb3BzKTtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyh2YWx1ZSAhPT0gdW5kZWZpbmVkLCBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICsgKFwiPFJvdXRlXCIgKyAocGF0aCA/IFwiIHBhdGg9XFxcIlwiICsgcGF0aCArIFwiXFxcIlwiIDogXCJcIikgKyBcIj4sIGJ1dCB5b3UgXCIpICsgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCIpIDogdm9pZCAwO1xuICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG5cbnZhciBSb3V0ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQxKSB7XG4gICAgICAhY29udGV4dCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JDEubG9jYXRpb247XG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcbiAgICAgIDogX3RoaXMucHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX3RoaXMucHJvcHMpIDogY29udGV4dCQxLm1hdGNoO1xuXG4gICAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCQxLCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IG1hdGNoXG4gICAgICB9KTtcblxuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICBjb21wb25lbnQgPSBfdGhpcyRwcm9wcy5jb21wb25lbnQsXG4gICAgICAgICAgcmVuZGVyID0gX3RoaXMkcHJvcHMucmVuZGVyOyAvLyBQcmVhY3QgdXNlcyBhbiBlbXB0eSBhcnJheSBhcyBjaGlsZHJlbiBieVxuICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikgJiYgY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZTogcHJvcHNcbiAgICAgIH0sIHByb3BzLm1hdGNoID8gY2hpbGRyZW4gPyB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogY2hpbGRyZW4gOiBjb21wb25lbnQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogcmVuZGVyID8gcmVuZGVyKHByb3BzKSA6IG51bGwgOiB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogbnVsbCk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5jb21wb25lbnQpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpIDogaW52YXJpYW50KGZhbHNlKSA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuLyoqXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXG4gKiBsb2NhdGlvbiBjaGFuZ2VzIGluIGEgY29udGV4dCBvYmplY3QuIFVzZWZ1bCBtYWlubHkgaW4gdGVzdGluZyBhbmRcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxuICovXG5cblxudmFyIFN0YXRpY1JvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcblxuICAgIF90aGlzLmhhbmRsZVB1c2ggPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlBVU0hcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUxpc3RlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVCbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3RhdGljUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ubmF2aWdhdGVUbyA9IGZ1bmN0aW9uIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wcyRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMkY29udGV4dCA9IF90aGlzJHByb3BzLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcyRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzJGNvbnRleHQ7XG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzMiRiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wczIkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzMiRjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczIkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wczIkY29udGV4dCxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyLmxvY2F0aW9uLFxuICAgICAgICBsb2NhdGlvbiA9IF90aGlzJHByb3BzMiRsb2NhdGlvbiA9PT0gdm9pZCAwID8gXCIvXCIgOiBfdGhpcyRwcm9wczIkbG9jYXRpb24sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogZnVuY3Rpb24gY3JlYXRlSHJlZihwYXRoKSB7XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xuICAgICAgfSxcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcbiAgICAgIHN0YXRpY0NvbnRleHQ6IGNvbnRleHRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFN0YXRpY1JvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTd2l0Y2gucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgICB2YXIgZWxlbWVudCwgbWF0Y2g7IC8vIFdlIHVzZSBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoIGluc3RlYWQgb2YgUmVhY3QuQ2hpbGRyZW4udG9BcnJheSgpLmZpbmQoKVxuICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcbiAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcbiAgICAgIC8vIGNvbXBvbmVudCBhdCBkaWZmZXJlbnQgVVJMcy5cblxuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChfdGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgIGVsZW1lbnQgPSBjaGlsZDtcbiAgICAgICAgICB2YXIgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcbiAgICAgICAgICBtYXRjaCA9IHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF9leHRlbmRzKHt9LCBjaGlsZC5wcm9wcywge1xuICAgICAgICAgICAgcGF0aDogcGF0aFxuICAgICAgICAgIH0pKSA6IGNvbnRleHQubWF0Y2g7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBjb21wdXRlZE1hdGNoOiBtYXRjaFxuICAgICAgfSkgOiBudWxsO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXG4gKi9cblxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcblxuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8XCIgKyBkaXNwbGF5TmFtZSArIFwiIC8+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgY29udGV4dCwge1xuICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICBDLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgQy5wcm9wVHlwZXMgPSB7XG4gICAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn1cblxudmFyIHVzZUNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0O1xuZnVuY3Rpb24gdXNlSGlzdG9yeSgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUhpc3RvcnkoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5oaXN0b3J5O1xufVxuZnVuY3Rpb24gdXNlTG9jYXRpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VMb2NhdGlvbigpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpLmxvY2F0aW9uO1xufVxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUGFyYW1zKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XG59XG5mdW5jdGlvbiB1c2VSb3V0ZU1hdGNoKHBhdGgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVJvdXRlTWF0Y2goKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gcGF0aCA/IG1hdGNoUGF0aCh1c2VMb2NhdGlvbigpLnBhdGhuYW1lLCBwYXRoKSA6IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xuICAgIHZhciBrZXkgPSBcIl9fcmVhY3Rfcm91dGVyX2J1aWxkX19cIjtcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxuICAgICAgZXNtOiBcIkVTIG1vZHVsZXNcIixcbiAgICAgIHVtZDogXCJVTURcIlxuICAgIH07XG5cbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XG4gICAgICB2YXIgc2Vjb25kYXJ5QnVpbGROYW1lID0gYnVpbGROYW1lc1tcImVzbVwiXTsgLy8gVE9ETzogQWRkIGxpbmsgdG8gYXJ0aWNsZSB0aGF0IGV4cGxhaW5zIGluIGRldGFpbCBob3cgdG8gYXZvaWRcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIGxvYWRpbmcgdGhlIFwiICsgc2Vjb25kYXJ5QnVpbGROYW1lICsgXCIgYnVpbGQgb2YgUmVhY3QgUm91dGVyIFwiICsgKFwib24gYSBwYWdlIHRoYXQgaXMgYWxyZWFkeSBydW5uaW5nIHRoZSBcIiArIGluaXRpYWxCdWlsZE5hbWUgKyBcIiBcIikgKyBcImJ1aWxkLCBzbyB0aGluZ3Mgd29uJ3Qgd29yayByaWdodC5cIik7XG4gICAgfVxuXG4gICAgZ2xvYmFsW2tleV0gPSBcImVzbVwiO1xuICB9XG59XG5cbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0LCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxuIiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgKiBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTG9jYXRpb24gfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBCcm93c2VyUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXJcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5cbnZhciBIYXNoUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEhhc2hSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhhc2hIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSGFzaFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pXG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgcmVzb2x2ZVRvTG9jYXRpb24gPSBmdW5jdGlvbiByZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwiZnVuY3Rpb25cIiA/IHRvKGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG52YXIgbm9ybWFsaXplVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIG5vcm1hbGl6ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG5cbnZhciBmb3J3YXJkUmVmU2hpbSA9IGZ1bmN0aW9uIGZvcndhcmRSZWZTaGltKEMpIHtcbiAgcmV0dXJuIEM7XG59O1xuXG52YXIgZm9yd2FyZFJlZiA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XG59XG5cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59XG5cbnZhciBMaW5rQW5jaG9yID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICBuYXZpZ2F0ZSA9IF9yZWYubmF2aWdhdGUsXG4gICAgICBfb25DbGljayA9IF9yZWYub25DbGljayxcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJpbm5lclJlZlwiLCBcIm5hdmlnYXRlXCIsIFwib25DbGlja1wiXSk7XG5cbiAgdmFyIHRhcmdldCA9IHJlc3QudGFyZ2V0O1xuXG4gIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKF9vbkNsaWNrKSBfb25DbGljayhldmVudCk7XG4gICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aHJvdyBleDtcbiAgICAgIH1cblxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAoIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICAgIXRhcmdldCB8fCB0YXJnZXQgPT09IFwiX3NlbGZcIikgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICApIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIG5hdmlnYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgfSBlbHNlIHtcbiAgICBwcm9wcy5yZWYgPSBpbm5lclJlZjtcbiAgfVxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICBzdHlsZVByb3AgPSBfcmVmLnN0eWxlLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmLmlubmVyUmVmLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImFyaWEtY3VycmVudFwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwiY2xhc3NOYW1lXCIsIFwiZXhhY3RcIiwgXCJpc0FjdGl2ZVwiLCBcImxvY2F0aW9uXCIsIFwic3RyaWN0XCIsIFwic3R5bGVcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxOYXZMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvblByb3AgfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbiksIGN1cnJlbnRMb2NhdGlvbik7XG4gICAgdmFyIHBhdGggPSB0b0xvY2F0aW9uLnBhdGhuYW1lOyAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxuXG4gICAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcbiAgICB2YXIgbWF0Y2ggPSBlc2NhcGVkUGF0aCA/IG1hdGNoUGF0aChjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUsIHtcbiAgICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgICAgZXhhY3Q6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3RcbiAgICB9KSA6IG51bGw7XG4gICAgdmFyIGlzQWN0aXZlID0gISEoaXNBY3RpdmVQcm9wID8gaXNBY3RpdmVQcm9wKG1hdGNoLCBjdXJyZW50TG9jYXRpb24pIDogbWF0Y2gpO1xuICAgIHZhciBjbGFzc05hbWUgPSBpc0FjdGl2ZSA/IGpvaW5DbGFzc25hbWVzKGNsYXNzTmFtZVByb3AsIGFjdGl2ZUNsYXNzTmFtZSkgOiBjbGFzc05hbWVQcm9wO1xuICAgIHZhciBzdHlsZSA9IGlzQWN0aXZlID8gX2V4dGVuZHMoe30sIHN0eWxlUHJvcCwge30sIGFjdGl2ZVN0eWxlKSA6IHN0eWxlUHJvcDtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHtcbiAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGlzQWN0aXZlICYmIGFyaWFDdXJyZW50IHx8IG51bGwsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICAgIHN0eWxlOiBzdHlsZSxcbiAgICAgIHRvOiB0b0xvY2F0aW9uXG4gICAgfSwgcmVzdCk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0kMSAhPT0gZm9yd2FyZFJlZiQxKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgcHJvcHMpO1xuICB9KTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE5hdkxpbmsuZGlzcGxheU5hbWUgPSBcIk5hdkxpbmtcIjtcbiAgdmFyIGFyaWFDdXJyZW50VHlwZSA9IFByb3BUeXBlcy5vbmVPZihbXCJwYWdlXCIsIFwic3RlcFwiLCBcImxvY2F0aW9uXCIsIFwiZGF0ZVwiLCBcInRpbWVcIiwgXCJ0cnVlXCJdKTtcbiAgTmF2TGluay5wcm9wVHlwZXMgPSBfZXh0ZW5kcyh7fSwgTGluay5wcm9wVHlwZXMsIHtcbiAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudFR5cGUsXG4gICAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5cclxuY29uc3QgQ2l0eUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XHJcblxyXG5jbGFzcyBDaXR5UHJvdmlkZXIgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICBzdXBlcigpICBcclxuICAgICAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICAgICAgICBmaW5hbFNjb3JlOiB7Y29ycmVjdEFuczogMCx0b3RhbEFuczogMCxzY29yZTogMH0sXHJcbiAgICAgICAgICAgIHN0YXJ0ZWQ6IGZhbHNlLFxyXG4gICAgICAgICAgICBwcm9nUGVyYzogMCxcclxuICAgICAgICAgICAgZGlzcENpdGllczpbXSxcclxuICAgICAgICAgICAgY2hvaWNlQ2l0aWVzOltdLFxyXG4gICAgICAgICAgICBhcGlfdXJsOiBwcm9jZXNzLmVudi5BUElfVVJMIC8vICdodHRwOi8vMTI3LjAuMC4xOjUwMDAvJyAvLyAnaHR0cHM6Ly9jaXR5LWd1ZXNzLWFwaS5oZXJva3VhcHAuY29tLycgXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVQcm9nID0gKG5ld1BlcmMpID0+IHt0aGlzLnNldFN0YXRlKHtwcm9nUGVyYzogbmV3UGVyY30pOyB9XHJcbiAgICB0b2dnbGVTdGFydCA9ICgpID0+IHt0aGlzLnNldFN0YXRlKHtzdGFydGVkOiAhdGhpcy5zdGF0ZS5zdGFydGVkfSk7fVxyXG4gICAgY2hhbmdlRGlzcENpdGllcyA9IChuZXdDaXRpZXMpID0+IHsgaWYgKG5ld0NpdGllcy5sZW5ndGg+MCkgdGhpcy5zZXRTdGF0ZSh7ZGlzcENpdGllczpuZXdDaXRpZXN9KX07IFxyXG4gICAgc2V0RmluYWxTY29yZSA9IChjb3JyZWN0QW5zLHRvdGFsQW5zLHNjb3JlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7ZmluYWxTY29yZToge2NvcnJlY3RBbnMsdG90YWxBbnMsc2NvcmV9fSlcclxuICAgICAgICB0aGlzLnRvZ2dsZVN0YXJ0KClcclxuICAgIH07IFxyXG5cclxuICAgIGxvYWRDaXRpZXMgPSAgYXN5bmMgKG51bU9mQ2l0aWVzLG11bHRpcGxpZXIpID0+IHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHRoaXMuc3RhdGUuYXBpX3VybCsnaW1hZ2VzLycrbnVtT2ZDaXRpZXMqbXVsdGlwbGllcilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKChyZXNwKSA9PiB7ICAgIC8vIFNlcnZlciBlcnJvcnNcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcC5zdGF0dXMgPj0gNDAwICYmIHJlc3Auc3RhdHVzIDwgNjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkJhZCByZXNwb25zZSBmcm9tIHNlcnZlciBcIityZXNwLnN0YXR1cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihyZXNwID0+IHJlc3AuanNvbigpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coZXJyb3IpKSAvLyBOZXR3b3JrIGVycm9yc1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIGRpc3BDaXRpZXM6IHJlc3BvbnNlLnNsaWNlKDAsbnVtT2ZDaXRpZXMpLFxyXG4gICAgICAgICAgICBjaG9pY2VDaXRpZXM6IHJlc3BvbnNlLnNsaWNlKG51bU9mQ2l0aWVzKVxyXG4gICAgICAgIH0pOyAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCkgeyBcclxuICAgICAgICByZXR1cm4gKCAgXHJcbiAgICAgICAgICAgIDxDaXR5Q29udGV4dC5Qcm92aWRlciBcclxuICAgICAgICAgICAgICAgIHZhbHVlPXt7Li4udGhpcy5zdGF0ZSxcclxuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VEaXNwQ2l0aWVzOiB0aGlzLmNoYW5nZURpc3BDaXRpZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgZ2V0Q2l0aWVzOiB0aGlzLmxvYWRDaXRpZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgc2hvd1RoZW06IHRoaXMuc2hvd1RoZW0sXHJcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlUHJvZzogdGhpcy51cGRhdGVQcm9nLFxyXG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZVN0YXJ0OiB0aGlzLnRvZ2dsZVN0YXJ0LFxyXG4gICAgICAgICAgICAgICAgICAgIHNldEZpbmFsU2NvcmU6IHRoaXMuc2V0RmluYWxTY29yZVxyXG4gICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XHJcbiAgICAgICAgICAgIDwvQ2l0eUNvbnRleHQuUHJvdmlkZXI+XHJcbiAgICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBDaXR5Q29uc3VtZXIgPSBDaXR5Q29udGV4dC5Db25zdW1lcjtcclxuXHJcbmV4cG9ydCB7IENpdHlQcm92aWRlciwgQ2l0eUNvbnRleHQgLCBDaXR5Q29uc3VtZXIgfTsiLCJpbXBvcnQgUmVhY3Qse3VzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZUNvbnRleHR9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFwiLi4vY3NzL0hvbWUuY3NzXCI7XHJcbmltcG9ydCB7IENpdHlDb250ZXh0IH0gIGZyb20gXCIuLi9jb250ZXh0XCI7XHJcbmltcG9ydCBPcHRpb25zIGZyb20gXCIuL09wdGlvbnNcIjtcclxuaW1wb3J0IFNjb3JlIGZyb20gXCIuL1Njb3JlXCJcclxuLy8gaW1wb3J0IE9uU3VibWl0TWVzc2FnZSBmcm9tIFwiLi9PblN1Ym1pdE1lc3NhZ2VcIjtcclxuaW1wb3J0IHBsYWNlaG9sZGVyIGZyb20gXCIuLi9hc3NldHMvbG9hZGluZy5wbmdcIlxyXG5cclxubGV0IGxhc3RSb3VuZCA9W107XHJcbmxldCBsYXN0Q2l0eTtcclxuXHJcbmZ1bmN0aW9uIEhvbWUocHJvcHMpIHtcclxuICAgIGNvbnN0IFRpbWVyID0gMTA7XHJcbiAgICBjb25zdCBudW1DaG9pY2VzID00O1xyXG5cclxuXHJcbiAgICBjb25zdCBjaXR5Q29udGV4dCA9IHVzZUNvbnRleHQoQ2l0eUNvbnRleHQpO1xyXG4gICAgY29uc3Qge2dldENpdGllcyxjaG9pY2VDaXRpZXMsIGRpc3BDaXRpZXMsIGFwaV91cmwsY2hhbmdlRGlzcENpdGllcyxwcm9nUGVyYyx1cGRhdGVQcm9nLHN0YXJ0ZWQsdG9nZ2xlU3RhcnQsc2V0RmluYWxTY29yZX0gPSBjaXR5Q29udGV4dDtcclxuICAgIC8vIGNob2ljZUNpdGllcyA9PT4gcG9vbCBvZiBjaG9pY2VzICxjaXR5Q2hvaWNlcyA9PT4gY3VycmVudCBncm91cCBvZiA0IGNob2ljZXNcclxuICAgIGNvbnN0IFtzY29yZSxzZXRTY29yZV0gPSB1c2VTdGF0ZSgwKTtcclxuICAgIGNvbnN0IFt0aW1lQ291bnRlciwgc2V0VGltZUNvdW50ZXJdID0gdXNlU3RhdGUoVGltZXIpO1xyXG4gICAgY29uc3QgW251bU9mQ29ycmVjdCAsIHNldE51bU9mQ29ycmVjdF0gPSB1c2VTdGF0ZSgwKTtcclxuICAgIGNvbnN0IFtudW1BbnN3ZXJlZCwgc2V0TnVtQW5zd2VyZWRdID0gdXNlU3RhdGUoMCk7XHJcbiAgICBjb25zdCBbbnVtT2ZDaXRpZXMsIHNldE51bU9mQ2l0aWVzXSA9IHVzZVN0YXRlKDEwKTtcclxuICAgIGNvbnN0IFtzZWxlY3RlZE9wdGlvbixzZXRTZWxlY3RlZE9wdGlvbl0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgICBjb25zdCBbdXNlclN1Ym1pdGVkLHNldFVzZXJTdWJtaXRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgICBjb25zdCBbY29ycmVjdCxzZXRDb3JyZWN0XSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICAgIGNvbnN0IFtmaW5pc2hlZExvYWRpbmcsc2V0RmluaXNoZWRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICAgIGNvbnN0IFtjb3JyZWN0T3B0aW9uLHNldENvcnJlY3RPcHRpb25dID0gdXNlU3RhdGUoW10pO1xyXG4gICAgY29uc3QgW2NpdHlEaXNwbGF5ZWQsc2V0Q2l0eURpc3BsYXllZF0gPSB1c2VTdGF0ZSh7aWQ6IDAsbmFtZTogJ3BsYWNlaG9sZGVyJyx1cmw6IHBsYWNlaG9sZGVyfSk7XHJcbiAgICBjb25zdCBbY2l0eUNob2ljZXMsc2V0Q2l0eUNob2ljZXNdID0gdXNlU3RhdGUoW10pO1xyXG4gICAgXHJcbiAgICBjb25zdCBzZWxlY3RDaXRpZXMgPSAoZGlzcENpdGllcykgPT4ge1xyXG4gICAgICAgICAgICBsZXQgY2l0eURpc3BsYXllZEluZGV4PU1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSpkaXNwQ2l0aWVzLmxlbmd0aCk7XHJcbiAgICAgICAgICAgIGxldCBjaG9zZW5DaXR5ID0gZGlzcENpdGllcy5zcGxpY2UoY2l0eURpc3BsYXllZEluZGV4LDEpOyAvL3BpY2sgYSByYW5kb20gb25lXHJcbiAgICAgICAgICAgIGNob3NlbkNpdHkgPSBjaG9zZW5DaXR5WzBdICAvLyBleHRyYWN0IGl0XHJcbiAgICAgICAgICAgIGxldCBjaXR5Q2hvaWNlcyA9IGNob2ljZUNpdGllcy5zcGxpY2UoMCwzKSAvLyBwaWNrIDMgcmFuZG9tIGZyb20gZGlmZmVyZW50IHBvb2wgb2YgY2hvaWNlc1xyXG4gICAgICAgICAgICBjb25zdCByYW5kSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqbnVtQ2hvaWNlcyk7XHJcbiAgICAgICAgICAgIGNpdHlDaG9pY2VzLnNwbGljZShyYW5kSW5kZXgsMCxjaG9zZW5DaXR5KSAgLy8gcHV0IGRpc3BsYXllZCBhdCByYW5kb20gaW5kZXggb3V0IG9mIHRoZSBudW1DaG9pY2VzXHJcbiAgICAgICAgICAgIGlmIChudW1BbnN3ZXJlZD09PW51bU9mQ2l0aWVzLTEpe1xyXG4gICAgICAgICAgICAgICAgbGFzdFJvdW5kID0gY2l0eUNob2ljZXM7XHJcbiAgICAgICAgICAgICAgICBsYXN0Q2l0eSA9IGNpdHlDaG9pY2VzWzBdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICgobnVtQW5zd2VyZWQ9PT1udW1PZkNpdGllcykgJiYgc3RhcnRlZCkgeyBcclxuICAgICAgICAgICAgICAgIGNpdHlDaG9pY2VzID0gbGFzdFJvdW5kO1xyXG4gICAgICAgICAgICAgICAgY2hvc2VuQ2l0eSA9IGxhc3RDaXR5O1xyXG4gICAgICAgICAgICAgICAgdG9nZ2xlU3RhcnQoKSBcclxuICAgICAgICAgICAgfSA7XHJcbiAgICAgICAgICAgIGNoYW5nZURpc3BDaXRpZXMoZGlzcENpdGllcyk7XHJcbiAgICAgICAgICAgIHNldENpdHlEaXNwbGF5ZWQoY2hvc2VuQ2l0eSlcclxuICAgICAgICAgICAgc2V0Q29ycmVjdE9wdGlvbihjaG9zZW5DaXR5KTtcclxuICAgICAgICAgICAgc2V0Q2l0eUNob2ljZXMoY2l0eUNob2ljZXMpO1xyXG4gICAgICAgICAgICBzZXRGaW5pc2hlZExvYWRpbmcodHJ1ZSk7XHJcbiAgICAgICAgICAgIHNldE51bUFuc3dlcmVkKG51bUFuc3dlcmVkKzEpO1xyXG4gICAgICAgICAgICBpZihjb3JyZWN0KSB7c2V0TnVtT2ZDb3JyZWN0KG51bU9mQ29ycmVjdCsxKX0gO1xyXG4gICAgICAgICAgICB1cGRhdGVQcm9nKG51bUFuc3dlcmVkL251bU9mQ2l0aWVzKTtcclxuICAgICAgICAgICAgc2V0VGltZUNvdW50ZXIoVGltZXIpO1xyXG4gICAgICAgICAgICBzZXRVc2VyU3VibWl0ZWQoZmFsc2UpO1xyXG4gICAgICAgICAgICBpZiAoKG51bUFuc3dlcmVkPT09bnVtT2ZDaXRpZXMpICYmIHN0YXJ0ZWQpIHtcclxuICAgICAgICAgICAgICAgIHNldEZpbmFsU2NvcmUobnVtT2ZDb3JyZWN0LG51bU9mQ2l0aWVzLHNjb3JlKTtcclxuICAgICAgICAgICAgICAgIC8vIHRvZ2dsZVN0YXJ0KCk7IFxyXG4gICAgICAgICAgICB9IDtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChjaGFuZ2VFdmVudCkgPT4ge1xyXG4gICAgICAgIHNldFNlbGVjdGVkT3B0aW9uKGNoYW5nZUV2ZW50LnRhcmdldC5uYW1lKVxyXG4gICAgICAgIHNldFVzZXJTdWJtaXRlZCh0cnVlKTtcclxuICAgICAgICBpZiAoY2hhbmdlRXZlbnQudGFyZ2V0Lm5hbWUgPT09IGNvcnJlY3RPcHRpb24ubmFtZSkge1xyXG4gICAgICAgICAgICBzZXRDb3JyZWN0KHRydWUpIDtcclxuICAgICAgICAgICAgc2V0U2NvcmUoc2NvcmUrdGltZUNvdW50ZXIpXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc2V0Q29ycmVjdChmYWxzZSk7XHJcbiAgICAgICAgfSAgXHJcbiAgICB9O1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgaWYoIXVzZXJTdWJtaXRlZCAmJiBzdGFydGVkKXtcclxuICAgICAgICAgICAgaWYgKHRpbWVDb3VudGVyID4gMCl7XHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHNldFRpbWVDb3VudGVyKHRpbWVDb3VudGVyIC0gMSksIDEwMDApXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRpbWVDb3VudGVyPT09MCAmJiAhdXNlclN1Ym1pdGVkKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRVc2VyU3VibWl0ZWQodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBzZXRTZWxlY3RlZE9wdGlvbihjb3JyZWN0T3B0aW9uKTtcclxuICAgICAgICAgICAgICAgIHNldENvcnJlY3QoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgLy8gc2VsZWN0Q2l0aWVzKGRpc3BDaXRpZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSwgW3RpbWVDb3VudGVyLHN0YXJ0ZWRdKTtcclxuICAgIFxyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICh0eXBlb2YgZGlzcENpdGllc1swXSAhPSAndW5kZWZpbmVkJyAmJiBmaW5pc2hlZExvYWRpbmcgPT09IGZhbHNlKXtcclxuICAgICAgICBzZWxlY3RDaXRpZXMoZGlzcENpdGllcylcclxuICAgIH1cclxuICAgIH0sW2Rpc3BDaXRpZXNdKVxyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgYXN5bmMgZnVuY3Rpb24gZmV0Y2goKXtcclxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBnZXRDaXRpZXMobnVtT2ZDaXRpZXMsbnVtQ2hvaWNlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZldGNoKCk7XHJcbiAgICB9LFtdKVxyXG5cclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaG9tZS1ib2R5XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY291bnRkb3duXCI+VGltZXI6IHt0aW1lQ291bnRlcn08L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWFnZS1ib3hcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPXthcGlfdXJsK2NpdHlEaXNwbGF5ZWQudXJsfSBhbHQ9e2NpdHlEaXNwbGF5ZWQubmFtZX0gY2xhc3NOYW1lPVwiaW1hZ2VcIiAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPFNjb3JlIG51bVRvdGFsQ2l0aWVzPXtudW1PZkNpdGllc30gXHJcbiAgICAgICAgICAgICAgICAgICAgbnVtQW5zd2VyZWQ9e251bUFuc3dlcmVkfSBcclxuICAgICAgICAgICAgICAgICAgICBudW1PZkNvcnJlY3Q9e251bU9mQ29ycmVjdH1cclxuICAgICAgICAgICAgICAgICAgICBTY29yZT17c2NvcmV9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3B0aW9ucy1ib3hcIj5cclxuICAgICAgICAgICAgICAgIHtjaXR5Q2hvaWNlcy5tYXAoIFxyXG4gICAgICAgICAgICAgICAgICAgIGNpdHkgPT4gPE9wdGlvbnMgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT17Y2l0eS5uYW1lfSBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnaXZlbk9wdGlvbj17c2VsZWN0ZWRPcHRpb259IFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZT17aGFuZGxlQ2hhbmdlfSBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2NpdHkuaWR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e3VzZXJTdWJtaXRlZH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3JyZWN0T3B0aW9uPXtjb3JyZWN0T3B0aW9uLm5hbWV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgICkgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIDwvZGl2PiAgXHJcbiAgICAgICAgICAgIDxidXR0b24gXHJcbiAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCIgXHJcbiAgICAgICAgICAgICAgICBkaXNhYmxlZD17IXVzZXJTdWJtaXRlZH0gXHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BuZXh0LWJ1dHRvbiAke3VzZXJTdWJtaXRlZCA/IFwibm9ybWFsXCIgOiBcImdyZXllZFwifWB9IFxyXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2VsZWN0Q2l0aWVzKGRpc3BDaXRpZXMpfVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICB7KG51bUFuc3dlcmVkPT09bnVtT2ZDaXRpZXMpP1wiUmVzdWx0c1wiOlwiTmV4dFwifSBcclxuICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgIHsvKiA8ZGl2IGNsYXNzTmFtZT1cInJlc3VsdFwiPlxyXG4gICAgICAgICAgICAgICAgeyB1c2VyU3VibWl0ZWQgXHJcbiAgICAgICAgICAgICAgICAgICAgPyA8T25TdWJtaXRNZXNzYWdlIGNvcnJlY3Q9e2NvcnJlY3R9Lz4gXHJcbiAgICAgICAgICAgICAgICAgICAgOiA8ZGl2PkNob29zZSBhIENpdHk8L2Rpdj5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgPC9kaXY+ICovfVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhvbWU7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFwiLi4vY3NzL09wdGlvbnMuY3NzXCI7XHJcblxyXG5jb25zdCBPcHRpb25zID0gKHtuYW1lLGdpdmVuT3B0aW9uLGNoYW5nZSxkaXNhYmxlZCxjb3JyZWN0T3B0aW9ufSkgPT4ge1xyXG4gICBcclxuICAgIGxldCBjb2xvciA9IFwibm9ybWFsXCI7XHJcbiAgICBpZiAoZGlzYWJsZWQpe1xyXG4gICAgICAgIGlmKG5hbWU9PT1jb3JyZWN0T3B0aW9uKXtcclxuICAgICAgICAgICAgY29sb3IgPSBcImdyZWVuXCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoZ2l2ZW5PcHRpb24gPT09IG5hbWUpe1xyXG4gICAgICAgICAgICBjb2xvciA9IFwicmVkXCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIGNvbG9yID0gXCJncmV5ZWRcIjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKCBcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ1dHRvbi1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uICBjbGFzc05hbWU9e2BvcHRpb24gJHtjb2xvcn1gfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCIgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9e25hbWV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtuYW1lfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtjaGFuZ2V9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH0gICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgIHtuYW1lfVxyXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgKVxyXG59O1xyXG4gXHJcbmV4cG9ydCBkZWZhdWx0IE9wdGlvbnM7IiwiaW1wb3J0IFJlYWN0ICx7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFwiLi4vY3NzL1Njb3JlLmNzc1wiXHJcblxyXG5cclxuXHJcbmNvbnN0IFNjb3JlID0gKHtudW1Ub3RhbENpdGllcyAsIG51bUFuc3dlcmVkICxudW1PZkNvcnJlY3QgLFNjb3JlfSkgPT4ge1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIlNjb3JlXCI+XHJcbiAgICAgICAgey8qIDxkaXY+VG90YWw6IHtudW1Ub3RhbENpdGllc308L2Rpdj4gKi99XHJcbiAgICAgICAgey8qIDxkaXY+QW5zd2VyZWQ6IHtudW1BbnN3ZXJlZH08L2Rpdj4gKi99XHJcbiAgICAgICAgPGRpdj5Db3JyZWN0OiB7bnVtT2ZDb3JyZWN0fS97bnVtVG90YWxDaXRpZXN9PC9kaXY+XHJcbiAgICAgICAgPGRpdj5TY29yZToge1Njb3JlfTwvZGl2PlxyXG4gICAgICAgIHsvKiA8ZGl2Pldyb25nOiB7bnVtQW5zd2VyZWQtbnVtT2ZDb3JyZWN0fTwvZGl2PiAgKi99XHJcbiAgICA8L2Rpdj5cclxuICAgICApO1xyXG59XHJcbiBcclxuZXhwb3J0IGRlZmF1bHQgU2NvcmU7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjIwZTA3OTZiMDk5MTlhYzMyMjM5MWVkNWNlZWY0YWJiLnBuZ1wiOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuXHJcblxyXG5jb25zdCBQcm9ncmVzc0JhciA9ICh7cGVyY2VudGFnZX0pID0+IHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtMmItZmlsbGVkXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGVyY1wiPntwZXJjZW50YWdlKjEwMH0lPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvZ1wiIFxyXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiBgJHtwZXJjZW50YWdlKjEwMH0lYCB9fVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgPC9kaXY+IFxyXG4gICAgKTtcclxufVxyXG4gXHJcbmV4cG9ydCBkZWZhdWx0IFByb2dyZXNzQmFyOyIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSx1c2VDb250ZXh0LCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IEZhSG9tZSB9IGZyb20gJ3JlYWN0LWljb25zL2ZhJztcclxuaW1wb3J0IHsgTGluayB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmltcG9ydCBcIi4uL2Nzcy9OYXZiYXIuY3NzXCJcclxuaW1wb3J0IFByb2dyZXNzQmFyIGZyb20gJy4vUHJvZ3Jlc3NCYXInXHJcbmltcG9ydCB7IENpdHlDb250ZXh0IH0gIGZyb20gXCIuLi9jb250ZXh0XCI7XHJcblxyXG5jb25zdCBOYXZiYXIgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBjaXR5Q29udGV4dCA9IHVzZUNvbnRleHQoQ2l0eUNvbnRleHQpO1xyXG4gICAgY29uc3Qge3Byb2dQZXJjLHN0YXJ0ZWQsdG9nZ2xlU3RhcnQsZmluYWxTY29yZX0gPSBjaXR5Q29udGV4dDtcclxuICAgIGNvbnN0IFtvdmVyVmlzLCBzZXRPdmVyVmlzXSA9IHVzZVN0YXRlKCFzdGFydGVkKTtcclxuICAgIGxldCBzaG93ID0gb3ZlclZpcyA/ICdzaG93JyA6ICdoaWRlJztcclxuICAgIGNvbnN0IHRvZ2dsZU92ZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgc2V0T3ZlclZpcyghb3ZlclZpcylcclxuICAgICAgICBpZihwcm9nUGVyYz09PTApIHt0b2dnbGVTdGFydCgpfTtcclxuICAgIH1cclxuICAgIHVzZUVmZmVjdCggKCk9PiB7XHJcbiAgICAgICAgaWYgKHByb2dQZXJjPT09MSAmJiAhc3RhcnRlZCkgeyB0b2dnbGVPdmVyKCkgIH1cclxuICAgIH0sW3N0YXJ0ZWRdKVxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8bmF2IGNsYXNzTmFtZT1cIm5hdmJhclwiPlxyXG4gICAgICAgICAgICAgICAgeyhwcm9nUGVyYz09PTEpXHJcbiAgICAgICAgICAgICAgICAgPzxkaXYgY2xhc3NOYW1lPXtgb3ZlcmxheSAke3Nob3d9YH0+XHJcbiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgb3ZlcmxheS10ZXh0ICR7c2hvd31gfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGgyPlJlc3VsdHM8L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnI+PC9icj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+WW91ciBmaW5hbCBzY29yZSBpcyA6IHtmaW5hbFNjb3JlLnNjb3JlfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+WW91IGdvdCB7ZmluYWxTY29yZS5jb3JyZWN0QW5zfS97ZmluYWxTY29yZS50b3RhbEFuc30gY29ycmVjdDwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgOiAgPGRpdiBjbGFzc05hbWU9e2BvdmVybGF5ICR7c2hvd31gfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BvdmVybGF5LXRleHQgJHtzaG93fWB9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+R3Vlc3MgdGhlIG5hbWUgb2YgdGhlIGNpdHkgdGhhdCBhcHBlYXJzIGluIHRoZSBwaWN0dXJlPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+WW91IGdhaW4gcG9pbnRzIGZvciBldmVyeSBzZWNvbmQgb2YgdGltZSByZW1haW5pbmc8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT17YG92ZXItYnV0dG9uICR7c2hvd31gfSBvbkNsaWNrPXt0b2dnbGVPdmVyfSA+ICBTdGFydCAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICB9ICAgIFxyXG4gICAgICAgICAgICAgICAgPFByb2dyZXNzQmFyIHBlcmNlbnRhZ2U9e3Byb2dQZXJjfS8+XHJcbiAgICAgICAgICAgICAgICB7LyogPGRpdiBjbGFzc05hbWU9XCJuYXYtaGVhZGVyXCI+XHJcbiAgICAgICAgICAgICAgICA8TGluayB0bz1cIi9cIj5cclxuICAgICAgICAgICAgICAgICAgICA8RmFIb21lIGNsYXNzTmFtZT1cIm5hdi1idXR0b25cIi8+XHJcbiAgICAgICAgICAgICAgICA8L0xpbms+ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnV0dG9uXCIgb25DbGljaz17dG9nZ2xlT3Zlcn0gPlBhcGlhPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj4gKi99XHJcbiAgICAgICAgICAgIDwvbmF2PlxyXG4gICAgICAgIDwvPlxyXG4gICAgICk7XHJcbn1cclxuIFxyXG5leHBvcnQgZGVmYXVsdCBOYXZiYXI7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmNvbnN0IEVycm9yID0gKCkgPT4ge1xyXG4gICAgcmV0dXJuICggXHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPHA+RXJyb3IgcGFnZTwvcD5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgKTtcclxufVxyXG4gXHJcbmV4cG9ydCBkZWZhdWx0IEVycm9yOyIsImltcG9ydCBSZWFjdCAgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgJy4vY3NzL0FwcC5jc3MnO1xyXG5pbXBvcnQgSG9tZSBmcm9tIFwiLi9jb21wb25lbnRzL0hvbWVcIlxyXG5pbXBvcnQgTmF2YmFyIGZyb20gXCIuL2NvbXBvbmVudHMvTmF2YmFyXCI7XHJcbmltcG9ydCBNYWluIGZyb20gIFwiLi9jb21wb25lbnRzL01haW5cIjtcclxuaW1wb3J0IEVycm9yIGZyb20gXCIuL2NvbXBvbmVudHMvRXJyb3JcIjtcclxuXHJcblxyXG5pbXBvcnQgeyBTd2l0Y2gsIFJvdXRlIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuXHJcbmZ1bmN0aW9uIEFwcCgpIHtcclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPE5hdmJhci8+XHJcbiAgICAgIDxTd2l0Y2g+XHJcbiAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvXCJjb21wb25lbnQ9e0hvbWV9IC8+XHJcbiAgICAgICAgey8qIDxSb3V0ZSBleGFjdCBwYXRoPVwiL3BsYXkvXCIgY29tcG9uZW50PXtwbGF5fSAvPiAqL31cclxuICAgICAgICA8Um91dGUgY29tcG9uZW50PXtFcnJvcn0gLz5cclxuICAgICAgPC9Td2l0Y2g+XHJcbiAgICA8Lz5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcHA7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xyXG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuaW1wb3J0ICB7IENpdHlQcm92aWRlciB9IGZyb20gXCIuL2NvbnRleHRcIjtcclxuaW1wb3J0IEFwcCBmcm9tICcuL0FwcCc7XHJcblxyXG5cclxuUmVhY3RET00ucmVuZGVyKFxyXG4gICAgPENpdHlQcm92aWRlcj5cclxuICAgICAgICA8QnJvd3NlclJvdXRlcj5cclxuICAgICAgICAgICAgPEFwcCAvPlxyXG4gICAgICAgIDwvQnJvd3NlclJvdXRlcj5cclxuICAgIDwvQ2l0eVByb3ZpZGVyPlxyXG4gICAgLGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JylcclxuKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==