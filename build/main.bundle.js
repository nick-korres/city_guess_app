!function(e){function t(t){for(var r,a,c=t[0],s=t[1],l=t[2],d=0,p=[];d<c.length;d++)a=c[d],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&p.push(i[a][0]),i[a]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(u&&u(t);p.length;)p.shift()();return o.push.apply(o,l||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,c=1;c<n.length;c++){var s=n[c];0!==i[s]&&(r=!1)}r&&(o.splice(t--,1),e=a(a.s=n[0]))}return e}var r={},i={4:0,2:0},o=[];function a(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=r,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var c=window.webpackJsonp=window.webpackJsonp||[],s=c.push.bind(c);c.push=t,c=c.slice();for(var l=0;l<c.length;l++)t(c[l]);var u=s;o.push([33,0]),n()}([,,,,,,,,,function(e,t,n){"use strict";n.d(t,"b",(function(){return E})),n.d(t,"a",(function(){return k}));var r=n(4),i=n.n(r),o=n(10),a=n.n(o),c=n(11),s=n.n(c),l=n(12),u=n.n(l),d=n(2),p=n.n(d),f=n(13),g=n.n(f),h=n(5),m=n.n(h),b=n(14),y=n.n(b),v=n(1),x=n.n(v),w=n(0),O=n.n(w);function C(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function j(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?C(Object(n),!0).forEach((function(t){x()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):C(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function S(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var k=O.a.createContext(),E=function(e){y()(r,e);var t,n=(t=r,function(){var e,n=m()(t);if(S()){var r=m()(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return g()(this,e)});function r(){var e;return s()(this,r),e=n.call(this),x()(p()(e),"loadCities",a()(i.a.mark((function t(){var n;return i.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(e.state.api_url+"images/").then((function(e){return e.json()}));case 2:n=t.sent,e.setState({currCities:n,cities:n});case 4:case"end":return t.stop()}}),t)})))),x()(p()(e),"showThem",(function(){console.log(e.state.currCities)})),x()(p()(e),"changeCurrCities",(function(t,n){t.length>=n?e.setState({currCities:t}):e.setState({currCities:e.state.cities})})),e.state={currCities:[],cities:[],api_url:"https://city-guess-api.herokuapp.com/"},e}return u()(r,[{key:"render",value:function(){return O.a.createElement(k.Provider,{value:j({},this.state,{changeCurrCities:this.changeCurrCities,getCities:this.loadCities,showThem:this.showThem})},this.props.children)}}]),r}(w.Component);k.Consumer},,,,,,,function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r);n(19);t.default=function(e){var t=e.name,n=e.givenOption,r=e.change,o=e.disabled;return i.a.createElement("section",{className:"option"},i.a.createElement("label",{className:o?"optionLabelGreyed":"optionLabel"},i.a.createElement("input",{type:"radio",name:t,value:t,checked:n===t,onChange:r,disabled:o}),t))}},,,function(e,t,n){var r=n(6),i=n(20);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var o={insert:"head",singleton:!1},a=(r(i,o),i.locals?i.locals:{});e.exports=a},function(e,t,n){(t=n(7)(!1)).push([e.i,'.option {\n\n}\n\n.optionLabel{\n    background-image: -moz-linear-gradient(rgb(111, 197, 255),rgb(207, 232, 243),rgb(111, 197, 255));\n    padding-top: 5px;\n    padding-right: 30px;\n    border-radius: 30px;\n    border-style: solid;\n    border-color: rgb(32, 51, 218);\n}\n\n.optionLabelGreyed{\n    background-image: -moz-linear-gradient(rgb(135, 140, 143),rgb(169, 174, 177),rgb(135, 140, 143));\n    padding-top: 5px;\n    padding-right: 30px;\n    border-radius: 30px;\n    border-style: solid;\n    border-color: rgb(32, 51, 218);\n}\n\ninput[type="radio"]{\n    margin: 0 35px 0 0;\n  }\n@media screen and (max-width: 1200px) {\n    input[type="radio"]{\n        margin: 0 0 0 0;\n    }\n    .optionLabel {\n        margin:0;\n        padding:0;\n    }\n}',""]),e.exports=t},function(e,t,n){"use strict";n.r(t);var r=n(4),i=n.n(r),o=n(10),a=n.n(o),c=n(25),s=n.n(c),l=n(11),u=n.n(l),d=n(12),p=n.n(d),f=n(2),g=n.n(f),h=n(13),m=n.n(h),b=n(5),y=n.n(b),v=n(14),x=n.n(v),w=n(1),O=n.n(w),C=n(0),j=n.n(C),S=(n(27),n(9)),k=n(16),E=(n(29),function(e){return e.correct?j.a.createElement("div",{className:"correct"},"correct"):j.a.createElement("div",{className:"false"},"false")}),P=n.p+"20e0796b09919ac322391ed5ceef4abb.png";function D(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var _=function(e){x()(o,e);var t,n,r=(t=o,function(){var e,n=y()(t);if(D()){var r=y()(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return m()(this,e)});function o(e){var t;return u()(this,o),t=r.call(this,e),O()(g()(t),"handleChange",(function(e){t.setState({selectedOption:e.target.value})})),O()(g()(t),"handleFormSubmit",(function(e){e.preventDefault(),t.state.selectedOption===t.state.correctOption.name?t.setState({userSubmited:!0,correct:!0}):t.setState({userSubmited:!0,correct:!1})})),t.state={correctOption:[],selectedOption:"",userSubmited:!1,correct:!1,cityDiplayed:[],cityChoices:[],finishedLoading:!1},t}return p()(o,[{key:"loadCities",value:function(e){console.log("mphka");for(var t=[],n=s()(e),r=1;r<=4;r++){var i=Math.floor(Math.random()*n.length);t.push(n[i]),n.splice(i,1)}(0,this.context.changeCurrCities)(n,4);var o=Math.floor(Math.random()*t.length);console.log("inside loadcities"),console.log(t[o]),this.setState({userSubmited:!1,correctOption:t[o],cityDiplayed:t[o],cityChoices:t})}},{key:"componentDidMount",value:(n=a()(i.a.mark((function e(){var t,n;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.setState({cityDiplayed:{id:0,name:"placeholder",url:P}}),console.log("kati "+this.context),t=this.context.getCities,e.next=5,t();case 5:n=this.context.currCities,this.setState({finishedLoading:!0}),console.log("inside Home.js"),console.log(n),this.loadCities(n);case 10:case"end":return e.stop()}}),e,this)}))),function(){return n.apply(this,arguments)})},{key:"render",value:function(){var e=this,t=this.context,n=t.currCities,r=t.api_url;return j.a.createElement("div",{className:"home-body"},j.a.createElement("img",{src:r+this.state.cityDiplayed.url,alt:this.state.cityDiplayed.name,className:"image"}),console.log("in image"),console.log(this.state.cityDiplayed.url+"  "+r),j.a.createElement("form",{className:"form",onSubmit:this.handleFormSubmit},j.a.createElement("section",null,this.state.cityChoices.map((function(t){return j.a.createElement(k.default,{name:t.name,givenOption:e.state.selectedOption,change:e.handleChange,key:t.id,disabled:e.state.userSubmited})}))),j.a.createElement("input",{type:"submit",papia:"papia",value:"submit"}),j.a.createElement("button",{type:"button",disabled:!this.state.userSubmited,className:this.state.userSubmited?"normal":"greyed",onClick:function(){return e.loadCities(n)}},"Next")),j.a.createElement("div",{className:"result"},this.state.userSubmited?j.a.createElement(E,{correct:this.state.correct}):j.a.createElement("div",null,"Choose a City")),j.a.createElement("div",{className:"test"}," papia "))}}]),o}(j.a.Component);_.contextType=S.a;t.default=_},,,,,,function(e,t,n){var r=n(6),i=n(28);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var o={insert:"head",singleton:!1},a=(r(i,o),i.locals?i.locals:{});e.exports=a},function(e,t,n){(t=n(7)(!1)).push([e.i,".home-body {\n    display: grid;\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n    grid-template-rows: repeat(3, minmax(100px, 1fr));\n    justify-content: center;\n    align-content: center;\n    background-color: rgb(206, 209, 208); \n    /* border: rgb(236, 8, 160);\n    border-style: solid; */\n}\n\n@media screen and (max-width: 1200px) {\n    .home-body{\n        display: flex;\n        flex-direction: column;\n    }\n  }\n\n.result {\n    display: flex;\n    justify-content: center;\n    /* border: rgb(42, 216, 36);\n    border-style: solid; */\n    grid-column: 2;\n    grid-row: 2;\n    align-items: center;\n}\n\n.image {\n    background-color: darkslateblue;\n    border: rgb(84, 85, 87);\n    border-style: groove;\n    border-width: 15px;\n    height: 600px ;\n    width:100%;\n    grid-row: 1 / 3;\n    grid-column: 1;\n}\n\n\n.form {\n    display:flex;\n    flex-direction: row;\n    \n}\n@media screen and (max-width: 500px) {\n    .form{\n           flex-direction: column;\n       }\n     }\n.form > input {\n    align-self: center;\n    justify-self: center;\n    margin-left: 10vw;\n    margin-right: 10vw;\n    padding: 5px;\n    \n}\n\n.form > section {\n    display: flex;\n    flex-direction: column;\n    margin-left: 2vw ;\n    justify-content: space-around;\n    min-width: 200px;\n    max-width: 500px;\n}\n\n@media screen and (max-width: 500px) {\n    .form > section {\n        flex-direction: row;\n    }\n}\n\n.normal{\n    background-color: chartreuse;\n    align-self: center;\n    justify-self: center;\n    margin-left: 1vw;\n    margin-right: 1vw;\n    padding: 20px;\n\n}\n\n.greyed{\n    background-color: rgb(99, 99, 99);\n    color: floralwhite;\n    align-self: center;\n    justify-self: center;\n    margin-left: 1vw;\n    margin-right: 1vw;\n    padding: 20px;\n\n}\n\n\n\n",""]),e.exports=t},function(e,t,n){var r=n(6),i=n(30);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var o={insert:"head",singleton:!1},a=(r(i,o),i.locals?i.locals:{});e.exports=a},function(e,t,n){(t=n(7)(!1)).push([e.i,".correct {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(20, 220, 70);\n    height: 50px;\n    width: 80px;\n\n    /* border: rgb(42, 216, 36);\n    border-style: solid; */\n}\n\n.false {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(220, 20, 20);\n    height: 50px;\n    width: 80px;\n\n    /* border: rgb(42, 216, 36);\n    border-style: solid; */\n}\n\n",""]),e.exports=t},,,function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),o=n(9),a=n(21);t.default=function(){return i.a.createElement(o.b,null,i.a.createElement(a.default,null))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,